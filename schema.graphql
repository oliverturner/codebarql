# source: https://api.graph.cool/simple/v1/cj6w1qgsw03m70112bnc6etxj
# timestamp: Tue Sep 12 2017 14:45:40 GMT+0100 (BST)

enum _ModelMutationType {
  CREATED
  UPDATED
  DELETED
}

# Meta information about the query.
type _QueryMeta {
  count: Int!
}

type Address implements Node {
  city: String
  createdAt: DateTime!
  dbCreatedAt: DateTime!
  dbId: Int!
  dbUpdatedAt: DateTime!
  events(filter: EventFilter, orderBy: EventOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): [Event!]
  flat: String
  id: ID!
  postalCode: String!
  sponsor(filter: SponsorFilter): Sponsor
  street: String
  updatedAt: DateTime!

  # Meta information about the query.
  _eventsMeta(filter: EventFilter, orderBy: EventOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): _QueryMeta!
}

input AddresseventsEvent {
  announceOnly: Boolean!
  audience: String
  coachDescription: String
  coachQuestionnaire: String
  coachSpaces: Int!
  confirmationRequired: Boolean!
  dateAndTime: DateTime!
  dbCreatedAt: DateTime!
  dbId: Int!
  dbUpdatedAt: DateTime!
  description: String
  displayCoaches: Boolean!
  displayStudents: Boolean!
  email: String
  endsAt: DateTime!
  externalUrl: String
  info: String
  invitable: Boolean!
  name: String!
  schedule: String
  showFaq: Boolean!
  slug: String
  studentQuestionnaire: String
  studentSpaces: Int!
  surveysRequired: Boolean!
  titoUrl: String
  url: String
}

input AddressFilter {
  # Logical AND on all given filters.
  AND: [AddressFilter!]

  # Logical OR on all given filters.
  OR: [AddressFilter!]
  city: String

  # All values that are not equal to given value.
  city_not: String

  # All values that are contained in given list.
  city_in: [String!]

  # All values that are not contained in given list.
  city_not_in: [String!]

  # All values less than the given value.
  city_lt: String

  # All values less than or equal the given value.
  city_lte: String

  # All values greater than the given value.
  city_gt: String

  # All values greater than or equal the given value.
  city_gte: String

  # All values containing the given string.
  city_contains: String

  # All values not containing the given string.
  city_not_contains: String

  # All values starting with the given string.
  city_starts_with: String

  # All values not starting with the given string.
  city_not_starts_with: String

  # All values ending with the given string.
  city_ends_with: String

  # All values not ending with the given string.
  city_not_ends_with: String
  createdAt: DateTime

  # All values that are not equal to given value.
  createdAt_not: DateTime

  # All values that are contained in given list.
  createdAt_in: [DateTime!]

  # All values that are not contained in given list.
  createdAt_not_in: [DateTime!]

  # All values less than the given value.
  createdAt_lt: DateTime

  # All values less than or equal the given value.
  createdAt_lte: DateTime

  # All values greater than the given value.
  createdAt_gt: DateTime

  # All values greater than or equal the given value.
  createdAt_gte: DateTime
  dbCreatedAt: DateTime

  # All values that are not equal to given value.
  dbCreatedAt_not: DateTime

  # All values that are contained in given list.
  dbCreatedAt_in: [DateTime!]

  # All values that are not contained in given list.
  dbCreatedAt_not_in: [DateTime!]

  # All values less than the given value.
  dbCreatedAt_lt: DateTime

  # All values less than or equal the given value.
  dbCreatedAt_lte: DateTime

  # All values greater than the given value.
  dbCreatedAt_gt: DateTime

  # All values greater than or equal the given value.
  dbCreatedAt_gte: DateTime
  dbId: Int

  # All values that are not equal to given value.
  dbId_not: Int

  # All values that are contained in given list.
  dbId_in: [Int!]

  # All values that are not contained in given list.
  dbId_not_in: [Int!]

  # All values less than the given value.
  dbId_lt: Int

  # All values less than or equal the given value.
  dbId_lte: Int

  # All values greater than the given value.
  dbId_gt: Int

  # All values greater than or equal the given value.
  dbId_gte: Int
  dbUpdatedAt: DateTime

  # All values that are not equal to given value.
  dbUpdatedAt_not: DateTime

  # All values that are contained in given list.
  dbUpdatedAt_in: [DateTime!]

  # All values that are not contained in given list.
  dbUpdatedAt_not_in: [DateTime!]

  # All values less than the given value.
  dbUpdatedAt_lt: DateTime

  # All values less than or equal the given value.
  dbUpdatedAt_lte: DateTime

  # All values greater than the given value.
  dbUpdatedAt_gt: DateTime

  # All values greater than or equal the given value.
  dbUpdatedAt_gte: DateTime
  flat: String

  # All values that are not equal to given value.
  flat_not: String

  # All values that are contained in given list.
  flat_in: [String!]

  # All values that are not contained in given list.
  flat_not_in: [String!]

  # All values less than the given value.
  flat_lt: String

  # All values less than or equal the given value.
  flat_lte: String

  # All values greater than the given value.
  flat_gt: String

  # All values greater than or equal the given value.
  flat_gte: String

  # All values containing the given string.
  flat_contains: String

  # All values not containing the given string.
  flat_not_contains: String

  # All values starting with the given string.
  flat_starts_with: String

  # All values not starting with the given string.
  flat_not_starts_with: String

  # All values ending with the given string.
  flat_ends_with: String

  # All values not ending with the given string.
  flat_not_ends_with: String
  id: ID

  # All values that are not equal to given value.
  id_not: ID

  # All values that are contained in given list.
  id_in: [ID!]

  # All values that are not contained in given list.
  id_not_in: [ID!]

  # All values less than the given value.
  id_lt: ID

  # All values less than or equal the given value.
  id_lte: ID

  # All values greater than the given value.
  id_gt: ID

  # All values greater than or equal the given value.
  id_gte: ID

  # All values containing the given string.
  id_contains: ID

  # All values not containing the given string.
  id_not_contains: ID

  # All values starting with the given string.
  id_starts_with: ID

  # All values not starting with the given string.
  id_not_starts_with: ID

  # All values ending with the given string.
  id_ends_with: ID

  # All values not ending with the given string.
  id_not_ends_with: ID
  postalCode: String

  # All values that are not equal to given value.
  postalCode_not: String

  # All values that are contained in given list.
  postalCode_in: [String!]

  # All values that are not contained in given list.
  postalCode_not_in: [String!]

  # All values less than the given value.
  postalCode_lt: String

  # All values less than or equal the given value.
  postalCode_lte: String

  # All values greater than the given value.
  postalCode_gt: String

  # All values greater than or equal the given value.
  postalCode_gte: String

  # All values containing the given string.
  postalCode_contains: String

  # All values not containing the given string.
  postalCode_not_contains: String

  # All values starting with the given string.
  postalCode_starts_with: String

  # All values not starting with the given string.
  postalCode_not_starts_with: String

  # All values ending with the given string.
  postalCode_ends_with: String

  # All values not ending with the given string.
  postalCode_not_ends_with: String
  street: String

  # All values that are not equal to given value.
  street_not: String

  # All values that are contained in given list.
  street_in: [String!]

  # All values that are not contained in given list.
  street_not_in: [String!]

  # All values less than the given value.
  street_lt: String

  # All values less than or equal the given value.
  street_lte: String

  # All values greater than the given value.
  street_gt: String

  # All values greater than or equal the given value.
  street_gte: String

  # All values containing the given string.
  street_contains: String

  # All values not containing the given string.
  street_not_contains: String

  # All values starting with the given string.
  street_starts_with: String

  # All values not starting with the given string.
  street_not_starts_with: String

  # All values ending with the given string.
  street_ends_with: String

  # All values not ending with the given string.
  street_not_ends_with: String
  updatedAt: DateTime

  # All values that are not equal to given value.
  updatedAt_not: DateTime

  # All values that are contained in given list.
  updatedAt_in: [DateTime!]

  # All values that are not contained in given list.
  updatedAt_not_in: [DateTime!]

  # All values less than the given value.
  updatedAt_lt: DateTime

  # All values less than or equal the given value.
  updatedAt_lte: DateTime

  # All values greater than the given value.
  updatedAt_gt: DateTime

  # All values greater than or equal the given value.
  updatedAt_gte: DateTime
  events_every: EventFilter
  events_some: EventFilter
  events_none: EventFilter
  sponsor: SponsorFilter
}

enum AddressOrderBy {
  city_ASC
  city_DESC
  createdAt_ASC
  createdAt_DESC
  dbCreatedAt_ASC
  dbCreatedAt_DESC
  dbId_ASC
  dbId_DESC
  dbUpdatedAt_ASC
  dbUpdatedAt_DESC
  flat_ASC
  flat_DESC
  id_ASC
  id_DESC
  postalCode_ASC
  postalCode_DESC
  street_ASC
  street_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type AddressPreviousValues {
  city: String
  createdAt: DateTime!
  dbCreatedAt: DateTime!
  dbId: Int!
  dbUpdatedAt: DateTime!
  flat: String
  id: ID!
  postalCode: String!
  street: String
  updatedAt: DateTime!
}

input AddresssponsorSponsor {
  avatar: String
  contactFirstname: String
  contactSurname: String
  dbCreatedAt: DateTime!
  dbId: Int!
  dbUpdatedAt: DateTime!
  description: String
  email: String
  imageCache: String
  name: String!
  numberOfCoaches: Int
  seats: Int!
  website: String
  chapterId: ID
  chapter: SponsorchapterChapter
  workshopsIds: [ID!]
  workshops: [SponsorworkshopsWorkshop!]
}

input AddressSubscriptionFilter {
  # Logical AND on all given filters.
  AND: [AddressSubscriptionFilter!]

  # Logical OR on all given filters.
  OR: [AddressSubscriptionFilter!]

  # The subscription event gets dispatched when it's listed in mutation_in
  mutation_in: [_ModelMutationType!]

  # The subscription event gets only dispatched when one of the updated fields names is included in this list
  updatedFields_contains: String

  # The subscription event gets only dispatched when all of the field names included in this list have been updated
  updatedFields_contains_every: [String!]

  # The subscription event gets only dispatched when some of the field names included in this list have been updated
  updatedFields_contains_some: [String!]
  node: AddressSubscriptionFilterNode
}

input AddressSubscriptionFilterNode {
  city: String

  # All values that are not equal to given value.
  city_not: String

  # All values that are contained in given list.
  city_in: [String!]

  # All values that are not contained in given list.
  city_not_in: [String!]

  # All values less than the given value.
  city_lt: String

  # All values less than or equal the given value.
  city_lte: String

  # All values greater than the given value.
  city_gt: String

  # All values greater than or equal the given value.
  city_gte: String

  # All values containing the given string.
  city_contains: String

  # All values not containing the given string.
  city_not_contains: String

  # All values starting with the given string.
  city_starts_with: String

  # All values not starting with the given string.
  city_not_starts_with: String

  # All values ending with the given string.
  city_ends_with: String

  # All values not ending with the given string.
  city_not_ends_with: String
  createdAt: DateTime

  # All values that are not equal to given value.
  createdAt_not: DateTime

  # All values that are contained in given list.
  createdAt_in: [DateTime!]

  # All values that are not contained in given list.
  createdAt_not_in: [DateTime!]

  # All values less than the given value.
  createdAt_lt: DateTime

  # All values less than or equal the given value.
  createdAt_lte: DateTime

  # All values greater than the given value.
  createdAt_gt: DateTime

  # All values greater than or equal the given value.
  createdAt_gte: DateTime
  dbCreatedAt: DateTime

  # All values that are not equal to given value.
  dbCreatedAt_not: DateTime

  # All values that are contained in given list.
  dbCreatedAt_in: [DateTime!]

  # All values that are not contained in given list.
  dbCreatedAt_not_in: [DateTime!]

  # All values less than the given value.
  dbCreatedAt_lt: DateTime

  # All values less than or equal the given value.
  dbCreatedAt_lte: DateTime

  # All values greater than the given value.
  dbCreatedAt_gt: DateTime

  # All values greater than or equal the given value.
  dbCreatedAt_gte: DateTime
  dbId: Int

  # All values that are not equal to given value.
  dbId_not: Int

  # All values that are contained in given list.
  dbId_in: [Int!]

  # All values that are not contained in given list.
  dbId_not_in: [Int!]

  # All values less than the given value.
  dbId_lt: Int

  # All values less than or equal the given value.
  dbId_lte: Int

  # All values greater than the given value.
  dbId_gt: Int

  # All values greater than or equal the given value.
  dbId_gte: Int
  dbUpdatedAt: DateTime

  # All values that are not equal to given value.
  dbUpdatedAt_not: DateTime

  # All values that are contained in given list.
  dbUpdatedAt_in: [DateTime!]

  # All values that are not contained in given list.
  dbUpdatedAt_not_in: [DateTime!]

  # All values less than the given value.
  dbUpdatedAt_lt: DateTime

  # All values less than or equal the given value.
  dbUpdatedAt_lte: DateTime

  # All values greater than the given value.
  dbUpdatedAt_gt: DateTime

  # All values greater than or equal the given value.
  dbUpdatedAt_gte: DateTime
  flat: String

  # All values that are not equal to given value.
  flat_not: String

  # All values that are contained in given list.
  flat_in: [String!]

  # All values that are not contained in given list.
  flat_not_in: [String!]

  # All values less than the given value.
  flat_lt: String

  # All values less than or equal the given value.
  flat_lte: String

  # All values greater than the given value.
  flat_gt: String

  # All values greater than or equal the given value.
  flat_gte: String

  # All values containing the given string.
  flat_contains: String

  # All values not containing the given string.
  flat_not_contains: String

  # All values starting with the given string.
  flat_starts_with: String

  # All values not starting with the given string.
  flat_not_starts_with: String

  # All values ending with the given string.
  flat_ends_with: String

  # All values not ending with the given string.
  flat_not_ends_with: String
  id: ID

  # All values that are not equal to given value.
  id_not: ID

  # All values that are contained in given list.
  id_in: [ID!]

  # All values that are not contained in given list.
  id_not_in: [ID!]

  # All values less than the given value.
  id_lt: ID

  # All values less than or equal the given value.
  id_lte: ID

  # All values greater than the given value.
  id_gt: ID

  # All values greater than or equal the given value.
  id_gte: ID

  # All values containing the given string.
  id_contains: ID

  # All values not containing the given string.
  id_not_contains: ID

  # All values starting with the given string.
  id_starts_with: ID

  # All values not starting with the given string.
  id_not_starts_with: ID

  # All values ending with the given string.
  id_ends_with: ID

  # All values not ending with the given string.
  id_not_ends_with: ID
  postalCode: String

  # All values that are not equal to given value.
  postalCode_not: String

  # All values that are contained in given list.
  postalCode_in: [String!]

  # All values that are not contained in given list.
  postalCode_not_in: [String!]

  # All values less than the given value.
  postalCode_lt: String

  # All values less than or equal the given value.
  postalCode_lte: String

  # All values greater than the given value.
  postalCode_gt: String

  # All values greater than or equal the given value.
  postalCode_gte: String

  # All values containing the given string.
  postalCode_contains: String

  # All values not containing the given string.
  postalCode_not_contains: String

  # All values starting with the given string.
  postalCode_starts_with: String

  # All values not starting with the given string.
  postalCode_not_starts_with: String

  # All values ending with the given string.
  postalCode_ends_with: String

  # All values not ending with the given string.
  postalCode_not_ends_with: String
  street: String

  # All values that are not equal to given value.
  street_not: String

  # All values that are contained in given list.
  street_in: [String!]

  # All values that are not contained in given list.
  street_not_in: [String!]

  # All values less than the given value.
  street_lt: String

  # All values less than or equal the given value.
  street_lte: String

  # All values greater than the given value.
  street_gt: String

  # All values greater than or equal the given value.
  street_gte: String

  # All values containing the given string.
  street_contains: String

  # All values not containing the given string.
  street_not_contains: String

  # All values starting with the given string.
  street_starts_with: String

  # All values not starting with the given string.
  street_not_starts_with: String

  # All values ending with the given string.
  street_ends_with: String

  # All values not ending with the given string.
  street_not_ends_with: String
  updatedAt: DateTime

  # All values that are not equal to given value.
  updatedAt_not: DateTime

  # All values that are contained in given list.
  updatedAt_in: [DateTime!]

  # All values that are not contained in given list.
  updatedAt_not_in: [DateTime!]

  # All values less than the given value.
  updatedAt_lt: DateTime

  # All values less than or equal the given value.
  updatedAt_lte: DateTime

  # All values greater than the given value.
  updatedAt_gt: DateTime

  # All values greater than or equal the given value.
  updatedAt_gte: DateTime
  events_every: EventFilter
  events_some: EventFilter
  events_none: EventFilter
  sponsor: SponsorFilter
}

type AddressSubscriptionPayload {
  mutation: _ModelMutationType!
  node: Address
  updatedFields: [String!]
  previousValues: AddressPreviousValues
}

type AddToAdminBansPayload {
  adminMember: Member
  adminBansBan: Ban
}

type AddToChapterMembersPayload {
  subscriptionsChapter: Chapter
  membersMember: Member
}

type AddToChapterSponsorPayload {
  sponsorsSponsor: Sponsor
  chapterChapter: Chapter
}

type AddToChapterWorkshopsPayload {
  chapterChapter: Chapter
  workshopsWorkshop: Workshop
}

type AddToEventAddressPayload {
  addressAddress: Address
  eventsEvent: Event
}

type AddToJobApprovalsPayload {
  approvedByMember: Member
  jobApprovalsJob: Job
}

type AddToJobPostingsPayload {
  createdByMember: Member
  jobPostingsJob: Job
}

type AddToMemberBansPayload {
  memberMember: Member
  bansBan: Ban
}

type AddToMemberRolePayload {
  membersMember: Member
  roleRole: Role
}

type AddToWorkshopMembersPayload {
  workshopsAttendedWorkshop: Workshop
  attendeesMember: Member
}

type AddToWorkshopSponsorPayload {
  sponsorSponsor: Sponsor
  workshopsWorkshop: Workshop
}

input AUTH_PROVIDER_AUTH0 {
  # Is returned when calling any of the Auth0 functions which invoke
  # authentication. This includes calls to the Lock widget, to the auth0.js
  # library, or the libraries for other languages. See
  # https://auth0.com/docs/tokens/id_token for more detail
  idToken: String!
}

input AuthProviderSignupData {
  auth0: AUTH_PROVIDER_AUTH0
}

type Ban implements Node {
  admin(filter: MemberFilter): Member
  createdAt: DateTime!
  dbCreatedAt: DateTime!
  dbId: Int!
  dbUpdatedAt: DateTime!
  expiresAt: DateTime!
  explanation: String!
  id: ID!
  member(filter: MemberFilter): Member
  note: String
  permanent: Boolean!
  reason: String!
  updatedAt: DateTime!
}

input BanadminMember {
  about: String
  canLogIn: Boolean!
  dbCreatedAt: DateTime!
  dbId: Int!
  dbUpdatedAt: DateTime!
  email: String!
  firstname: String
  mobile: String
  pronouns: String
  receivedCoachWelcomeEmail: Boolean!
  receivedStudentWelcomeEmail: Boolean!
  surname: String
  twitter: String
  roleId: ID
  role: MemberroleRole
  adminBansIds: [ID!]
  adminBans: [MemberadminBansBan!]
  bansIds: [ID!]
  bans: [MemberbansBan!]
  jobApprovalsIds: [ID!]
  jobApprovals: [MemberjobApprovalsJob!]
  jobPostingsIds: [ID!]
  jobPostings: [MemberjobPostingsJob!]
  subscriptionsIds: [ID!]
  subscriptions: [MembersubscriptionsChapter!]
  workshopsAttendedIds: [ID!]
  workshopsAttended: [MemberworkshopsAttendedWorkshop!]
}

input BanFilter {
  # Logical AND on all given filters.
  AND: [BanFilter!]

  # Logical OR on all given filters.
  OR: [BanFilter!]
  createdAt: DateTime

  # All values that are not equal to given value.
  createdAt_not: DateTime

  # All values that are contained in given list.
  createdAt_in: [DateTime!]

  # All values that are not contained in given list.
  createdAt_not_in: [DateTime!]

  # All values less than the given value.
  createdAt_lt: DateTime

  # All values less than or equal the given value.
  createdAt_lte: DateTime

  # All values greater than the given value.
  createdAt_gt: DateTime

  # All values greater than or equal the given value.
  createdAt_gte: DateTime
  dbCreatedAt: DateTime

  # All values that are not equal to given value.
  dbCreatedAt_not: DateTime

  # All values that are contained in given list.
  dbCreatedAt_in: [DateTime!]

  # All values that are not contained in given list.
  dbCreatedAt_not_in: [DateTime!]

  # All values less than the given value.
  dbCreatedAt_lt: DateTime

  # All values less than or equal the given value.
  dbCreatedAt_lte: DateTime

  # All values greater than the given value.
  dbCreatedAt_gt: DateTime

  # All values greater than or equal the given value.
  dbCreatedAt_gte: DateTime
  dbId: Int

  # All values that are not equal to given value.
  dbId_not: Int

  # All values that are contained in given list.
  dbId_in: [Int!]

  # All values that are not contained in given list.
  dbId_not_in: [Int!]

  # All values less than the given value.
  dbId_lt: Int

  # All values less than or equal the given value.
  dbId_lte: Int

  # All values greater than the given value.
  dbId_gt: Int

  # All values greater than or equal the given value.
  dbId_gte: Int
  dbUpdatedAt: DateTime

  # All values that are not equal to given value.
  dbUpdatedAt_not: DateTime

  # All values that are contained in given list.
  dbUpdatedAt_in: [DateTime!]

  # All values that are not contained in given list.
  dbUpdatedAt_not_in: [DateTime!]

  # All values less than the given value.
  dbUpdatedAt_lt: DateTime

  # All values less than or equal the given value.
  dbUpdatedAt_lte: DateTime

  # All values greater than the given value.
  dbUpdatedAt_gt: DateTime

  # All values greater than or equal the given value.
  dbUpdatedAt_gte: DateTime
  expiresAt: DateTime

  # All values that are not equal to given value.
  expiresAt_not: DateTime

  # All values that are contained in given list.
  expiresAt_in: [DateTime!]

  # All values that are not contained in given list.
  expiresAt_not_in: [DateTime!]

  # All values less than the given value.
  expiresAt_lt: DateTime

  # All values less than or equal the given value.
  expiresAt_lte: DateTime

  # All values greater than the given value.
  expiresAt_gt: DateTime

  # All values greater than or equal the given value.
  expiresAt_gte: DateTime
  explanation: String

  # All values that are not equal to given value.
  explanation_not: String

  # All values that are contained in given list.
  explanation_in: [String!]

  # All values that are not contained in given list.
  explanation_not_in: [String!]

  # All values less than the given value.
  explanation_lt: String

  # All values less than or equal the given value.
  explanation_lte: String

  # All values greater than the given value.
  explanation_gt: String

  # All values greater than or equal the given value.
  explanation_gte: String

  # All values containing the given string.
  explanation_contains: String

  # All values not containing the given string.
  explanation_not_contains: String

  # All values starting with the given string.
  explanation_starts_with: String

  # All values not starting with the given string.
  explanation_not_starts_with: String

  # All values ending with the given string.
  explanation_ends_with: String

  # All values not ending with the given string.
  explanation_not_ends_with: String
  id: ID

  # All values that are not equal to given value.
  id_not: ID

  # All values that are contained in given list.
  id_in: [ID!]

  # All values that are not contained in given list.
  id_not_in: [ID!]

  # All values less than the given value.
  id_lt: ID

  # All values less than or equal the given value.
  id_lte: ID

  # All values greater than the given value.
  id_gt: ID

  # All values greater than or equal the given value.
  id_gte: ID

  # All values containing the given string.
  id_contains: ID

  # All values not containing the given string.
  id_not_contains: ID

  # All values starting with the given string.
  id_starts_with: ID

  # All values not starting with the given string.
  id_not_starts_with: ID

  # All values ending with the given string.
  id_ends_with: ID

  # All values not ending with the given string.
  id_not_ends_with: ID
  note: String

  # All values that are not equal to given value.
  note_not: String

  # All values that are contained in given list.
  note_in: [String!]

  # All values that are not contained in given list.
  note_not_in: [String!]

  # All values less than the given value.
  note_lt: String

  # All values less than or equal the given value.
  note_lte: String

  # All values greater than the given value.
  note_gt: String

  # All values greater than or equal the given value.
  note_gte: String

  # All values containing the given string.
  note_contains: String

  # All values not containing the given string.
  note_not_contains: String

  # All values starting with the given string.
  note_starts_with: String

  # All values not starting with the given string.
  note_not_starts_with: String

  # All values ending with the given string.
  note_ends_with: String

  # All values not ending with the given string.
  note_not_ends_with: String
  permanent: Boolean

  # All values that are not equal to given value.
  permanent_not: Boolean
  reason: String

  # All values that are not equal to given value.
  reason_not: String

  # All values that are contained in given list.
  reason_in: [String!]

  # All values that are not contained in given list.
  reason_not_in: [String!]

  # All values less than the given value.
  reason_lt: String

  # All values less than or equal the given value.
  reason_lte: String

  # All values greater than the given value.
  reason_gt: String

  # All values greater than or equal the given value.
  reason_gte: String

  # All values containing the given string.
  reason_contains: String

  # All values not containing the given string.
  reason_not_contains: String

  # All values starting with the given string.
  reason_starts_with: String

  # All values not starting with the given string.
  reason_not_starts_with: String

  # All values ending with the given string.
  reason_ends_with: String

  # All values not ending with the given string.
  reason_not_ends_with: String
  updatedAt: DateTime

  # All values that are not equal to given value.
  updatedAt_not: DateTime

  # All values that are contained in given list.
  updatedAt_in: [DateTime!]

  # All values that are not contained in given list.
  updatedAt_not_in: [DateTime!]

  # All values less than the given value.
  updatedAt_lt: DateTime

  # All values less than or equal the given value.
  updatedAt_lte: DateTime

  # All values greater than the given value.
  updatedAt_gt: DateTime

  # All values greater than or equal the given value.
  updatedAt_gte: DateTime
  admin: MemberFilter
  member: MemberFilter
}

input BanmemberMember {
  about: String
  canLogIn: Boolean!
  dbCreatedAt: DateTime!
  dbId: Int!
  dbUpdatedAt: DateTime!
  email: String!
  firstname: String
  mobile: String
  pronouns: String
  receivedCoachWelcomeEmail: Boolean!
  receivedStudentWelcomeEmail: Boolean!
  surname: String
  twitter: String
  roleId: ID
  role: MemberroleRole
  adminBansIds: [ID!]
  adminBans: [MemberadminBansBan!]
  bansIds: [ID!]
  bans: [MemberbansBan!]
  jobApprovalsIds: [ID!]
  jobApprovals: [MemberjobApprovalsJob!]
  jobPostingsIds: [ID!]
  jobPostings: [MemberjobPostingsJob!]
  subscriptionsIds: [ID!]
  subscriptions: [MembersubscriptionsChapter!]
  workshopsAttendedIds: [ID!]
  workshopsAttended: [MemberworkshopsAttendedWorkshop!]
}

enum BanOrderBy {
  createdAt_ASC
  createdAt_DESC
  dbCreatedAt_ASC
  dbCreatedAt_DESC
  dbId_ASC
  dbId_DESC
  dbUpdatedAt_ASC
  dbUpdatedAt_DESC
  expiresAt_ASC
  expiresAt_DESC
  explanation_ASC
  explanation_DESC
  id_ASC
  id_DESC
  note_ASC
  note_DESC
  permanent_ASC
  permanent_DESC
  reason_ASC
  reason_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type BanPreviousValues {
  createdAt: DateTime!
  dbCreatedAt: DateTime!
  dbId: Int!
  dbUpdatedAt: DateTime!
  expiresAt: DateTime!
  explanation: String!
  id: ID!
  note: String
  permanent: Boolean!
  reason: String!
  updatedAt: DateTime!
}

input BanSubscriptionFilter {
  # Logical AND on all given filters.
  AND: [BanSubscriptionFilter!]

  # Logical OR on all given filters.
  OR: [BanSubscriptionFilter!]

  # The subscription event gets dispatched when it's listed in mutation_in
  mutation_in: [_ModelMutationType!]

  # The subscription event gets only dispatched when one of the updated fields names is included in this list
  updatedFields_contains: String

  # The subscription event gets only dispatched when all of the field names included in this list have been updated
  updatedFields_contains_every: [String!]

  # The subscription event gets only dispatched when some of the field names included in this list have been updated
  updatedFields_contains_some: [String!]
  node: BanSubscriptionFilterNode
}

input BanSubscriptionFilterNode {
  createdAt: DateTime

  # All values that are not equal to given value.
  createdAt_not: DateTime

  # All values that are contained in given list.
  createdAt_in: [DateTime!]

  # All values that are not contained in given list.
  createdAt_not_in: [DateTime!]

  # All values less than the given value.
  createdAt_lt: DateTime

  # All values less than or equal the given value.
  createdAt_lte: DateTime

  # All values greater than the given value.
  createdAt_gt: DateTime

  # All values greater than or equal the given value.
  createdAt_gte: DateTime
  dbCreatedAt: DateTime

  # All values that are not equal to given value.
  dbCreatedAt_not: DateTime

  # All values that are contained in given list.
  dbCreatedAt_in: [DateTime!]

  # All values that are not contained in given list.
  dbCreatedAt_not_in: [DateTime!]

  # All values less than the given value.
  dbCreatedAt_lt: DateTime

  # All values less than or equal the given value.
  dbCreatedAt_lte: DateTime

  # All values greater than the given value.
  dbCreatedAt_gt: DateTime

  # All values greater than or equal the given value.
  dbCreatedAt_gte: DateTime
  dbId: Int

  # All values that are not equal to given value.
  dbId_not: Int

  # All values that are contained in given list.
  dbId_in: [Int!]

  # All values that are not contained in given list.
  dbId_not_in: [Int!]

  # All values less than the given value.
  dbId_lt: Int

  # All values less than or equal the given value.
  dbId_lte: Int

  # All values greater than the given value.
  dbId_gt: Int

  # All values greater than or equal the given value.
  dbId_gte: Int
  dbUpdatedAt: DateTime

  # All values that are not equal to given value.
  dbUpdatedAt_not: DateTime

  # All values that are contained in given list.
  dbUpdatedAt_in: [DateTime!]

  # All values that are not contained in given list.
  dbUpdatedAt_not_in: [DateTime!]

  # All values less than the given value.
  dbUpdatedAt_lt: DateTime

  # All values less than or equal the given value.
  dbUpdatedAt_lte: DateTime

  # All values greater than the given value.
  dbUpdatedAt_gt: DateTime

  # All values greater than or equal the given value.
  dbUpdatedAt_gte: DateTime
  expiresAt: DateTime

  # All values that are not equal to given value.
  expiresAt_not: DateTime

  # All values that are contained in given list.
  expiresAt_in: [DateTime!]

  # All values that are not contained in given list.
  expiresAt_not_in: [DateTime!]

  # All values less than the given value.
  expiresAt_lt: DateTime

  # All values less than or equal the given value.
  expiresAt_lte: DateTime

  # All values greater than the given value.
  expiresAt_gt: DateTime

  # All values greater than or equal the given value.
  expiresAt_gte: DateTime
  explanation: String

  # All values that are not equal to given value.
  explanation_not: String

  # All values that are contained in given list.
  explanation_in: [String!]

  # All values that are not contained in given list.
  explanation_not_in: [String!]

  # All values less than the given value.
  explanation_lt: String

  # All values less than or equal the given value.
  explanation_lte: String

  # All values greater than the given value.
  explanation_gt: String

  # All values greater than or equal the given value.
  explanation_gte: String

  # All values containing the given string.
  explanation_contains: String

  # All values not containing the given string.
  explanation_not_contains: String

  # All values starting with the given string.
  explanation_starts_with: String

  # All values not starting with the given string.
  explanation_not_starts_with: String

  # All values ending with the given string.
  explanation_ends_with: String

  # All values not ending with the given string.
  explanation_not_ends_with: String
  id: ID

  # All values that are not equal to given value.
  id_not: ID

  # All values that are contained in given list.
  id_in: [ID!]

  # All values that are not contained in given list.
  id_not_in: [ID!]

  # All values less than the given value.
  id_lt: ID

  # All values less than or equal the given value.
  id_lte: ID

  # All values greater than the given value.
  id_gt: ID

  # All values greater than or equal the given value.
  id_gte: ID

  # All values containing the given string.
  id_contains: ID

  # All values not containing the given string.
  id_not_contains: ID

  # All values starting with the given string.
  id_starts_with: ID

  # All values not starting with the given string.
  id_not_starts_with: ID

  # All values ending with the given string.
  id_ends_with: ID

  # All values not ending with the given string.
  id_not_ends_with: ID
  note: String

  # All values that are not equal to given value.
  note_not: String

  # All values that are contained in given list.
  note_in: [String!]

  # All values that are not contained in given list.
  note_not_in: [String!]

  # All values less than the given value.
  note_lt: String

  # All values less than or equal the given value.
  note_lte: String

  # All values greater than the given value.
  note_gt: String

  # All values greater than or equal the given value.
  note_gte: String

  # All values containing the given string.
  note_contains: String

  # All values not containing the given string.
  note_not_contains: String

  # All values starting with the given string.
  note_starts_with: String

  # All values not starting with the given string.
  note_not_starts_with: String

  # All values ending with the given string.
  note_ends_with: String

  # All values not ending with the given string.
  note_not_ends_with: String
  permanent: Boolean

  # All values that are not equal to given value.
  permanent_not: Boolean
  reason: String

  # All values that are not equal to given value.
  reason_not: String

  # All values that are contained in given list.
  reason_in: [String!]

  # All values that are not contained in given list.
  reason_not_in: [String!]

  # All values less than the given value.
  reason_lt: String

  # All values less than or equal the given value.
  reason_lte: String

  # All values greater than the given value.
  reason_gt: String

  # All values greater than or equal the given value.
  reason_gte: String

  # All values containing the given string.
  reason_contains: String

  # All values not containing the given string.
  reason_not_contains: String

  # All values starting with the given string.
  reason_starts_with: String

  # All values not starting with the given string.
  reason_not_starts_with: String

  # All values ending with the given string.
  reason_ends_with: String

  # All values not ending with the given string.
  reason_not_ends_with: String
  updatedAt: DateTime

  # All values that are not equal to given value.
  updatedAt_not: DateTime

  # All values that are contained in given list.
  updatedAt_in: [DateTime!]

  # All values that are not contained in given list.
  updatedAt_not_in: [DateTime!]

  # All values less than the given value.
  updatedAt_lt: DateTime

  # All values less than or equal the given value.
  updatedAt_lte: DateTime

  # All values greater than the given value.
  updatedAt_gt: DateTime

  # All values greater than or equal the given value.
  updatedAt_gte: DateTime
  admin: MemberFilter
  member: MemberFilter
}

type BanSubscriptionPayload {
  mutation: _ModelMutationType!
  node: Ban
  updatedFields: [String!]
  previousValues: BanPreviousValues
}

type Chapter implements Node {
  active: Boolean!
  city: String!
  createdAt: DateTime!
  dbCreatedAt: DateTime!
  dbId: Int!
  dbUpdatedAt: DateTime!
  email: String!
  id: ID!
  members(filter: MemberFilter, orderBy: MemberOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): [Member!]
  name: String!
  slug: String!
  sponsors(filter: SponsorFilter, orderBy: SponsorOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): [Sponsor!]
  twitter: String
  updatedAt: DateTime!
  workshops(filter: WorkshopFilter, orderBy: WorkshopOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): [Workshop!]

  # Meta information about the query.
  _membersMeta(filter: MemberFilter, orderBy: MemberOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): _QueryMeta!

  # Meta information about the query.
  _sponsorsMeta(filter: SponsorFilter, orderBy: SponsorOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): _QueryMeta!

  # Meta information about the query.
  _workshopsMeta(filter: WorkshopFilter, orderBy: WorkshopOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): _QueryMeta!
}

input ChapterFilter {
  # Logical AND on all given filters.
  AND: [ChapterFilter!]

  # Logical OR on all given filters.
  OR: [ChapterFilter!]
  active: Boolean

  # All values that are not equal to given value.
  active_not: Boolean
  city: String

  # All values that are not equal to given value.
  city_not: String

  # All values that are contained in given list.
  city_in: [String!]

  # All values that are not contained in given list.
  city_not_in: [String!]

  # All values less than the given value.
  city_lt: String

  # All values less than or equal the given value.
  city_lte: String

  # All values greater than the given value.
  city_gt: String

  # All values greater than or equal the given value.
  city_gte: String

  # All values containing the given string.
  city_contains: String

  # All values not containing the given string.
  city_not_contains: String

  # All values starting with the given string.
  city_starts_with: String

  # All values not starting with the given string.
  city_not_starts_with: String

  # All values ending with the given string.
  city_ends_with: String

  # All values not ending with the given string.
  city_not_ends_with: String
  createdAt: DateTime

  # All values that are not equal to given value.
  createdAt_not: DateTime

  # All values that are contained in given list.
  createdAt_in: [DateTime!]

  # All values that are not contained in given list.
  createdAt_not_in: [DateTime!]

  # All values less than the given value.
  createdAt_lt: DateTime

  # All values less than or equal the given value.
  createdAt_lte: DateTime

  # All values greater than the given value.
  createdAt_gt: DateTime

  # All values greater than or equal the given value.
  createdAt_gte: DateTime
  dbCreatedAt: DateTime

  # All values that are not equal to given value.
  dbCreatedAt_not: DateTime

  # All values that are contained in given list.
  dbCreatedAt_in: [DateTime!]

  # All values that are not contained in given list.
  dbCreatedAt_not_in: [DateTime!]

  # All values less than the given value.
  dbCreatedAt_lt: DateTime

  # All values less than or equal the given value.
  dbCreatedAt_lte: DateTime

  # All values greater than the given value.
  dbCreatedAt_gt: DateTime

  # All values greater than or equal the given value.
  dbCreatedAt_gte: DateTime
  dbId: Int

  # All values that are not equal to given value.
  dbId_not: Int

  # All values that are contained in given list.
  dbId_in: [Int!]

  # All values that are not contained in given list.
  dbId_not_in: [Int!]

  # All values less than the given value.
  dbId_lt: Int

  # All values less than or equal the given value.
  dbId_lte: Int

  # All values greater than the given value.
  dbId_gt: Int

  # All values greater than or equal the given value.
  dbId_gte: Int
  dbUpdatedAt: DateTime

  # All values that are not equal to given value.
  dbUpdatedAt_not: DateTime

  # All values that are contained in given list.
  dbUpdatedAt_in: [DateTime!]

  # All values that are not contained in given list.
  dbUpdatedAt_not_in: [DateTime!]

  # All values less than the given value.
  dbUpdatedAt_lt: DateTime

  # All values less than or equal the given value.
  dbUpdatedAt_lte: DateTime

  # All values greater than the given value.
  dbUpdatedAt_gt: DateTime

  # All values greater than or equal the given value.
  dbUpdatedAt_gte: DateTime
  email: String

  # All values that are not equal to given value.
  email_not: String

  # All values that are contained in given list.
  email_in: [String!]

  # All values that are not contained in given list.
  email_not_in: [String!]

  # All values less than the given value.
  email_lt: String

  # All values less than or equal the given value.
  email_lte: String

  # All values greater than the given value.
  email_gt: String

  # All values greater than or equal the given value.
  email_gte: String

  # All values containing the given string.
  email_contains: String

  # All values not containing the given string.
  email_not_contains: String

  # All values starting with the given string.
  email_starts_with: String

  # All values not starting with the given string.
  email_not_starts_with: String

  # All values ending with the given string.
  email_ends_with: String

  # All values not ending with the given string.
  email_not_ends_with: String
  id: ID

  # All values that are not equal to given value.
  id_not: ID

  # All values that are contained in given list.
  id_in: [ID!]

  # All values that are not contained in given list.
  id_not_in: [ID!]

  # All values less than the given value.
  id_lt: ID

  # All values less than or equal the given value.
  id_lte: ID

  # All values greater than the given value.
  id_gt: ID

  # All values greater than or equal the given value.
  id_gte: ID

  # All values containing the given string.
  id_contains: ID

  # All values not containing the given string.
  id_not_contains: ID

  # All values starting with the given string.
  id_starts_with: ID

  # All values not starting with the given string.
  id_not_starts_with: ID

  # All values ending with the given string.
  id_ends_with: ID

  # All values not ending with the given string.
  id_not_ends_with: ID
  name: String

  # All values that are not equal to given value.
  name_not: String

  # All values that are contained in given list.
  name_in: [String!]

  # All values that are not contained in given list.
  name_not_in: [String!]

  # All values less than the given value.
  name_lt: String

  # All values less than or equal the given value.
  name_lte: String

  # All values greater than the given value.
  name_gt: String

  # All values greater than or equal the given value.
  name_gte: String

  # All values containing the given string.
  name_contains: String

  # All values not containing the given string.
  name_not_contains: String

  # All values starting with the given string.
  name_starts_with: String

  # All values not starting with the given string.
  name_not_starts_with: String

  # All values ending with the given string.
  name_ends_with: String

  # All values not ending with the given string.
  name_not_ends_with: String
  slug: String

  # All values that are not equal to given value.
  slug_not: String

  # All values that are contained in given list.
  slug_in: [String!]

  # All values that are not contained in given list.
  slug_not_in: [String!]

  # All values less than the given value.
  slug_lt: String

  # All values less than or equal the given value.
  slug_lte: String

  # All values greater than the given value.
  slug_gt: String

  # All values greater than or equal the given value.
  slug_gte: String

  # All values containing the given string.
  slug_contains: String

  # All values not containing the given string.
  slug_not_contains: String

  # All values starting with the given string.
  slug_starts_with: String

  # All values not starting with the given string.
  slug_not_starts_with: String

  # All values ending with the given string.
  slug_ends_with: String

  # All values not ending with the given string.
  slug_not_ends_with: String
  twitter: String

  # All values that are not equal to given value.
  twitter_not: String

  # All values that are contained in given list.
  twitter_in: [String!]

  # All values that are not contained in given list.
  twitter_not_in: [String!]

  # All values less than the given value.
  twitter_lt: String

  # All values less than or equal the given value.
  twitter_lte: String

  # All values greater than the given value.
  twitter_gt: String

  # All values greater than or equal the given value.
  twitter_gte: String

  # All values containing the given string.
  twitter_contains: String

  # All values not containing the given string.
  twitter_not_contains: String

  # All values starting with the given string.
  twitter_starts_with: String

  # All values not starting with the given string.
  twitter_not_starts_with: String

  # All values ending with the given string.
  twitter_ends_with: String

  # All values not ending with the given string.
  twitter_not_ends_with: String
  updatedAt: DateTime

  # All values that are not equal to given value.
  updatedAt_not: DateTime

  # All values that are contained in given list.
  updatedAt_in: [DateTime!]

  # All values that are not contained in given list.
  updatedAt_not_in: [DateTime!]

  # All values less than the given value.
  updatedAt_lt: DateTime

  # All values less than or equal the given value.
  updatedAt_lte: DateTime

  # All values greater than the given value.
  updatedAt_gt: DateTime

  # All values greater than or equal the given value.
  updatedAt_gte: DateTime
  members_every: MemberFilter
  members_some: MemberFilter
  members_none: MemberFilter
  sponsors_every: SponsorFilter
  sponsors_some: SponsorFilter
  sponsors_none: SponsorFilter
  workshops_every: WorkshopFilter
  workshops_some: WorkshopFilter
  workshops_none: WorkshopFilter
}

input ChaptermembersMember {
  about: String
  canLogIn: Boolean!
  dbCreatedAt: DateTime!
  dbId: Int!
  dbUpdatedAt: DateTime!
  email: String!
  firstname: String
  mobile: String
  pronouns: String
  receivedCoachWelcomeEmail: Boolean!
  receivedStudentWelcomeEmail: Boolean!
  surname: String
  twitter: String
  roleId: ID
  role: MemberroleRole
  adminBansIds: [ID!]
  adminBans: [MemberadminBansBan!]
  bansIds: [ID!]
  bans: [MemberbansBan!]
  jobApprovalsIds: [ID!]
  jobApprovals: [MemberjobApprovalsJob!]
  jobPostingsIds: [ID!]
  jobPostings: [MemberjobPostingsJob!]
  subscriptionsIds: [ID!]
  subscriptions: [MembersubscriptionsChapter!]
  workshopsAttendedIds: [ID!]
  workshopsAttended: [MemberworkshopsAttendedWorkshop!]
}

enum ChapterOrderBy {
  active_ASC
  active_DESC
  city_ASC
  city_DESC
  createdAt_ASC
  createdAt_DESC
  dbCreatedAt_ASC
  dbCreatedAt_DESC
  dbId_ASC
  dbId_DESC
  dbUpdatedAt_ASC
  dbUpdatedAt_DESC
  email_ASC
  email_DESC
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  slug_ASC
  slug_DESC
  twitter_ASC
  twitter_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type ChapterPreviousValues {
  active: Boolean!
  city: String!
  createdAt: DateTime!
  dbCreatedAt: DateTime!
  dbId: Int!
  dbUpdatedAt: DateTime!
  email: String!
  id: ID!
  name: String!
  slug: String!
  twitter: String
  updatedAt: DateTime!
}

input ChaptersponsorsSponsor {
  avatar: String
  contactFirstname: String
  contactSurname: String
  dbCreatedAt: DateTime!
  dbId: Int!
  dbUpdatedAt: DateTime!
  description: String
  email: String
  imageCache: String
  name: String!
  numberOfCoaches: Int
  seats: Int!
  website: String
  addressId: ID
  address: SponsoraddressAddress
  workshopsIds: [ID!]
  workshops: [SponsorworkshopsWorkshop!]
}

input ChapterSubscriptionFilter {
  # Logical AND on all given filters.
  AND: [ChapterSubscriptionFilter!]

  # Logical OR on all given filters.
  OR: [ChapterSubscriptionFilter!]

  # The subscription event gets dispatched when it's listed in mutation_in
  mutation_in: [_ModelMutationType!]

  # The subscription event gets only dispatched when one of the updated fields names is included in this list
  updatedFields_contains: String

  # The subscription event gets only dispatched when all of the field names included in this list have been updated
  updatedFields_contains_every: [String!]

  # The subscription event gets only dispatched when some of the field names included in this list have been updated
  updatedFields_contains_some: [String!]
  node: ChapterSubscriptionFilterNode
}

input ChapterSubscriptionFilterNode {
  active: Boolean

  # All values that are not equal to given value.
  active_not: Boolean
  city: String

  # All values that are not equal to given value.
  city_not: String

  # All values that are contained in given list.
  city_in: [String!]

  # All values that are not contained in given list.
  city_not_in: [String!]

  # All values less than the given value.
  city_lt: String

  # All values less than or equal the given value.
  city_lte: String

  # All values greater than the given value.
  city_gt: String

  # All values greater than or equal the given value.
  city_gte: String

  # All values containing the given string.
  city_contains: String

  # All values not containing the given string.
  city_not_contains: String

  # All values starting with the given string.
  city_starts_with: String

  # All values not starting with the given string.
  city_not_starts_with: String

  # All values ending with the given string.
  city_ends_with: String

  # All values not ending with the given string.
  city_not_ends_with: String
  createdAt: DateTime

  # All values that are not equal to given value.
  createdAt_not: DateTime

  # All values that are contained in given list.
  createdAt_in: [DateTime!]

  # All values that are not contained in given list.
  createdAt_not_in: [DateTime!]

  # All values less than the given value.
  createdAt_lt: DateTime

  # All values less than or equal the given value.
  createdAt_lte: DateTime

  # All values greater than the given value.
  createdAt_gt: DateTime

  # All values greater than or equal the given value.
  createdAt_gte: DateTime
  dbCreatedAt: DateTime

  # All values that are not equal to given value.
  dbCreatedAt_not: DateTime

  # All values that are contained in given list.
  dbCreatedAt_in: [DateTime!]

  # All values that are not contained in given list.
  dbCreatedAt_not_in: [DateTime!]

  # All values less than the given value.
  dbCreatedAt_lt: DateTime

  # All values less than or equal the given value.
  dbCreatedAt_lte: DateTime

  # All values greater than the given value.
  dbCreatedAt_gt: DateTime

  # All values greater than or equal the given value.
  dbCreatedAt_gte: DateTime
  dbId: Int

  # All values that are not equal to given value.
  dbId_not: Int

  # All values that are contained in given list.
  dbId_in: [Int!]

  # All values that are not contained in given list.
  dbId_not_in: [Int!]

  # All values less than the given value.
  dbId_lt: Int

  # All values less than or equal the given value.
  dbId_lte: Int

  # All values greater than the given value.
  dbId_gt: Int

  # All values greater than or equal the given value.
  dbId_gte: Int
  dbUpdatedAt: DateTime

  # All values that are not equal to given value.
  dbUpdatedAt_not: DateTime

  # All values that are contained in given list.
  dbUpdatedAt_in: [DateTime!]

  # All values that are not contained in given list.
  dbUpdatedAt_not_in: [DateTime!]

  # All values less than the given value.
  dbUpdatedAt_lt: DateTime

  # All values less than or equal the given value.
  dbUpdatedAt_lte: DateTime

  # All values greater than the given value.
  dbUpdatedAt_gt: DateTime

  # All values greater than or equal the given value.
  dbUpdatedAt_gte: DateTime
  email: String

  # All values that are not equal to given value.
  email_not: String

  # All values that are contained in given list.
  email_in: [String!]

  # All values that are not contained in given list.
  email_not_in: [String!]

  # All values less than the given value.
  email_lt: String

  # All values less than or equal the given value.
  email_lte: String

  # All values greater than the given value.
  email_gt: String

  # All values greater than or equal the given value.
  email_gte: String

  # All values containing the given string.
  email_contains: String

  # All values not containing the given string.
  email_not_contains: String

  # All values starting with the given string.
  email_starts_with: String

  # All values not starting with the given string.
  email_not_starts_with: String

  # All values ending with the given string.
  email_ends_with: String

  # All values not ending with the given string.
  email_not_ends_with: String
  id: ID

  # All values that are not equal to given value.
  id_not: ID

  # All values that are contained in given list.
  id_in: [ID!]

  # All values that are not contained in given list.
  id_not_in: [ID!]

  # All values less than the given value.
  id_lt: ID

  # All values less than or equal the given value.
  id_lte: ID

  # All values greater than the given value.
  id_gt: ID

  # All values greater than or equal the given value.
  id_gte: ID

  # All values containing the given string.
  id_contains: ID

  # All values not containing the given string.
  id_not_contains: ID

  # All values starting with the given string.
  id_starts_with: ID

  # All values not starting with the given string.
  id_not_starts_with: ID

  # All values ending with the given string.
  id_ends_with: ID

  # All values not ending with the given string.
  id_not_ends_with: ID
  name: String

  # All values that are not equal to given value.
  name_not: String

  # All values that are contained in given list.
  name_in: [String!]

  # All values that are not contained in given list.
  name_not_in: [String!]

  # All values less than the given value.
  name_lt: String

  # All values less than or equal the given value.
  name_lte: String

  # All values greater than the given value.
  name_gt: String

  # All values greater than or equal the given value.
  name_gte: String

  # All values containing the given string.
  name_contains: String

  # All values not containing the given string.
  name_not_contains: String

  # All values starting with the given string.
  name_starts_with: String

  # All values not starting with the given string.
  name_not_starts_with: String

  # All values ending with the given string.
  name_ends_with: String

  # All values not ending with the given string.
  name_not_ends_with: String
  slug: String

  # All values that are not equal to given value.
  slug_not: String

  # All values that are contained in given list.
  slug_in: [String!]

  # All values that are not contained in given list.
  slug_not_in: [String!]

  # All values less than the given value.
  slug_lt: String

  # All values less than or equal the given value.
  slug_lte: String

  # All values greater than the given value.
  slug_gt: String

  # All values greater than or equal the given value.
  slug_gte: String

  # All values containing the given string.
  slug_contains: String

  # All values not containing the given string.
  slug_not_contains: String

  # All values starting with the given string.
  slug_starts_with: String

  # All values not starting with the given string.
  slug_not_starts_with: String

  # All values ending with the given string.
  slug_ends_with: String

  # All values not ending with the given string.
  slug_not_ends_with: String
  twitter: String

  # All values that are not equal to given value.
  twitter_not: String

  # All values that are contained in given list.
  twitter_in: [String!]

  # All values that are not contained in given list.
  twitter_not_in: [String!]

  # All values less than the given value.
  twitter_lt: String

  # All values less than or equal the given value.
  twitter_lte: String

  # All values greater than the given value.
  twitter_gt: String

  # All values greater than or equal the given value.
  twitter_gte: String

  # All values containing the given string.
  twitter_contains: String

  # All values not containing the given string.
  twitter_not_contains: String

  # All values starting with the given string.
  twitter_starts_with: String

  # All values not starting with the given string.
  twitter_not_starts_with: String

  # All values ending with the given string.
  twitter_ends_with: String

  # All values not ending with the given string.
  twitter_not_ends_with: String
  updatedAt: DateTime

  # All values that are not equal to given value.
  updatedAt_not: DateTime

  # All values that are contained in given list.
  updatedAt_in: [DateTime!]

  # All values that are not contained in given list.
  updatedAt_not_in: [DateTime!]

  # All values less than the given value.
  updatedAt_lt: DateTime

  # All values less than or equal the given value.
  updatedAt_lte: DateTime

  # All values greater than the given value.
  updatedAt_gt: DateTime

  # All values greater than or equal the given value.
  updatedAt_gte: DateTime
  members_every: MemberFilter
  members_some: MemberFilter
  members_none: MemberFilter
  sponsors_every: SponsorFilter
  sponsors_some: SponsorFilter
  sponsors_none: SponsorFilter
  workshops_every: WorkshopFilter
  workshops_some: WorkshopFilter
  workshops_none: WorkshopFilter
}

type ChapterSubscriptionPayload {
  mutation: _ModelMutationType!
  node: Chapter
  updatedFields: [String!]
  previousValues: ChapterPreviousValues
}

input ChapterworkshopsWorkshop {
  dateAndTime: DateTime!
  dbId: Int!
  invitable: Boolean!
  rsvpCloseTime: DateTime!
  rsvpOpenDate: DateTime!
  rsvpOpenTime: DateTime!
  time: DateTime!
  sponsorId: ID
  sponsor: WorkshopsponsorSponsor
  attendeesIds: [ID!]
  attendees: [WorkshopattendeesMember!]
}

input CreateAddress {
  city: String
  dbCreatedAt: DateTime!
  dbId: Int!
  dbUpdatedAt: DateTime!
  flat: String
  postalCode: String!
  street: String
  sponsorId: ID
  sponsor: AddresssponsorSponsor
  eventsIds: [ID!]
  events: [AddresseventsEvent!]
}

input CreateBan {
  dbCreatedAt: DateTime!
  dbId: Int!
  dbUpdatedAt: DateTime!
  expiresAt: DateTime!
  explanation: String!
  note: String
  permanent: Boolean!
  reason: String!
  adminId: ID
  admin: BanadminMember
  memberId: ID
  member: BanmemberMember
}

input CreateChapter {
  active: Boolean!
  city: String!
  dbCreatedAt: DateTime!
  dbId: Int!
  dbUpdatedAt: DateTime!
  email: String!
  name: String!
  slug: String!
  twitter: String
  membersIds: [ID!]
  members: [ChaptermembersMember!]
  sponsorsIds: [ID!]
  sponsors: [ChaptersponsorsSponsor!]
  workshopsIds: [ID!]
  workshops: [ChapterworkshopsWorkshop!]
}

input CreateEvent {
  announceOnly: Boolean!
  audience: String
  coachDescription: String
  coachQuestionnaire: String
  coachSpaces: Int!
  confirmationRequired: Boolean!
  dateAndTime: DateTime!
  dbCreatedAt: DateTime!
  dbId: Int!
  dbUpdatedAt: DateTime!
  description: String
  displayCoaches: Boolean!
  displayStudents: Boolean!
  email: String
  endsAt: DateTime!
  externalUrl: String
  info: String
  invitable: Boolean!
  name: String!
  schedule: String
  showFaq: Boolean!
  slug: String
  studentQuestionnaire: String
  studentSpaces: Int!
  surveysRequired: Boolean!
  titoUrl: String
  url: String
  addressId: ID
  address: EventaddressAddress
}

input CreateFile {
  name: String!
}

input CreateJob {
  approved: Boolean!
  company: String
  dbCreatedAt: DateTime!
  dbId: Int!
  dbUpdatedAt: DateTime!
  description: String
  email: String
  expiryDate: DateTime!
  linkToJob: String
  location: String
  submitted: Boolean!
  title: String
  approvedById: ID
  approvedBy: JobapprovedByMember
  createdById: ID
  createdBy: JobcreatedByMember
}

input CreateMember {
  about: String
  canLogIn: Boolean!
  dbCreatedAt: DateTime!
  dbId: Int!
  dbUpdatedAt: DateTime!
  email: String!
  firstname: String
  mobile: String
  pronouns: String
  receivedCoachWelcomeEmail: Boolean!
  receivedStudentWelcomeEmail: Boolean!
  surname: String
  twitter: String
  roleId: ID
  role: MemberroleRole
  adminBansIds: [ID!]
  adminBans: [MemberadminBansBan!]
  bansIds: [ID!]
  bans: [MemberbansBan!]
  jobApprovalsIds: [ID!]
  jobApprovals: [MemberjobApprovalsJob!]
  jobPostingsIds: [ID!]
  jobPostings: [MemberjobPostingsJob!]
  subscriptionsIds: [ID!]
  subscriptions: [MembersubscriptionsChapter!]
  workshopsAttendedIds: [ID!]
  workshopsAttended: [MemberworkshopsAttendedWorkshop!]
}

input CreateRole {
  dbId: Int!
  name: String!
  membersIds: [ID!]
  members: [RolemembersMember!]
}

input CreateSponsor {
  avatar: String
  contactFirstname: String
  contactSurname: String
  dbCreatedAt: DateTime!
  dbId: Int!
  dbUpdatedAt: DateTime!
  description: String
  email: String
  imageCache: String
  name: String!
  numberOfCoaches: Int
  seats: Int!
  website: String
  addressId: ID
  address: SponsoraddressAddress
  chapterId: ID
  chapter: SponsorchapterChapter
  workshopsIds: [ID!]
  workshops: [SponsorworkshopsWorkshop!]
}

input CreateWorkshop {
  dateAndTime: DateTime!
  dbId: Int!
  invitable: Boolean!
  rsvpCloseTime: DateTime!
  rsvpOpenDate: DateTime!
  rsvpOpenTime: DateTime!
  time: DateTime!
  chapterId: ID
  chapter: WorkshopchapterChapter
  sponsorId: ID
  sponsor: WorkshopsponsorSponsor
  attendeesIds: [ID!]
  attendees: [WorkshopattendeesMember!]
}

scalar DateTime

type Event implements Node {
  address(filter: AddressFilter): Address
  announceOnly: Boolean!
  audience: String
  coachDescription: String
  coachQuestionnaire: String
  coachSpaces: Int!
  confirmationRequired: Boolean!
  createdAt: DateTime!
  dateAndTime: DateTime!
  dbCreatedAt: DateTime!
  dbId: Int!
  dbUpdatedAt: DateTime!
  description: String
  displayCoaches: Boolean!
  displayStudents: Boolean!
  email: String
  endsAt: DateTime!
  externalUrl: String
  id: ID!
  info: String
  invitable: Boolean!
  name: String!
  schedule: String
  showFaq: Boolean!
  slug: String
  studentQuestionnaire: String
  studentSpaces: Int!
  surveysRequired: Boolean!
  titoUrl: String
  updatedAt: DateTime!
  url: String
}

input EventaddressAddress {
  city: String
  dbCreatedAt: DateTime!
  dbId: Int!
  dbUpdatedAt: DateTime!
  flat: String
  postalCode: String!
  street: String
  sponsorId: ID
  sponsor: AddresssponsorSponsor
  eventsIds: [ID!]
  events: [AddresseventsEvent!]
}

input EventFilter {
  # Logical AND on all given filters.
  AND: [EventFilter!]

  # Logical OR on all given filters.
  OR: [EventFilter!]
  announceOnly: Boolean

  # All values that are not equal to given value.
  announceOnly_not: Boolean
  audience: String

  # All values that are not equal to given value.
  audience_not: String

  # All values that are contained in given list.
  audience_in: [String!]

  # All values that are not contained in given list.
  audience_not_in: [String!]

  # All values less than the given value.
  audience_lt: String

  # All values less than or equal the given value.
  audience_lte: String

  # All values greater than the given value.
  audience_gt: String

  # All values greater than or equal the given value.
  audience_gte: String

  # All values containing the given string.
  audience_contains: String

  # All values not containing the given string.
  audience_not_contains: String

  # All values starting with the given string.
  audience_starts_with: String

  # All values not starting with the given string.
  audience_not_starts_with: String

  # All values ending with the given string.
  audience_ends_with: String

  # All values not ending with the given string.
  audience_not_ends_with: String
  coachDescription: String

  # All values that are not equal to given value.
  coachDescription_not: String

  # All values that are contained in given list.
  coachDescription_in: [String!]

  # All values that are not contained in given list.
  coachDescription_not_in: [String!]

  # All values less than the given value.
  coachDescription_lt: String

  # All values less than or equal the given value.
  coachDescription_lte: String

  # All values greater than the given value.
  coachDescription_gt: String

  # All values greater than or equal the given value.
  coachDescription_gte: String

  # All values containing the given string.
  coachDescription_contains: String

  # All values not containing the given string.
  coachDescription_not_contains: String

  # All values starting with the given string.
  coachDescription_starts_with: String

  # All values not starting with the given string.
  coachDescription_not_starts_with: String

  # All values ending with the given string.
  coachDescription_ends_with: String

  # All values not ending with the given string.
  coachDescription_not_ends_with: String
  coachQuestionnaire: String

  # All values that are not equal to given value.
  coachQuestionnaire_not: String

  # All values that are contained in given list.
  coachQuestionnaire_in: [String!]

  # All values that are not contained in given list.
  coachQuestionnaire_not_in: [String!]

  # All values less than the given value.
  coachQuestionnaire_lt: String

  # All values less than or equal the given value.
  coachQuestionnaire_lte: String

  # All values greater than the given value.
  coachQuestionnaire_gt: String

  # All values greater than or equal the given value.
  coachQuestionnaire_gte: String

  # All values containing the given string.
  coachQuestionnaire_contains: String

  # All values not containing the given string.
  coachQuestionnaire_not_contains: String

  # All values starting with the given string.
  coachQuestionnaire_starts_with: String

  # All values not starting with the given string.
  coachQuestionnaire_not_starts_with: String

  # All values ending with the given string.
  coachQuestionnaire_ends_with: String

  # All values not ending with the given string.
  coachQuestionnaire_not_ends_with: String
  coachSpaces: Int

  # All values that are not equal to given value.
  coachSpaces_not: Int

  # All values that are contained in given list.
  coachSpaces_in: [Int!]

  # All values that are not contained in given list.
  coachSpaces_not_in: [Int!]

  # All values less than the given value.
  coachSpaces_lt: Int

  # All values less than or equal the given value.
  coachSpaces_lte: Int

  # All values greater than the given value.
  coachSpaces_gt: Int

  # All values greater than or equal the given value.
  coachSpaces_gte: Int
  confirmationRequired: Boolean

  # All values that are not equal to given value.
  confirmationRequired_not: Boolean
  createdAt: DateTime

  # All values that are not equal to given value.
  createdAt_not: DateTime

  # All values that are contained in given list.
  createdAt_in: [DateTime!]

  # All values that are not contained in given list.
  createdAt_not_in: [DateTime!]

  # All values less than the given value.
  createdAt_lt: DateTime

  # All values less than or equal the given value.
  createdAt_lte: DateTime

  # All values greater than the given value.
  createdAt_gt: DateTime

  # All values greater than or equal the given value.
  createdAt_gte: DateTime
  dateAndTime: DateTime

  # All values that are not equal to given value.
  dateAndTime_not: DateTime

  # All values that are contained in given list.
  dateAndTime_in: [DateTime!]

  # All values that are not contained in given list.
  dateAndTime_not_in: [DateTime!]

  # All values less than the given value.
  dateAndTime_lt: DateTime

  # All values less than or equal the given value.
  dateAndTime_lte: DateTime

  # All values greater than the given value.
  dateAndTime_gt: DateTime

  # All values greater than or equal the given value.
  dateAndTime_gte: DateTime
  dbCreatedAt: DateTime

  # All values that are not equal to given value.
  dbCreatedAt_not: DateTime

  # All values that are contained in given list.
  dbCreatedAt_in: [DateTime!]

  # All values that are not contained in given list.
  dbCreatedAt_not_in: [DateTime!]

  # All values less than the given value.
  dbCreatedAt_lt: DateTime

  # All values less than or equal the given value.
  dbCreatedAt_lte: DateTime

  # All values greater than the given value.
  dbCreatedAt_gt: DateTime

  # All values greater than or equal the given value.
  dbCreatedAt_gte: DateTime
  dbId: Int

  # All values that are not equal to given value.
  dbId_not: Int

  # All values that are contained in given list.
  dbId_in: [Int!]

  # All values that are not contained in given list.
  dbId_not_in: [Int!]

  # All values less than the given value.
  dbId_lt: Int

  # All values less than or equal the given value.
  dbId_lte: Int

  # All values greater than the given value.
  dbId_gt: Int

  # All values greater than or equal the given value.
  dbId_gte: Int
  dbUpdatedAt: DateTime

  # All values that are not equal to given value.
  dbUpdatedAt_not: DateTime

  # All values that are contained in given list.
  dbUpdatedAt_in: [DateTime!]

  # All values that are not contained in given list.
  dbUpdatedAt_not_in: [DateTime!]

  # All values less than the given value.
  dbUpdatedAt_lt: DateTime

  # All values less than or equal the given value.
  dbUpdatedAt_lte: DateTime

  # All values greater than the given value.
  dbUpdatedAt_gt: DateTime

  # All values greater than or equal the given value.
  dbUpdatedAt_gte: DateTime
  description: String

  # All values that are not equal to given value.
  description_not: String

  # All values that are contained in given list.
  description_in: [String!]

  # All values that are not contained in given list.
  description_not_in: [String!]

  # All values less than the given value.
  description_lt: String

  # All values less than or equal the given value.
  description_lte: String

  # All values greater than the given value.
  description_gt: String

  # All values greater than or equal the given value.
  description_gte: String

  # All values containing the given string.
  description_contains: String

  # All values not containing the given string.
  description_not_contains: String

  # All values starting with the given string.
  description_starts_with: String

  # All values not starting with the given string.
  description_not_starts_with: String

  # All values ending with the given string.
  description_ends_with: String

  # All values not ending with the given string.
  description_not_ends_with: String
  displayCoaches: Boolean

  # All values that are not equal to given value.
  displayCoaches_not: Boolean
  displayStudents: Boolean

  # All values that are not equal to given value.
  displayStudents_not: Boolean
  email: String

  # All values that are not equal to given value.
  email_not: String

  # All values that are contained in given list.
  email_in: [String!]

  # All values that are not contained in given list.
  email_not_in: [String!]

  # All values less than the given value.
  email_lt: String

  # All values less than or equal the given value.
  email_lte: String

  # All values greater than the given value.
  email_gt: String

  # All values greater than or equal the given value.
  email_gte: String

  # All values containing the given string.
  email_contains: String

  # All values not containing the given string.
  email_not_contains: String

  # All values starting with the given string.
  email_starts_with: String

  # All values not starting with the given string.
  email_not_starts_with: String

  # All values ending with the given string.
  email_ends_with: String

  # All values not ending with the given string.
  email_not_ends_with: String
  endsAt: DateTime

  # All values that are not equal to given value.
  endsAt_not: DateTime

  # All values that are contained in given list.
  endsAt_in: [DateTime!]

  # All values that are not contained in given list.
  endsAt_not_in: [DateTime!]

  # All values less than the given value.
  endsAt_lt: DateTime

  # All values less than or equal the given value.
  endsAt_lte: DateTime

  # All values greater than the given value.
  endsAt_gt: DateTime

  # All values greater than or equal the given value.
  endsAt_gte: DateTime
  externalUrl: String

  # All values that are not equal to given value.
  externalUrl_not: String

  # All values that are contained in given list.
  externalUrl_in: [String!]

  # All values that are not contained in given list.
  externalUrl_not_in: [String!]

  # All values less than the given value.
  externalUrl_lt: String

  # All values less than or equal the given value.
  externalUrl_lte: String

  # All values greater than the given value.
  externalUrl_gt: String

  # All values greater than or equal the given value.
  externalUrl_gte: String

  # All values containing the given string.
  externalUrl_contains: String

  # All values not containing the given string.
  externalUrl_not_contains: String

  # All values starting with the given string.
  externalUrl_starts_with: String

  # All values not starting with the given string.
  externalUrl_not_starts_with: String

  # All values ending with the given string.
  externalUrl_ends_with: String

  # All values not ending with the given string.
  externalUrl_not_ends_with: String
  id: ID

  # All values that are not equal to given value.
  id_not: ID

  # All values that are contained in given list.
  id_in: [ID!]

  # All values that are not contained in given list.
  id_not_in: [ID!]

  # All values less than the given value.
  id_lt: ID

  # All values less than or equal the given value.
  id_lte: ID

  # All values greater than the given value.
  id_gt: ID

  # All values greater than or equal the given value.
  id_gte: ID

  # All values containing the given string.
  id_contains: ID

  # All values not containing the given string.
  id_not_contains: ID

  # All values starting with the given string.
  id_starts_with: ID

  # All values not starting with the given string.
  id_not_starts_with: ID

  # All values ending with the given string.
  id_ends_with: ID

  # All values not ending with the given string.
  id_not_ends_with: ID
  info: String

  # All values that are not equal to given value.
  info_not: String

  # All values that are contained in given list.
  info_in: [String!]

  # All values that are not contained in given list.
  info_not_in: [String!]

  # All values less than the given value.
  info_lt: String

  # All values less than or equal the given value.
  info_lte: String

  # All values greater than the given value.
  info_gt: String

  # All values greater than or equal the given value.
  info_gte: String

  # All values containing the given string.
  info_contains: String

  # All values not containing the given string.
  info_not_contains: String

  # All values starting with the given string.
  info_starts_with: String

  # All values not starting with the given string.
  info_not_starts_with: String

  # All values ending with the given string.
  info_ends_with: String

  # All values not ending with the given string.
  info_not_ends_with: String
  invitable: Boolean

  # All values that are not equal to given value.
  invitable_not: Boolean
  name: String

  # All values that are not equal to given value.
  name_not: String

  # All values that are contained in given list.
  name_in: [String!]

  # All values that are not contained in given list.
  name_not_in: [String!]

  # All values less than the given value.
  name_lt: String

  # All values less than or equal the given value.
  name_lte: String

  # All values greater than the given value.
  name_gt: String

  # All values greater than or equal the given value.
  name_gte: String

  # All values containing the given string.
  name_contains: String

  # All values not containing the given string.
  name_not_contains: String

  # All values starting with the given string.
  name_starts_with: String

  # All values not starting with the given string.
  name_not_starts_with: String

  # All values ending with the given string.
  name_ends_with: String

  # All values not ending with the given string.
  name_not_ends_with: String
  schedule: String

  # All values that are not equal to given value.
  schedule_not: String

  # All values that are contained in given list.
  schedule_in: [String!]

  # All values that are not contained in given list.
  schedule_not_in: [String!]

  # All values less than the given value.
  schedule_lt: String

  # All values less than or equal the given value.
  schedule_lte: String

  # All values greater than the given value.
  schedule_gt: String

  # All values greater than or equal the given value.
  schedule_gte: String

  # All values containing the given string.
  schedule_contains: String

  # All values not containing the given string.
  schedule_not_contains: String

  # All values starting with the given string.
  schedule_starts_with: String

  # All values not starting with the given string.
  schedule_not_starts_with: String

  # All values ending with the given string.
  schedule_ends_with: String

  # All values not ending with the given string.
  schedule_not_ends_with: String
  showFaq: Boolean

  # All values that are not equal to given value.
  showFaq_not: Boolean
  slug: String

  # All values that are not equal to given value.
  slug_not: String

  # All values that are contained in given list.
  slug_in: [String!]

  # All values that are not contained in given list.
  slug_not_in: [String!]

  # All values less than the given value.
  slug_lt: String

  # All values less than or equal the given value.
  slug_lte: String

  # All values greater than the given value.
  slug_gt: String

  # All values greater than or equal the given value.
  slug_gte: String

  # All values containing the given string.
  slug_contains: String

  # All values not containing the given string.
  slug_not_contains: String

  # All values starting with the given string.
  slug_starts_with: String

  # All values not starting with the given string.
  slug_not_starts_with: String

  # All values ending with the given string.
  slug_ends_with: String

  # All values not ending with the given string.
  slug_not_ends_with: String
  studentQuestionnaire: String

  # All values that are not equal to given value.
  studentQuestionnaire_not: String

  # All values that are contained in given list.
  studentQuestionnaire_in: [String!]

  # All values that are not contained in given list.
  studentQuestionnaire_not_in: [String!]

  # All values less than the given value.
  studentQuestionnaire_lt: String

  # All values less than or equal the given value.
  studentQuestionnaire_lte: String

  # All values greater than the given value.
  studentQuestionnaire_gt: String

  # All values greater than or equal the given value.
  studentQuestionnaire_gte: String

  # All values containing the given string.
  studentQuestionnaire_contains: String

  # All values not containing the given string.
  studentQuestionnaire_not_contains: String

  # All values starting with the given string.
  studentQuestionnaire_starts_with: String

  # All values not starting with the given string.
  studentQuestionnaire_not_starts_with: String

  # All values ending with the given string.
  studentQuestionnaire_ends_with: String

  # All values not ending with the given string.
  studentQuestionnaire_not_ends_with: String
  studentSpaces: Int

  # All values that are not equal to given value.
  studentSpaces_not: Int

  # All values that are contained in given list.
  studentSpaces_in: [Int!]

  # All values that are not contained in given list.
  studentSpaces_not_in: [Int!]

  # All values less than the given value.
  studentSpaces_lt: Int

  # All values less than or equal the given value.
  studentSpaces_lte: Int

  # All values greater than the given value.
  studentSpaces_gt: Int

  # All values greater than or equal the given value.
  studentSpaces_gte: Int
  surveysRequired: Boolean

  # All values that are not equal to given value.
  surveysRequired_not: Boolean
  titoUrl: String

  # All values that are not equal to given value.
  titoUrl_not: String

  # All values that are contained in given list.
  titoUrl_in: [String!]

  # All values that are not contained in given list.
  titoUrl_not_in: [String!]

  # All values less than the given value.
  titoUrl_lt: String

  # All values less than or equal the given value.
  titoUrl_lte: String

  # All values greater than the given value.
  titoUrl_gt: String

  # All values greater than or equal the given value.
  titoUrl_gte: String

  # All values containing the given string.
  titoUrl_contains: String

  # All values not containing the given string.
  titoUrl_not_contains: String

  # All values starting with the given string.
  titoUrl_starts_with: String

  # All values not starting with the given string.
  titoUrl_not_starts_with: String

  # All values ending with the given string.
  titoUrl_ends_with: String

  # All values not ending with the given string.
  titoUrl_not_ends_with: String
  updatedAt: DateTime

  # All values that are not equal to given value.
  updatedAt_not: DateTime

  # All values that are contained in given list.
  updatedAt_in: [DateTime!]

  # All values that are not contained in given list.
  updatedAt_not_in: [DateTime!]

  # All values less than the given value.
  updatedAt_lt: DateTime

  # All values less than or equal the given value.
  updatedAt_lte: DateTime

  # All values greater than the given value.
  updatedAt_gt: DateTime

  # All values greater than or equal the given value.
  updatedAt_gte: DateTime
  url: String

  # All values that are not equal to given value.
  url_not: String

  # All values that are contained in given list.
  url_in: [String!]

  # All values that are not contained in given list.
  url_not_in: [String!]

  # All values less than the given value.
  url_lt: String

  # All values less than or equal the given value.
  url_lte: String

  # All values greater than the given value.
  url_gt: String

  # All values greater than or equal the given value.
  url_gte: String

  # All values containing the given string.
  url_contains: String

  # All values not containing the given string.
  url_not_contains: String

  # All values starting with the given string.
  url_starts_with: String

  # All values not starting with the given string.
  url_not_starts_with: String

  # All values ending with the given string.
  url_ends_with: String

  # All values not ending with the given string.
  url_not_ends_with: String
  address: AddressFilter
}

enum EventOrderBy {
  announceOnly_ASC
  announceOnly_DESC
  audience_ASC
  audience_DESC
  coachDescription_ASC
  coachDescription_DESC
  coachQuestionnaire_ASC
  coachQuestionnaire_DESC
  coachSpaces_ASC
  coachSpaces_DESC
  confirmationRequired_ASC
  confirmationRequired_DESC
  createdAt_ASC
  createdAt_DESC
  dateAndTime_ASC
  dateAndTime_DESC
  dbCreatedAt_ASC
  dbCreatedAt_DESC
  dbId_ASC
  dbId_DESC
  dbUpdatedAt_ASC
  dbUpdatedAt_DESC
  description_ASC
  description_DESC
  displayCoaches_ASC
  displayCoaches_DESC
  displayStudents_ASC
  displayStudents_DESC
  email_ASC
  email_DESC
  endsAt_ASC
  endsAt_DESC
  externalUrl_ASC
  externalUrl_DESC
  id_ASC
  id_DESC
  info_ASC
  info_DESC
  invitable_ASC
  invitable_DESC
  name_ASC
  name_DESC
  schedule_ASC
  schedule_DESC
  showFaq_ASC
  showFaq_DESC
  slug_ASC
  slug_DESC
  studentQuestionnaire_ASC
  studentQuestionnaire_DESC
  studentSpaces_ASC
  studentSpaces_DESC
  surveysRequired_ASC
  surveysRequired_DESC
  titoUrl_ASC
  titoUrl_DESC
  updatedAt_ASC
  updatedAt_DESC
  url_ASC
  url_DESC
}

type EventPreviousValues {
  announceOnly: Boolean!
  audience: String
  coachDescription: String
  coachQuestionnaire: String
  coachSpaces: Int!
  confirmationRequired: Boolean!
  createdAt: DateTime!
  dateAndTime: DateTime!
  dbCreatedAt: DateTime!
  dbId: Int!
  dbUpdatedAt: DateTime!
  description: String
  displayCoaches: Boolean!
  displayStudents: Boolean!
  email: String
  endsAt: DateTime!
  externalUrl: String
  id: ID!
  info: String
  invitable: Boolean!
  name: String!
  schedule: String
  showFaq: Boolean!
  slug: String
  studentQuestionnaire: String
  studentSpaces: Int!
  surveysRequired: Boolean!
  titoUrl: String
  updatedAt: DateTime!
  url: String
}

input EventSubscriptionFilter {
  # Logical AND on all given filters.
  AND: [EventSubscriptionFilter!]

  # Logical OR on all given filters.
  OR: [EventSubscriptionFilter!]

  # The subscription event gets dispatched when it's listed in mutation_in
  mutation_in: [_ModelMutationType!]

  # The subscription event gets only dispatched when one of the updated fields names is included in this list
  updatedFields_contains: String

  # The subscription event gets only dispatched when all of the field names included in this list have been updated
  updatedFields_contains_every: [String!]

  # The subscription event gets only dispatched when some of the field names included in this list have been updated
  updatedFields_contains_some: [String!]
  node: EventSubscriptionFilterNode
}

input EventSubscriptionFilterNode {
  announceOnly: Boolean

  # All values that are not equal to given value.
  announceOnly_not: Boolean
  audience: String

  # All values that are not equal to given value.
  audience_not: String

  # All values that are contained in given list.
  audience_in: [String!]

  # All values that are not contained in given list.
  audience_not_in: [String!]

  # All values less than the given value.
  audience_lt: String

  # All values less than or equal the given value.
  audience_lte: String

  # All values greater than the given value.
  audience_gt: String

  # All values greater than or equal the given value.
  audience_gte: String

  # All values containing the given string.
  audience_contains: String

  # All values not containing the given string.
  audience_not_contains: String

  # All values starting with the given string.
  audience_starts_with: String

  # All values not starting with the given string.
  audience_not_starts_with: String

  # All values ending with the given string.
  audience_ends_with: String

  # All values not ending with the given string.
  audience_not_ends_with: String
  coachDescription: String

  # All values that are not equal to given value.
  coachDescription_not: String

  # All values that are contained in given list.
  coachDescription_in: [String!]

  # All values that are not contained in given list.
  coachDescription_not_in: [String!]

  # All values less than the given value.
  coachDescription_lt: String

  # All values less than or equal the given value.
  coachDescription_lte: String

  # All values greater than the given value.
  coachDescription_gt: String

  # All values greater than or equal the given value.
  coachDescription_gte: String

  # All values containing the given string.
  coachDescription_contains: String

  # All values not containing the given string.
  coachDescription_not_contains: String

  # All values starting with the given string.
  coachDescription_starts_with: String

  # All values not starting with the given string.
  coachDescription_not_starts_with: String

  # All values ending with the given string.
  coachDescription_ends_with: String

  # All values not ending with the given string.
  coachDescription_not_ends_with: String
  coachQuestionnaire: String

  # All values that are not equal to given value.
  coachQuestionnaire_not: String

  # All values that are contained in given list.
  coachQuestionnaire_in: [String!]

  # All values that are not contained in given list.
  coachQuestionnaire_not_in: [String!]

  # All values less than the given value.
  coachQuestionnaire_lt: String

  # All values less than or equal the given value.
  coachQuestionnaire_lte: String

  # All values greater than the given value.
  coachQuestionnaire_gt: String

  # All values greater than or equal the given value.
  coachQuestionnaire_gte: String

  # All values containing the given string.
  coachQuestionnaire_contains: String

  # All values not containing the given string.
  coachQuestionnaire_not_contains: String

  # All values starting with the given string.
  coachQuestionnaire_starts_with: String

  # All values not starting with the given string.
  coachQuestionnaire_not_starts_with: String

  # All values ending with the given string.
  coachQuestionnaire_ends_with: String

  # All values not ending with the given string.
  coachQuestionnaire_not_ends_with: String
  coachSpaces: Int

  # All values that are not equal to given value.
  coachSpaces_not: Int

  # All values that are contained in given list.
  coachSpaces_in: [Int!]

  # All values that are not contained in given list.
  coachSpaces_not_in: [Int!]

  # All values less than the given value.
  coachSpaces_lt: Int

  # All values less than or equal the given value.
  coachSpaces_lte: Int

  # All values greater than the given value.
  coachSpaces_gt: Int

  # All values greater than or equal the given value.
  coachSpaces_gte: Int
  confirmationRequired: Boolean

  # All values that are not equal to given value.
  confirmationRequired_not: Boolean
  createdAt: DateTime

  # All values that are not equal to given value.
  createdAt_not: DateTime

  # All values that are contained in given list.
  createdAt_in: [DateTime!]

  # All values that are not contained in given list.
  createdAt_not_in: [DateTime!]

  # All values less than the given value.
  createdAt_lt: DateTime

  # All values less than or equal the given value.
  createdAt_lte: DateTime

  # All values greater than the given value.
  createdAt_gt: DateTime

  # All values greater than or equal the given value.
  createdAt_gte: DateTime
  dateAndTime: DateTime

  # All values that are not equal to given value.
  dateAndTime_not: DateTime

  # All values that are contained in given list.
  dateAndTime_in: [DateTime!]

  # All values that are not contained in given list.
  dateAndTime_not_in: [DateTime!]

  # All values less than the given value.
  dateAndTime_lt: DateTime

  # All values less than or equal the given value.
  dateAndTime_lte: DateTime

  # All values greater than the given value.
  dateAndTime_gt: DateTime

  # All values greater than or equal the given value.
  dateAndTime_gte: DateTime
  dbCreatedAt: DateTime

  # All values that are not equal to given value.
  dbCreatedAt_not: DateTime

  # All values that are contained in given list.
  dbCreatedAt_in: [DateTime!]

  # All values that are not contained in given list.
  dbCreatedAt_not_in: [DateTime!]

  # All values less than the given value.
  dbCreatedAt_lt: DateTime

  # All values less than or equal the given value.
  dbCreatedAt_lte: DateTime

  # All values greater than the given value.
  dbCreatedAt_gt: DateTime

  # All values greater than or equal the given value.
  dbCreatedAt_gte: DateTime
  dbId: Int

  # All values that are not equal to given value.
  dbId_not: Int

  # All values that are contained in given list.
  dbId_in: [Int!]

  # All values that are not contained in given list.
  dbId_not_in: [Int!]

  # All values less than the given value.
  dbId_lt: Int

  # All values less than or equal the given value.
  dbId_lte: Int

  # All values greater than the given value.
  dbId_gt: Int

  # All values greater than or equal the given value.
  dbId_gte: Int
  dbUpdatedAt: DateTime

  # All values that are not equal to given value.
  dbUpdatedAt_not: DateTime

  # All values that are contained in given list.
  dbUpdatedAt_in: [DateTime!]

  # All values that are not contained in given list.
  dbUpdatedAt_not_in: [DateTime!]

  # All values less than the given value.
  dbUpdatedAt_lt: DateTime

  # All values less than or equal the given value.
  dbUpdatedAt_lte: DateTime

  # All values greater than the given value.
  dbUpdatedAt_gt: DateTime

  # All values greater than or equal the given value.
  dbUpdatedAt_gte: DateTime
  description: String

  # All values that are not equal to given value.
  description_not: String

  # All values that are contained in given list.
  description_in: [String!]

  # All values that are not contained in given list.
  description_not_in: [String!]

  # All values less than the given value.
  description_lt: String

  # All values less than or equal the given value.
  description_lte: String

  # All values greater than the given value.
  description_gt: String

  # All values greater than or equal the given value.
  description_gte: String

  # All values containing the given string.
  description_contains: String

  # All values not containing the given string.
  description_not_contains: String

  # All values starting with the given string.
  description_starts_with: String

  # All values not starting with the given string.
  description_not_starts_with: String

  # All values ending with the given string.
  description_ends_with: String

  # All values not ending with the given string.
  description_not_ends_with: String
  displayCoaches: Boolean

  # All values that are not equal to given value.
  displayCoaches_not: Boolean
  displayStudents: Boolean

  # All values that are not equal to given value.
  displayStudents_not: Boolean
  email: String

  # All values that are not equal to given value.
  email_not: String

  # All values that are contained in given list.
  email_in: [String!]

  # All values that are not contained in given list.
  email_not_in: [String!]

  # All values less than the given value.
  email_lt: String

  # All values less than or equal the given value.
  email_lte: String

  # All values greater than the given value.
  email_gt: String

  # All values greater than or equal the given value.
  email_gte: String

  # All values containing the given string.
  email_contains: String

  # All values not containing the given string.
  email_not_contains: String

  # All values starting with the given string.
  email_starts_with: String

  # All values not starting with the given string.
  email_not_starts_with: String

  # All values ending with the given string.
  email_ends_with: String

  # All values not ending with the given string.
  email_not_ends_with: String
  endsAt: DateTime

  # All values that are not equal to given value.
  endsAt_not: DateTime

  # All values that are contained in given list.
  endsAt_in: [DateTime!]

  # All values that are not contained in given list.
  endsAt_not_in: [DateTime!]

  # All values less than the given value.
  endsAt_lt: DateTime

  # All values less than or equal the given value.
  endsAt_lte: DateTime

  # All values greater than the given value.
  endsAt_gt: DateTime

  # All values greater than or equal the given value.
  endsAt_gte: DateTime
  externalUrl: String

  # All values that are not equal to given value.
  externalUrl_not: String

  # All values that are contained in given list.
  externalUrl_in: [String!]

  # All values that are not contained in given list.
  externalUrl_not_in: [String!]

  # All values less than the given value.
  externalUrl_lt: String

  # All values less than or equal the given value.
  externalUrl_lte: String

  # All values greater than the given value.
  externalUrl_gt: String

  # All values greater than or equal the given value.
  externalUrl_gte: String

  # All values containing the given string.
  externalUrl_contains: String

  # All values not containing the given string.
  externalUrl_not_contains: String

  # All values starting with the given string.
  externalUrl_starts_with: String

  # All values not starting with the given string.
  externalUrl_not_starts_with: String

  # All values ending with the given string.
  externalUrl_ends_with: String

  # All values not ending with the given string.
  externalUrl_not_ends_with: String
  id: ID

  # All values that are not equal to given value.
  id_not: ID

  # All values that are contained in given list.
  id_in: [ID!]

  # All values that are not contained in given list.
  id_not_in: [ID!]

  # All values less than the given value.
  id_lt: ID

  # All values less than or equal the given value.
  id_lte: ID

  # All values greater than the given value.
  id_gt: ID

  # All values greater than or equal the given value.
  id_gte: ID

  # All values containing the given string.
  id_contains: ID

  # All values not containing the given string.
  id_not_contains: ID

  # All values starting with the given string.
  id_starts_with: ID

  # All values not starting with the given string.
  id_not_starts_with: ID

  # All values ending with the given string.
  id_ends_with: ID

  # All values not ending with the given string.
  id_not_ends_with: ID
  info: String

  # All values that are not equal to given value.
  info_not: String

  # All values that are contained in given list.
  info_in: [String!]

  # All values that are not contained in given list.
  info_not_in: [String!]

  # All values less than the given value.
  info_lt: String

  # All values less than or equal the given value.
  info_lte: String

  # All values greater than the given value.
  info_gt: String

  # All values greater than or equal the given value.
  info_gte: String

  # All values containing the given string.
  info_contains: String

  # All values not containing the given string.
  info_not_contains: String

  # All values starting with the given string.
  info_starts_with: String

  # All values not starting with the given string.
  info_not_starts_with: String

  # All values ending with the given string.
  info_ends_with: String

  # All values not ending with the given string.
  info_not_ends_with: String
  invitable: Boolean

  # All values that are not equal to given value.
  invitable_not: Boolean
  name: String

  # All values that are not equal to given value.
  name_not: String

  # All values that are contained in given list.
  name_in: [String!]

  # All values that are not contained in given list.
  name_not_in: [String!]

  # All values less than the given value.
  name_lt: String

  # All values less than or equal the given value.
  name_lte: String

  # All values greater than the given value.
  name_gt: String

  # All values greater than or equal the given value.
  name_gte: String

  # All values containing the given string.
  name_contains: String

  # All values not containing the given string.
  name_not_contains: String

  # All values starting with the given string.
  name_starts_with: String

  # All values not starting with the given string.
  name_not_starts_with: String

  # All values ending with the given string.
  name_ends_with: String

  # All values not ending with the given string.
  name_not_ends_with: String
  schedule: String

  # All values that are not equal to given value.
  schedule_not: String

  # All values that are contained in given list.
  schedule_in: [String!]

  # All values that are not contained in given list.
  schedule_not_in: [String!]

  # All values less than the given value.
  schedule_lt: String

  # All values less than or equal the given value.
  schedule_lte: String

  # All values greater than the given value.
  schedule_gt: String

  # All values greater than or equal the given value.
  schedule_gte: String

  # All values containing the given string.
  schedule_contains: String

  # All values not containing the given string.
  schedule_not_contains: String

  # All values starting with the given string.
  schedule_starts_with: String

  # All values not starting with the given string.
  schedule_not_starts_with: String

  # All values ending with the given string.
  schedule_ends_with: String

  # All values not ending with the given string.
  schedule_not_ends_with: String
  showFaq: Boolean

  # All values that are not equal to given value.
  showFaq_not: Boolean
  slug: String

  # All values that are not equal to given value.
  slug_not: String

  # All values that are contained in given list.
  slug_in: [String!]

  # All values that are not contained in given list.
  slug_not_in: [String!]

  # All values less than the given value.
  slug_lt: String

  # All values less than or equal the given value.
  slug_lte: String

  # All values greater than the given value.
  slug_gt: String

  # All values greater than or equal the given value.
  slug_gte: String

  # All values containing the given string.
  slug_contains: String

  # All values not containing the given string.
  slug_not_contains: String

  # All values starting with the given string.
  slug_starts_with: String

  # All values not starting with the given string.
  slug_not_starts_with: String

  # All values ending with the given string.
  slug_ends_with: String

  # All values not ending with the given string.
  slug_not_ends_with: String
  studentQuestionnaire: String

  # All values that are not equal to given value.
  studentQuestionnaire_not: String

  # All values that are contained in given list.
  studentQuestionnaire_in: [String!]

  # All values that are not contained in given list.
  studentQuestionnaire_not_in: [String!]

  # All values less than the given value.
  studentQuestionnaire_lt: String

  # All values less than or equal the given value.
  studentQuestionnaire_lte: String

  # All values greater than the given value.
  studentQuestionnaire_gt: String

  # All values greater than or equal the given value.
  studentQuestionnaire_gte: String

  # All values containing the given string.
  studentQuestionnaire_contains: String

  # All values not containing the given string.
  studentQuestionnaire_not_contains: String

  # All values starting with the given string.
  studentQuestionnaire_starts_with: String

  # All values not starting with the given string.
  studentQuestionnaire_not_starts_with: String

  # All values ending with the given string.
  studentQuestionnaire_ends_with: String

  # All values not ending with the given string.
  studentQuestionnaire_not_ends_with: String
  studentSpaces: Int

  # All values that are not equal to given value.
  studentSpaces_not: Int

  # All values that are contained in given list.
  studentSpaces_in: [Int!]

  # All values that are not contained in given list.
  studentSpaces_not_in: [Int!]

  # All values less than the given value.
  studentSpaces_lt: Int

  # All values less than or equal the given value.
  studentSpaces_lte: Int

  # All values greater than the given value.
  studentSpaces_gt: Int

  # All values greater than or equal the given value.
  studentSpaces_gte: Int
  surveysRequired: Boolean

  # All values that are not equal to given value.
  surveysRequired_not: Boolean
  titoUrl: String

  # All values that are not equal to given value.
  titoUrl_not: String

  # All values that are contained in given list.
  titoUrl_in: [String!]

  # All values that are not contained in given list.
  titoUrl_not_in: [String!]

  # All values less than the given value.
  titoUrl_lt: String

  # All values less than or equal the given value.
  titoUrl_lte: String

  # All values greater than the given value.
  titoUrl_gt: String

  # All values greater than or equal the given value.
  titoUrl_gte: String

  # All values containing the given string.
  titoUrl_contains: String

  # All values not containing the given string.
  titoUrl_not_contains: String

  # All values starting with the given string.
  titoUrl_starts_with: String

  # All values not starting with the given string.
  titoUrl_not_starts_with: String

  # All values ending with the given string.
  titoUrl_ends_with: String

  # All values not ending with the given string.
  titoUrl_not_ends_with: String
  updatedAt: DateTime

  # All values that are not equal to given value.
  updatedAt_not: DateTime

  # All values that are contained in given list.
  updatedAt_in: [DateTime!]

  # All values that are not contained in given list.
  updatedAt_not_in: [DateTime!]

  # All values less than the given value.
  updatedAt_lt: DateTime

  # All values less than or equal the given value.
  updatedAt_lte: DateTime

  # All values greater than the given value.
  updatedAt_gt: DateTime

  # All values greater than or equal the given value.
  updatedAt_gte: DateTime
  url: String

  # All values that are not equal to given value.
  url_not: String

  # All values that are contained in given list.
  url_in: [String!]

  # All values that are not contained in given list.
  url_not_in: [String!]

  # All values less than the given value.
  url_lt: String

  # All values less than or equal the given value.
  url_lte: String

  # All values greater than the given value.
  url_gt: String

  # All values greater than or equal the given value.
  url_gte: String

  # All values containing the given string.
  url_contains: String

  # All values not containing the given string.
  url_not_contains: String

  # All values starting with the given string.
  url_starts_with: String

  # All values not starting with the given string.
  url_not_starts_with: String

  # All values ending with the given string.
  url_ends_with: String

  # All values not ending with the given string.
  url_not_ends_with: String
  address: AddressFilter
}

type EventSubscriptionPayload {
  mutation: _ModelMutationType!
  node: Event
  updatedFields: [String!]
  previousValues: EventPreviousValues
}

type File implements Node {
  contentType: String!
  createdAt: DateTime!
  id: ID!
  name: String!
  secret: String!
  size: Int!
  updatedAt: DateTime!
  url: String!
}

input FileFilter {
  # Logical AND on all given filters.
  AND: [FileFilter!]

  # Logical OR on all given filters.
  OR: [FileFilter!]
  contentType: String

  # All values that are not equal to given value.
  contentType_not: String

  # All values that are contained in given list.
  contentType_in: [String!]

  # All values that are not contained in given list.
  contentType_not_in: [String!]

  # All values less than the given value.
  contentType_lt: String

  # All values less than or equal the given value.
  contentType_lte: String

  # All values greater than the given value.
  contentType_gt: String

  # All values greater than or equal the given value.
  contentType_gte: String

  # All values containing the given string.
  contentType_contains: String

  # All values not containing the given string.
  contentType_not_contains: String

  # All values starting with the given string.
  contentType_starts_with: String

  # All values not starting with the given string.
  contentType_not_starts_with: String

  # All values ending with the given string.
  contentType_ends_with: String

  # All values not ending with the given string.
  contentType_not_ends_with: String
  createdAt: DateTime

  # All values that are not equal to given value.
  createdAt_not: DateTime

  # All values that are contained in given list.
  createdAt_in: [DateTime!]

  # All values that are not contained in given list.
  createdAt_not_in: [DateTime!]

  # All values less than the given value.
  createdAt_lt: DateTime

  # All values less than or equal the given value.
  createdAt_lte: DateTime

  # All values greater than the given value.
  createdAt_gt: DateTime

  # All values greater than or equal the given value.
  createdAt_gte: DateTime
  id: ID

  # All values that are not equal to given value.
  id_not: ID

  # All values that are contained in given list.
  id_in: [ID!]

  # All values that are not contained in given list.
  id_not_in: [ID!]

  # All values less than the given value.
  id_lt: ID

  # All values less than or equal the given value.
  id_lte: ID

  # All values greater than the given value.
  id_gt: ID

  # All values greater than or equal the given value.
  id_gte: ID

  # All values containing the given string.
  id_contains: ID

  # All values not containing the given string.
  id_not_contains: ID

  # All values starting with the given string.
  id_starts_with: ID

  # All values not starting with the given string.
  id_not_starts_with: ID

  # All values ending with the given string.
  id_ends_with: ID

  # All values not ending with the given string.
  id_not_ends_with: ID
  name: String

  # All values that are not equal to given value.
  name_not: String

  # All values that are contained in given list.
  name_in: [String!]

  # All values that are not contained in given list.
  name_not_in: [String!]

  # All values less than the given value.
  name_lt: String

  # All values less than or equal the given value.
  name_lte: String

  # All values greater than the given value.
  name_gt: String

  # All values greater than or equal the given value.
  name_gte: String

  # All values containing the given string.
  name_contains: String

  # All values not containing the given string.
  name_not_contains: String

  # All values starting with the given string.
  name_starts_with: String

  # All values not starting with the given string.
  name_not_starts_with: String

  # All values ending with the given string.
  name_ends_with: String

  # All values not ending with the given string.
  name_not_ends_with: String
  secret: String

  # All values that are not equal to given value.
  secret_not: String

  # All values that are contained in given list.
  secret_in: [String!]

  # All values that are not contained in given list.
  secret_not_in: [String!]

  # All values less than the given value.
  secret_lt: String

  # All values less than or equal the given value.
  secret_lte: String

  # All values greater than the given value.
  secret_gt: String

  # All values greater than or equal the given value.
  secret_gte: String

  # All values containing the given string.
  secret_contains: String

  # All values not containing the given string.
  secret_not_contains: String

  # All values starting with the given string.
  secret_starts_with: String

  # All values not starting with the given string.
  secret_not_starts_with: String

  # All values ending with the given string.
  secret_ends_with: String

  # All values not ending with the given string.
  secret_not_ends_with: String
  size: Int

  # All values that are not equal to given value.
  size_not: Int

  # All values that are contained in given list.
  size_in: [Int!]

  # All values that are not contained in given list.
  size_not_in: [Int!]

  # All values less than the given value.
  size_lt: Int

  # All values less than or equal the given value.
  size_lte: Int

  # All values greater than the given value.
  size_gt: Int

  # All values greater than or equal the given value.
  size_gte: Int
  updatedAt: DateTime

  # All values that are not equal to given value.
  updatedAt_not: DateTime

  # All values that are contained in given list.
  updatedAt_in: [DateTime!]

  # All values that are not contained in given list.
  updatedAt_not_in: [DateTime!]

  # All values less than the given value.
  updatedAt_lt: DateTime

  # All values less than or equal the given value.
  updatedAt_lte: DateTime

  # All values greater than the given value.
  updatedAt_gt: DateTime

  # All values greater than or equal the given value.
  updatedAt_gte: DateTime
  url: String

  # All values that are not equal to given value.
  url_not: String

  # All values that are contained in given list.
  url_in: [String!]

  # All values that are not contained in given list.
  url_not_in: [String!]

  # All values less than the given value.
  url_lt: String

  # All values less than or equal the given value.
  url_lte: String

  # All values greater than the given value.
  url_gt: String

  # All values greater than or equal the given value.
  url_gte: String

  # All values containing the given string.
  url_contains: String

  # All values not containing the given string.
  url_not_contains: String

  # All values starting with the given string.
  url_starts_with: String

  # All values not starting with the given string.
  url_not_starts_with: String

  # All values ending with the given string.
  url_ends_with: String

  # All values not ending with the given string.
  url_not_ends_with: String
}

enum FileOrderBy {
  contentType_ASC
  contentType_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  secret_ASC
  secret_DESC
  size_ASC
  size_DESC
  updatedAt_ASC
  updatedAt_DESC
  url_ASC
  url_DESC
}

type FilePreviousValues {
  contentType: String!
  createdAt: DateTime!
  id: ID!
  name: String!
  secret: String!
  size: Int!
  updatedAt: DateTime!
  url: String!
}

input FileSubscriptionFilter {
  # Logical AND on all given filters.
  AND: [FileSubscriptionFilter!]

  # Logical OR on all given filters.
  OR: [FileSubscriptionFilter!]

  # The subscription event gets dispatched when it's listed in mutation_in
  mutation_in: [_ModelMutationType!]

  # The subscription event gets only dispatched when one of the updated fields names is included in this list
  updatedFields_contains: String

  # The subscription event gets only dispatched when all of the field names included in this list have been updated
  updatedFields_contains_every: [String!]

  # The subscription event gets only dispatched when some of the field names included in this list have been updated
  updatedFields_contains_some: [String!]
  node: FileSubscriptionFilterNode
}

input FileSubscriptionFilterNode {
  contentType: String

  # All values that are not equal to given value.
  contentType_not: String

  # All values that are contained in given list.
  contentType_in: [String!]

  # All values that are not contained in given list.
  contentType_not_in: [String!]

  # All values less than the given value.
  contentType_lt: String

  # All values less than or equal the given value.
  contentType_lte: String

  # All values greater than the given value.
  contentType_gt: String

  # All values greater than or equal the given value.
  contentType_gte: String

  # All values containing the given string.
  contentType_contains: String

  # All values not containing the given string.
  contentType_not_contains: String

  # All values starting with the given string.
  contentType_starts_with: String

  # All values not starting with the given string.
  contentType_not_starts_with: String

  # All values ending with the given string.
  contentType_ends_with: String

  # All values not ending with the given string.
  contentType_not_ends_with: String
  createdAt: DateTime

  # All values that are not equal to given value.
  createdAt_not: DateTime

  # All values that are contained in given list.
  createdAt_in: [DateTime!]

  # All values that are not contained in given list.
  createdAt_not_in: [DateTime!]

  # All values less than the given value.
  createdAt_lt: DateTime

  # All values less than or equal the given value.
  createdAt_lte: DateTime

  # All values greater than the given value.
  createdAt_gt: DateTime

  # All values greater than or equal the given value.
  createdAt_gte: DateTime
  id: ID

  # All values that are not equal to given value.
  id_not: ID

  # All values that are contained in given list.
  id_in: [ID!]

  # All values that are not contained in given list.
  id_not_in: [ID!]

  # All values less than the given value.
  id_lt: ID

  # All values less than or equal the given value.
  id_lte: ID

  # All values greater than the given value.
  id_gt: ID

  # All values greater than or equal the given value.
  id_gte: ID

  # All values containing the given string.
  id_contains: ID

  # All values not containing the given string.
  id_not_contains: ID

  # All values starting with the given string.
  id_starts_with: ID

  # All values not starting with the given string.
  id_not_starts_with: ID

  # All values ending with the given string.
  id_ends_with: ID

  # All values not ending with the given string.
  id_not_ends_with: ID
  name: String

  # All values that are not equal to given value.
  name_not: String

  # All values that are contained in given list.
  name_in: [String!]

  # All values that are not contained in given list.
  name_not_in: [String!]

  # All values less than the given value.
  name_lt: String

  # All values less than or equal the given value.
  name_lte: String

  # All values greater than the given value.
  name_gt: String

  # All values greater than or equal the given value.
  name_gte: String

  # All values containing the given string.
  name_contains: String

  # All values not containing the given string.
  name_not_contains: String

  # All values starting with the given string.
  name_starts_with: String

  # All values not starting with the given string.
  name_not_starts_with: String

  # All values ending with the given string.
  name_ends_with: String

  # All values not ending with the given string.
  name_not_ends_with: String
  secret: String

  # All values that are not equal to given value.
  secret_not: String

  # All values that are contained in given list.
  secret_in: [String!]

  # All values that are not contained in given list.
  secret_not_in: [String!]

  # All values less than the given value.
  secret_lt: String

  # All values less than or equal the given value.
  secret_lte: String

  # All values greater than the given value.
  secret_gt: String

  # All values greater than or equal the given value.
  secret_gte: String

  # All values containing the given string.
  secret_contains: String

  # All values not containing the given string.
  secret_not_contains: String

  # All values starting with the given string.
  secret_starts_with: String

  # All values not starting with the given string.
  secret_not_starts_with: String

  # All values ending with the given string.
  secret_ends_with: String

  # All values not ending with the given string.
  secret_not_ends_with: String
  size: Int

  # All values that are not equal to given value.
  size_not: Int

  # All values that are contained in given list.
  size_in: [Int!]

  # All values that are not contained in given list.
  size_not_in: [Int!]

  # All values less than the given value.
  size_lt: Int

  # All values less than or equal the given value.
  size_lte: Int

  # All values greater than the given value.
  size_gt: Int

  # All values greater than or equal the given value.
  size_gte: Int
  updatedAt: DateTime

  # All values that are not equal to given value.
  updatedAt_not: DateTime

  # All values that are contained in given list.
  updatedAt_in: [DateTime!]

  # All values that are not contained in given list.
  updatedAt_not_in: [DateTime!]

  # All values less than the given value.
  updatedAt_lt: DateTime

  # All values less than or equal the given value.
  updatedAt_lte: DateTime

  # All values greater than the given value.
  updatedAt_gt: DateTime

  # All values greater than or equal the given value.
  updatedAt_gte: DateTime
  url: String

  # All values that are not equal to given value.
  url_not: String

  # All values that are contained in given list.
  url_in: [String!]

  # All values that are not contained in given list.
  url_not_in: [String!]

  # All values less than the given value.
  url_lt: String

  # All values less than or equal the given value.
  url_lte: String

  # All values greater than the given value.
  url_gt: String

  # All values greater than or equal the given value.
  url_gte: String

  # All values containing the given string.
  url_contains: String

  # All values not containing the given string.
  url_not_contains: String

  # All values starting with the given string.
  url_starts_with: String

  # All values not starting with the given string.
  url_not_starts_with: String

  # All values ending with the given string.
  url_ends_with: String

  # All values not ending with the given string.
  url_not_ends_with: String
}

type FileSubscriptionPayload {
  mutation: _ModelMutationType!
  node: File
  updatedFields: [String!]
  previousValues: FilePreviousValues
}

type Job implements Node {
  approved: Boolean!
  approvedBy(filter: MemberFilter): Member
  company: String
  createdAt: DateTime!
  createdBy(filter: MemberFilter): Member
  dbCreatedAt: DateTime!
  dbId: Int!
  dbUpdatedAt: DateTime!
  description: String
  email: String
  expiryDate: DateTime!
  id: ID!
  linkToJob: String
  location: String
  submitted: Boolean!
  title: String
  updatedAt: DateTime!
}

input JobapprovedByMember {
  about: String
  canLogIn: Boolean!
  dbCreatedAt: DateTime!
  dbId: Int!
  dbUpdatedAt: DateTime!
  email: String!
  firstname: String
  mobile: String
  pronouns: String
  receivedCoachWelcomeEmail: Boolean!
  receivedStudentWelcomeEmail: Boolean!
  surname: String
  twitter: String
  roleId: ID
  role: MemberroleRole
  adminBansIds: [ID!]
  adminBans: [MemberadminBansBan!]
  bansIds: [ID!]
  bans: [MemberbansBan!]
  jobApprovalsIds: [ID!]
  jobApprovals: [MemberjobApprovalsJob!]
  jobPostingsIds: [ID!]
  jobPostings: [MemberjobPostingsJob!]
  subscriptionsIds: [ID!]
  subscriptions: [MembersubscriptionsChapter!]
  workshopsAttendedIds: [ID!]
  workshopsAttended: [MemberworkshopsAttendedWorkshop!]
}

input JobcreatedByMember {
  about: String
  canLogIn: Boolean!
  dbCreatedAt: DateTime!
  dbId: Int!
  dbUpdatedAt: DateTime!
  email: String!
  firstname: String
  mobile: String
  pronouns: String
  receivedCoachWelcomeEmail: Boolean!
  receivedStudentWelcomeEmail: Boolean!
  surname: String
  twitter: String
  roleId: ID
  role: MemberroleRole
  adminBansIds: [ID!]
  adminBans: [MemberadminBansBan!]
  bansIds: [ID!]
  bans: [MemberbansBan!]
  jobApprovalsIds: [ID!]
  jobApprovals: [MemberjobApprovalsJob!]
  jobPostingsIds: [ID!]
  jobPostings: [MemberjobPostingsJob!]
  subscriptionsIds: [ID!]
  subscriptions: [MembersubscriptionsChapter!]
  workshopsAttendedIds: [ID!]
  workshopsAttended: [MemberworkshopsAttendedWorkshop!]
}

input JobFilter {
  # Logical AND on all given filters.
  AND: [JobFilter!]

  # Logical OR on all given filters.
  OR: [JobFilter!]
  approved: Boolean

  # All values that are not equal to given value.
  approved_not: Boolean
  company: String

  # All values that are not equal to given value.
  company_not: String

  # All values that are contained in given list.
  company_in: [String!]

  # All values that are not contained in given list.
  company_not_in: [String!]

  # All values less than the given value.
  company_lt: String

  # All values less than or equal the given value.
  company_lte: String

  # All values greater than the given value.
  company_gt: String

  # All values greater than or equal the given value.
  company_gte: String

  # All values containing the given string.
  company_contains: String

  # All values not containing the given string.
  company_not_contains: String

  # All values starting with the given string.
  company_starts_with: String

  # All values not starting with the given string.
  company_not_starts_with: String

  # All values ending with the given string.
  company_ends_with: String

  # All values not ending with the given string.
  company_not_ends_with: String
  createdAt: DateTime

  # All values that are not equal to given value.
  createdAt_not: DateTime

  # All values that are contained in given list.
  createdAt_in: [DateTime!]

  # All values that are not contained in given list.
  createdAt_not_in: [DateTime!]

  # All values less than the given value.
  createdAt_lt: DateTime

  # All values less than or equal the given value.
  createdAt_lte: DateTime

  # All values greater than the given value.
  createdAt_gt: DateTime

  # All values greater than or equal the given value.
  createdAt_gte: DateTime
  dbCreatedAt: DateTime

  # All values that are not equal to given value.
  dbCreatedAt_not: DateTime

  # All values that are contained in given list.
  dbCreatedAt_in: [DateTime!]

  # All values that are not contained in given list.
  dbCreatedAt_not_in: [DateTime!]

  # All values less than the given value.
  dbCreatedAt_lt: DateTime

  # All values less than or equal the given value.
  dbCreatedAt_lte: DateTime

  # All values greater than the given value.
  dbCreatedAt_gt: DateTime

  # All values greater than or equal the given value.
  dbCreatedAt_gte: DateTime
  dbId: Int

  # All values that are not equal to given value.
  dbId_not: Int

  # All values that are contained in given list.
  dbId_in: [Int!]

  # All values that are not contained in given list.
  dbId_not_in: [Int!]

  # All values less than the given value.
  dbId_lt: Int

  # All values less than or equal the given value.
  dbId_lte: Int

  # All values greater than the given value.
  dbId_gt: Int

  # All values greater than or equal the given value.
  dbId_gte: Int
  dbUpdatedAt: DateTime

  # All values that are not equal to given value.
  dbUpdatedAt_not: DateTime

  # All values that are contained in given list.
  dbUpdatedAt_in: [DateTime!]

  # All values that are not contained in given list.
  dbUpdatedAt_not_in: [DateTime!]

  # All values less than the given value.
  dbUpdatedAt_lt: DateTime

  # All values less than or equal the given value.
  dbUpdatedAt_lte: DateTime

  # All values greater than the given value.
  dbUpdatedAt_gt: DateTime

  # All values greater than or equal the given value.
  dbUpdatedAt_gte: DateTime
  description: String

  # All values that are not equal to given value.
  description_not: String

  # All values that are contained in given list.
  description_in: [String!]

  # All values that are not contained in given list.
  description_not_in: [String!]

  # All values less than the given value.
  description_lt: String

  # All values less than or equal the given value.
  description_lte: String

  # All values greater than the given value.
  description_gt: String

  # All values greater than or equal the given value.
  description_gte: String

  # All values containing the given string.
  description_contains: String

  # All values not containing the given string.
  description_not_contains: String

  # All values starting with the given string.
  description_starts_with: String

  # All values not starting with the given string.
  description_not_starts_with: String

  # All values ending with the given string.
  description_ends_with: String

  # All values not ending with the given string.
  description_not_ends_with: String
  email: String

  # All values that are not equal to given value.
  email_not: String

  # All values that are contained in given list.
  email_in: [String!]

  # All values that are not contained in given list.
  email_not_in: [String!]

  # All values less than the given value.
  email_lt: String

  # All values less than or equal the given value.
  email_lte: String

  # All values greater than the given value.
  email_gt: String

  # All values greater than or equal the given value.
  email_gte: String

  # All values containing the given string.
  email_contains: String

  # All values not containing the given string.
  email_not_contains: String

  # All values starting with the given string.
  email_starts_with: String

  # All values not starting with the given string.
  email_not_starts_with: String

  # All values ending with the given string.
  email_ends_with: String

  # All values not ending with the given string.
  email_not_ends_with: String
  expiryDate: DateTime

  # All values that are not equal to given value.
  expiryDate_not: DateTime

  # All values that are contained in given list.
  expiryDate_in: [DateTime!]

  # All values that are not contained in given list.
  expiryDate_not_in: [DateTime!]

  # All values less than the given value.
  expiryDate_lt: DateTime

  # All values less than or equal the given value.
  expiryDate_lte: DateTime

  # All values greater than the given value.
  expiryDate_gt: DateTime

  # All values greater than or equal the given value.
  expiryDate_gte: DateTime
  id: ID

  # All values that are not equal to given value.
  id_not: ID

  # All values that are contained in given list.
  id_in: [ID!]

  # All values that are not contained in given list.
  id_not_in: [ID!]

  # All values less than the given value.
  id_lt: ID

  # All values less than or equal the given value.
  id_lte: ID

  # All values greater than the given value.
  id_gt: ID

  # All values greater than or equal the given value.
  id_gte: ID

  # All values containing the given string.
  id_contains: ID

  # All values not containing the given string.
  id_not_contains: ID

  # All values starting with the given string.
  id_starts_with: ID

  # All values not starting with the given string.
  id_not_starts_with: ID

  # All values ending with the given string.
  id_ends_with: ID

  # All values not ending with the given string.
  id_not_ends_with: ID
  linkToJob: String

  # All values that are not equal to given value.
  linkToJob_not: String

  # All values that are contained in given list.
  linkToJob_in: [String!]

  # All values that are not contained in given list.
  linkToJob_not_in: [String!]

  # All values less than the given value.
  linkToJob_lt: String

  # All values less than or equal the given value.
  linkToJob_lte: String

  # All values greater than the given value.
  linkToJob_gt: String

  # All values greater than or equal the given value.
  linkToJob_gte: String

  # All values containing the given string.
  linkToJob_contains: String

  # All values not containing the given string.
  linkToJob_not_contains: String

  # All values starting with the given string.
  linkToJob_starts_with: String

  # All values not starting with the given string.
  linkToJob_not_starts_with: String

  # All values ending with the given string.
  linkToJob_ends_with: String

  # All values not ending with the given string.
  linkToJob_not_ends_with: String
  location: String

  # All values that are not equal to given value.
  location_not: String

  # All values that are contained in given list.
  location_in: [String!]

  # All values that are not contained in given list.
  location_not_in: [String!]

  # All values less than the given value.
  location_lt: String

  # All values less than or equal the given value.
  location_lte: String

  # All values greater than the given value.
  location_gt: String

  # All values greater than or equal the given value.
  location_gte: String

  # All values containing the given string.
  location_contains: String

  # All values not containing the given string.
  location_not_contains: String

  # All values starting with the given string.
  location_starts_with: String

  # All values not starting with the given string.
  location_not_starts_with: String

  # All values ending with the given string.
  location_ends_with: String

  # All values not ending with the given string.
  location_not_ends_with: String
  submitted: Boolean

  # All values that are not equal to given value.
  submitted_not: Boolean
  title: String

  # All values that are not equal to given value.
  title_not: String

  # All values that are contained in given list.
  title_in: [String!]

  # All values that are not contained in given list.
  title_not_in: [String!]

  # All values less than the given value.
  title_lt: String

  # All values less than or equal the given value.
  title_lte: String

  # All values greater than the given value.
  title_gt: String

  # All values greater than or equal the given value.
  title_gte: String

  # All values containing the given string.
  title_contains: String

  # All values not containing the given string.
  title_not_contains: String

  # All values starting with the given string.
  title_starts_with: String

  # All values not starting with the given string.
  title_not_starts_with: String

  # All values ending with the given string.
  title_ends_with: String

  # All values not ending with the given string.
  title_not_ends_with: String
  updatedAt: DateTime

  # All values that are not equal to given value.
  updatedAt_not: DateTime

  # All values that are contained in given list.
  updatedAt_in: [DateTime!]

  # All values that are not contained in given list.
  updatedAt_not_in: [DateTime!]

  # All values less than the given value.
  updatedAt_lt: DateTime

  # All values less than or equal the given value.
  updatedAt_lte: DateTime

  # All values greater than the given value.
  updatedAt_gt: DateTime

  # All values greater than or equal the given value.
  updatedAt_gte: DateTime
  approvedBy: MemberFilter
  createdBy: MemberFilter
}

enum JobOrderBy {
  approved_ASC
  approved_DESC
  company_ASC
  company_DESC
  createdAt_ASC
  createdAt_DESC
  dbCreatedAt_ASC
  dbCreatedAt_DESC
  dbId_ASC
  dbId_DESC
  dbUpdatedAt_ASC
  dbUpdatedAt_DESC
  description_ASC
  description_DESC
  email_ASC
  email_DESC
  expiryDate_ASC
  expiryDate_DESC
  id_ASC
  id_DESC
  linkToJob_ASC
  linkToJob_DESC
  location_ASC
  location_DESC
  submitted_ASC
  submitted_DESC
  title_ASC
  title_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type JobPreviousValues {
  approved: Boolean!
  company: String
  createdAt: DateTime!
  dbCreatedAt: DateTime!
  dbId: Int!
  dbUpdatedAt: DateTime!
  description: String
  email: String
  expiryDate: DateTime!
  id: ID!
  linkToJob: String
  location: String
  submitted: Boolean!
  title: String
  updatedAt: DateTime!
}

input JobSubscriptionFilter {
  # Logical AND on all given filters.
  AND: [JobSubscriptionFilter!]

  # Logical OR on all given filters.
  OR: [JobSubscriptionFilter!]

  # The subscription event gets dispatched when it's listed in mutation_in
  mutation_in: [_ModelMutationType!]

  # The subscription event gets only dispatched when one of the updated fields names is included in this list
  updatedFields_contains: String

  # The subscription event gets only dispatched when all of the field names included in this list have been updated
  updatedFields_contains_every: [String!]

  # The subscription event gets only dispatched when some of the field names included in this list have been updated
  updatedFields_contains_some: [String!]
  node: JobSubscriptionFilterNode
}

input JobSubscriptionFilterNode {
  approved: Boolean

  # All values that are not equal to given value.
  approved_not: Boolean
  company: String

  # All values that are not equal to given value.
  company_not: String

  # All values that are contained in given list.
  company_in: [String!]

  # All values that are not contained in given list.
  company_not_in: [String!]

  # All values less than the given value.
  company_lt: String

  # All values less than or equal the given value.
  company_lte: String

  # All values greater than the given value.
  company_gt: String

  # All values greater than or equal the given value.
  company_gte: String

  # All values containing the given string.
  company_contains: String

  # All values not containing the given string.
  company_not_contains: String

  # All values starting with the given string.
  company_starts_with: String

  # All values not starting with the given string.
  company_not_starts_with: String

  # All values ending with the given string.
  company_ends_with: String

  # All values not ending with the given string.
  company_not_ends_with: String
  createdAt: DateTime

  # All values that are not equal to given value.
  createdAt_not: DateTime

  # All values that are contained in given list.
  createdAt_in: [DateTime!]

  # All values that are not contained in given list.
  createdAt_not_in: [DateTime!]

  # All values less than the given value.
  createdAt_lt: DateTime

  # All values less than or equal the given value.
  createdAt_lte: DateTime

  # All values greater than the given value.
  createdAt_gt: DateTime

  # All values greater than or equal the given value.
  createdAt_gte: DateTime
  dbCreatedAt: DateTime

  # All values that are not equal to given value.
  dbCreatedAt_not: DateTime

  # All values that are contained in given list.
  dbCreatedAt_in: [DateTime!]

  # All values that are not contained in given list.
  dbCreatedAt_not_in: [DateTime!]

  # All values less than the given value.
  dbCreatedAt_lt: DateTime

  # All values less than or equal the given value.
  dbCreatedAt_lte: DateTime

  # All values greater than the given value.
  dbCreatedAt_gt: DateTime

  # All values greater than or equal the given value.
  dbCreatedAt_gte: DateTime
  dbId: Int

  # All values that are not equal to given value.
  dbId_not: Int

  # All values that are contained in given list.
  dbId_in: [Int!]

  # All values that are not contained in given list.
  dbId_not_in: [Int!]

  # All values less than the given value.
  dbId_lt: Int

  # All values less than or equal the given value.
  dbId_lte: Int

  # All values greater than the given value.
  dbId_gt: Int

  # All values greater than or equal the given value.
  dbId_gte: Int
  dbUpdatedAt: DateTime

  # All values that are not equal to given value.
  dbUpdatedAt_not: DateTime

  # All values that are contained in given list.
  dbUpdatedAt_in: [DateTime!]

  # All values that are not contained in given list.
  dbUpdatedAt_not_in: [DateTime!]

  # All values less than the given value.
  dbUpdatedAt_lt: DateTime

  # All values less than or equal the given value.
  dbUpdatedAt_lte: DateTime

  # All values greater than the given value.
  dbUpdatedAt_gt: DateTime

  # All values greater than or equal the given value.
  dbUpdatedAt_gte: DateTime
  description: String

  # All values that are not equal to given value.
  description_not: String

  # All values that are contained in given list.
  description_in: [String!]

  # All values that are not contained in given list.
  description_not_in: [String!]

  # All values less than the given value.
  description_lt: String

  # All values less than or equal the given value.
  description_lte: String

  # All values greater than the given value.
  description_gt: String

  # All values greater than or equal the given value.
  description_gte: String

  # All values containing the given string.
  description_contains: String

  # All values not containing the given string.
  description_not_contains: String

  # All values starting with the given string.
  description_starts_with: String

  # All values not starting with the given string.
  description_not_starts_with: String

  # All values ending with the given string.
  description_ends_with: String

  # All values not ending with the given string.
  description_not_ends_with: String
  email: String

  # All values that are not equal to given value.
  email_not: String

  # All values that are contained in given list.
  email_in: [String!]

  # All values that are not contained in given list.
  email_not_in: [String!]

  # All values less than the given value.
  email_lt: String

  # All values less than or equal the given value.
  email_lte: String

  # All values greater than the given value.
  email_gt: String

  # All values greater than or equal the given value.
  email_gte: String

  # All values containing the given string.
  email_contains: String

  # All values not containing the given string.
  email_not_contains: String

  # All values starting with the given string.
  email_starts_with: String

  # All values not starting with the given string.
  email_not_starts_with: String

  # All values ending with the given string.
  email_ends_with: String

  # All values not ending with the given string.
  email_not_ends_with: String
  expiryDate: DateTime

  # All values that are not equal to given value.
  expiryDate_not: DateTime

  # All values that are contained in given list.
  expiryDate_in: [DateTime!]

  # All values that are not contained in given list.
  expiryDate_not_in: [DateTime!]

  # All values less than the given value.
  expiryDate_lt: DateTime

  # All values less than or equal the given value.
  expiryDate_lte: DateTime

  # All values greater than the given value.
  expiryDate_gt: DateTime

  # All values greater than or equal the given value.
  expiryDate_gte: DateTime
  id: ID

  # All values that are not equal to given value.
  id_not: ID

  # All values that are contained in given list.
  id_in: [ID!]

  # All values that are not contained in given list.
  id_not_in: [ID!]

  # All values less than the given value.
  id_lt: ID

  # All values less than or equal the given value.
  id_lte: ID

  # All values greater than the given value.
  id_gt: ID

  # All values greater than or equal the given value.
  id_gte: ID

  # All values containing the given string.
  id_contains: ID

  # All values not containing the given string.
  id_not_contains: ID

  # All values starting with the given string.
  id_starts_with: ID

  # All values not starting with the given string.
  id_not_starts_with: ID

  # All values ending with the given string.
  id_ends_with: ID

  # All values not ending with the given string.
  id_not_ends_with: ID
  linkToJob: String

  # All values that are not equal to given value.
  linkToJob_not: String

  # All values that are contained in given list.
  linkToJob_in: [String!]

  # All values that are not contained in given list.
  linkToJob_not_in: [String!]

  # All values less than the given value.
  linkToJob_lt: String

  # All values less than or equal the given value.
  linkToJob_lte: String

  # All values greater than the given value.
  linkToJob_gt: String

  # All values greater than or equal the given value.
  linkToJob_gte: String

  # All values containing the given string.
  linkToJob_contains: String

  # All values not containing the given string.
  linkToJob_not_contains: String

  # All values starting with the given string.
  linkToJob_starts_with: String

  # All values not starting with the given string.
  linkToJob_not_starts_with: String

  # All values ending with the given string.
  linkToJob_ends_with: String

  # All values not ending with the given string.
  linkToJob_not_ends_with: String
  location: String

  # All values that are not equal to given value.
  location_not: String

  # All values that are contained in given list.
  location_in: [String!]

  # All values that are not contained in given list.
  location_not_in: [String!]

  # All values less than the given value.
  location_lt: String

  # All values less than or equal the given value.
  location_lte: String

  # All values greater than the given value.
  location_gt: String

  # All values greater than or equal the given value.
  location_gte: String

  # All values containing the given string.
  location_contains: String

  # All values not containing the given string.
  location_not_contains: String

  # All values starting with the given string.
  location_starts_with: String

  # All values not starting with the given string.
  location_not_starts_with: String

  # All values ending with the given string.
  location_ends_with: String

  # All values not ending with the given string.
  location_not_ends_with: String
  submitted: Boolean

  # All values that are not equal to given value.
  submitted_not: Boolean
  title: String

  # All values that are not equal to given value.
  title_not: String

  # All values that are contained in given list.
  title_in: [String!]

  # All values that are not contained in given list.
  title_not_in: [String!]

  # All values less than the given value.
  title_lt: String

  # All values less than or equal the given value.
  title_lte: String

  # All values greater than the given value.
  title_gt: String

  # All values greater than or equal the given value.
  title_gte: String

  # All values containing the given string.
  title_contains: String

  # All values not containing the given string.
  title_not_contains: String

  # All values starting with the given string.
  title_starts_with: String

  # All values not starting with the given string.
  title_not_starts_with: String

  # All values ending with the given string.
  title_ends_with: String

  # All values not ending with the given string.
  title_not_ends_with: String
  updatedAt: DateTime

  # All values that are not equal to given value.
  updatedAt_not: DateTime

  # All values that are contained in given list.
  updatedAt_in: [DateTime!]

  # All values that are not contained in given list.
  updatedAt_not_in: [DateTime!]

  # All values less than the given value.
  updatedAt_lt: DateTime

  # All values less than or equal the given value.
  updatedAt_lte: DateTime

  # All values greater than the given value.
  updatedAt_gt: DateTime

  # All values greater than or equal the given value.
  updatedAt_gte: DateTime
  approvedBy: MemberFilter
  createdBy: MemberFilter
}

type JobSubscriptionPayload {
  mutation: _ModelMutationType!
  node: Job
  updatedFields: [String!]
  previousValues: JobPreviousValues
}

type Member implements Node {
  about: String
  adminBans(filter: BanFilter, orderBy: BanOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): [Ban!]
  bans(filter: BanFilter, orderBy: BanOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): [Ban!]
  canLogIn: Boolean!
  createdAt: DateTime!
  dbCreatedAt: DateTime!
  dbId: Int!
  dbUpdatedAt: DateTime!
  email: String!
  firstname: String
  id: ID!
  jobApprovals(filter: JobFilter, orderBy: JobOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): [Job!]
  jobPostings(filter: JobFilter, orderBy: JobOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): [Job!]
  mobile: String
  pronouns: String
  receivedCoachWelcomeEmail: Boolean!
  receivedStudentWelcomeEmail: Boolean!
  role(filter: RoleFilter): Role
  subscriptions(filter: ChapterFilter, orderBy: ChapterOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): [Chapter!]
  surname: String
  twitter: String
  updatedAt: DateTime!
  workshopsAttended(filter: WorkshopFilter, orderBy: WorkshopOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): [Workshop!]

  # Meta information about the query.
  _adminBansMeta(filter: BanFilter, orderBy: BanOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): _QueryMeta!

  # Meta information about the query.
  _bansMeta(filter: BanFilter, orderBy: BanOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): _QueryMeta!

  # Meta information about the query.
  _jobApprovalsMeta(filter: JobFilter, orderBy: JobOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): _QueryMeta!

  # Meta information about the query.
  _jobPostingsMeta(filter: JobFilter, orderBy: JobOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): _QueryMeta!

  # Meta information about the query.
  _subscriptionsMeta(filter: ChapterFilter, orderBy: ChapterOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): _QueryMeta!

  # Meta information about the query.
  _workshopsAttendedMeta(filter: WorkshopFilter, orderBy: WorkshopOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): _QueryMeta!
}

input MemberadminBansBan {
  dbCreatedAt: DateTime!
  dbId: Int!
  dbUpdatedAt: DateTime!
  expiresAt: DateTime!
  explanation: String!
  note: String
  permanent: Boolean!
  reason: String!
  memberId: ID
  member: BanmemberMember
}

input MemberbansBan {
  dbCreatedAt: DateTime!
  dbId: Int!
  dbUpdatedAt: DateTime!
  expiresAt: DateTime!
  explanation: String!
  note: String
  permanent: Boolean!
  reason: String!
  adminId: ID
  admin: BanadminMember
}

input MemberFilter {
  # Logical AND on all given filters.
  AND: [MemberFilter!]

  # Logical OR on all given filters.
  OR: [MemberFilter!]
  about: String

  # All values that are not equal to given value.
  about_not: String

  # All values that are contained in given list.
  about_in: [String!]

  # All values that are not contained in given list.
  about_not_in: [String!]

  # All values less than the given value.
  about_lt: String

  # All values less than or equal the given value.
  about_lte: String

  # All values greater than the given value.
  about_gt: String

  # All values greater than or equal the given value.
  about_gte: String

  # All values containing the given string.
  about_contains: String

  # All values not containing the given string.
  about_not_contains: String

  # All values starting with the given string.
  about_starts_with: String

  # All values not starting with the given string.
  about_not_starts_with: String

  # All values ending with the given string.
  about_ends_with: String

  # All values not ending with the given string.
  about_not_ends_with: String
  canLogIn: Boolean

  # All values that are not equal to given value.
  canLogIn_not: Boolean
  createdAt: DateTime

  # All values that are not equal to given value.
  createdAt_not: DateTime

  # All values that are contained in given list.
  createdAt_in: [DateTime!]

  # All values that are not contained in given list.
  createdAt_not_in: [DateTime!]

  # All values less than the given value.
  createdAt_lt: DateTime

  # All values less than or equal the given value.
  createdAt_lte: DateTime

  # All values greater than the given value.
  createdAt_gt: DateTime

  # All values greater than or equal the given value.
  createdAt_gte: DateTime
  dbCreatedAt: DateTime

  # All values that are not equal to given value.
  dbCreatedAt_not: DateTime

  # All values that are contained in given list.
  dbCreatedAt_in: [DateTime!]

  # All values that are not contained in given list.
  dbCreatedAt_not_in: [DateTime!]

  # All values less than the given value.
  dbCreatedAt_lt: DateTime

  # All values less than or equal the given value.
  dbCreatedAt_lte: DateTime

  # All values greater than the given value.
  dbCreatedAt_gt: DateTime

  # All values greater than or equal the given value.
  dbCreatedAt_gte: DateTime
  dbId: Int

  # All values that are not equal to given value.
  dbId_not: Int

  # All values that are contained in given list.
  dbId_in: [Int!]

  # All values that are not contained in given list.
  dbId_not_in: [Int!]

  # All values less than the given value.
  dbId_lt: Int

  # All values less than or equal the given value.
  dbId_lte: Int

  # All values greater than the given value.
  dbId_gt: Int

  # All values greater than or equal the given value.
  dbId_gte: Int
  dbUpdatedAt: DateTime

  # All values that are not equal to given value.
  dbUpdatedAt_not: DateTime

  # All values that are contained in given list.
  dbUpdatedAt_in: [DateTime!]

  # All values that are not contained in given list.
  dbUpdatedAt_not_in: [DateTime!]

  # All values less than the given value.
  dbUpdatedAt_lt: DateTime

  # All values less than or equal the given value.
  dbUpdatedAt_lte: DateTime

  # All values greater than the given value.
  dbUpdatedAt_gt: DateTime

  # All values greater than or equal the given value.
  dbUpdatedAt_gte: DateTime
  email: String

  # All values that are not equal to given value.
  email_not: String

  # All values that are contained in given list.
  email_in: [String!]

  # All values that are not contained in given list.
  email_not_in: [String!]

  # All values less than the given value.
  email_lt: String

  # All values less than or equal the given value.
  email_lte: String

  # All values greater than the given value.
  email_gt: String

  # All values greater than or equal the given value.
  email_gte: String

  # All values containing the given string.
  email_contains: String

  # All values not containing the given string.
  email_not_contains: String

  # All values starting with the given string.
  email_starts_with: String

  # All values not starting with the given string.
  email_not_starts_with: String

  # All values ending with the given string.
  email_ends_with: String

  # All values not ending with the given string.
  email_not_ends_with: String
  firstname: String

  # All values that are not equal to given value.
  firstname_not: String

  # All values that are contained in given list.
  firstname_in: [String!]

  # All values that are not contained in given list.
  firstname_not_in: [String!]

  # All values less than the given value.
  firstname_lt: String

  # All values less than or equal the given value.
  firstname_lte: String

  # All values greater than the given value.
  firstname_gt: String

  # All values greater than or equal the given value.
  firstname_gte: String

  # All values containing the given string.
  firstname_contains: String

  # All values not containing the given string.
  firstname_not_contains: String

  # All values starting with the given string.
  firstname_starts_with: String

  # All values not starting with the given string.
  firstname_not_starts_with: String

  # All values ending with the given string.
  firstname_ends_with: String

  # All values not ending with the given string.
  firstname_not_ends_with: String
  id: ID

  # All values that are not equal to given value.
  id_not: ID

  # All values that are contained in given list.
  id_in: [ID!]

  # All values that are not contained in given list.
  id_not_in: [ID!]

  # All values less than the given value.
  id_lt: ID

  # All values less than or equal the given value.
  id_lte: ID

  # All values greater than the given value.
  id_gt: ID

  # All values greater than or equal the given value.
  id_gte: ID

  # All values containing the given string.
  id_contains: ID

  # All values not containing the given string.
  id_not_contains: ID

  # All values starting with the given string.
  id_starts_with: ID

  # All values not starting with the given string.
  id_not_starts_with: ID

  # All values ending with the given string.
  id_ends_with: ID

  # All values not ending with the given string.
  id_not_ends_with: ID
  mobile: String

  # All values that are not equal to given value.
  mobile_not: String

  # All values that are contained in given list.
  mobile_in: [String!]

  # All values that are not contained in given list.
  mobile_not_in: [String!]

  # All values less than the given value.
  mobile_lt: String

  # All values less than or equal the given value.
  mobile_lte: String

  # All values greater than the given value.
  mobile_gt: String

  # All values greater than or equal the given value.
  mobile_gte: String

  # All values containing the given string.
  mobile_contains: String

  # All values not containing the given string.
  mobile_not_contains: String

  # All values starting with the given string.
  mobile_starts_with: String

  # All values not starting with the given string.
  mobile_not_starts_with: String

  # All values ending with the given string.
  mobile_ends_with: String

  # All values not ending with the given string.
  mobile_not_ends_with: String
  pronouns: String

  # All values that are not equal to given value.
  pronouns_not: String

  # All values that are contained in given list.
  pronouns_in: [String!]

  # All values that are not contained in given list.
  pronouns_not_in: [String!]

  # All values less than the given value.
  pronouns_lt: String

  # All values less than or equal the given value.
  pronouns_lte: String

  # All values greater than the given value.
  pronouns_gt: String

  # All values greater than or equal the given value.
  pronouns_gte: String

  # All values containing the given string.
  pronouns_contains: String

  # All values not containing the given string.
  pronouns_not_contains: String

  # All values starting with the given string.
  pronouns_starts_with: String

  # All values not starting with the given string.
  pronouns_not_starts_with: String

  # All values ending with the given string.
  pronouns_ends_with: String

  # All values not ending with the given string.
  pronouns_not_ends_with: String
  receivedCoachWelcomeEmail: Boolean

  # All values that are not equal to given value.
  receivedCoachWelcomeEmail_not: Boolean
  receivedStudentWelcomeEmail: Boolean

  # All values that are not equal to given value.
  receivedStudentWelcomeEmail_not: Boolean
  surname: String

  # All values that are not equal to given value.
  surname_not: String

  # All values that are contained in given list.
  surname_in: [String!]

  # All values that are not contained in given list.
  surname_not_in: [String!]

  # All values less than the given value.
  surname_lt: String

  # All values less than or equal the given value.
  surname_lte: String

  # All values greater than the given value.
  surname_gt: String

  # All values greater than or equal the given value.
  surname_gte: String

  # All values containing the given string.
  surname_contains: String

  # All values not containing the given string.
  surname_not_contains: String

  # All values starting with the given string.
  surname_starts_with: String

  # All values not starting with the given string.
  surname_not_starts_with: String

  # All values ending with the given string.
  surname_ends_with: String

  # All values not ending with the given string.
  surname_not_ends_with: String
  twitter: String

  # All values that are not equal to given value.
  twitter_not: String

  # All values that are contained in given list.
  twitter_in: [String!]

  # All values that are not contained in given list.
  twitter_not_in: [String!]

  # All values less than the given value.
  twitter_lt: String

  # All values less than or equal the given value.
  twitter_lte: String

  # All values greater than the given value.
  twitter_gt: String

  # All values greater than or equal the given value.
  twitter_gte: String

  # All values containing the given string.
  twitter_contains: String

  # All values not containing the given string.
  twitter_not_contains: String

  # All values starting with the given string.
  twitter_starts_with: String

  # All values not starting with the given string.
  twitter_not_starts_with: String

  # All values ending with the given string.
  twitter_ends_with: String

  # All values not ending with the given string.
  twitter_not_ends_with: String
  updatedAt: DateTime

  # All values that are not equal to given value.
  updatedAt_not: DateTime

  # All values that are contained in given list.
  updatedAt_in: [DateTime!]

  # All values that are not contained in given list.
  updatedAt_not_in: [DateTime!]

  # All values less than the given value.
  updatedAt_lt: DateTime

  # All values less than or equal the given value.
  updatedAt_lte: DateTime

  # All values greater than the given value.
  updatedAt_gt: DateTime

  # All values greater than or equal the given value.
  updatedAt_gte: DateTime
  adminBans_every: BanFilter
  adminBans_some: BanFilter
  adminBans_none: BanFilter
  bans_every: BanFilter
  bans_some: BanFilter
  bans_none: BanFilter
  jobApprovals_every: JobFilter
  jobApprovals_some: JobFilter
  jobApprovals_none: JobFilter
  jobPostings_every: JobFilter
  jobPostings_some: JobFilter
  jobPostings_none: JobFilter
  role: RoleFilter
  subscriptions_every: ChapterFilter
  subscriptions_some: ChapterFilter
  subscriptions_none: ChapterFilter
  workshopsAttended_every: WorkshopFilter
  workshopsAttended_some: WorkshopFilter
  workshopsAttended_none: WorkshopFilter
}

input MemberjobApprovalsJob {
  approved: Boolean!
  company: String
  dbCreatedAt: DateTime!
  dbId: Int!
  dbUpdatedAt: DateTime!
  description: String
  email: String
  expiryDate: DateTime!
  linkToJob: String
  location: String
  submitted: Boolean!
  title: String
  createdById: ID
  createdBy: JobcreatedByMember
}

input MemberjobPostingsJob {
  approved: Boolean!
  company: String
  dbCreatedAt: DateTime!
  dbId: Int!
  dbUpdatedAt: DateTime!
  description: String
  email: String
  expiryDate: DateTime!
  linkToJob: String
  location: String
  submitted: Boolean!
  title: String
  approvedById: ID
  approvedBy: JobapprovedByMember
}

enum MemberOrderBy {
  about_ASC
  about_DESC
  canLogIn_ASC
  canLogIn_DESC
  createdAt_ASC
  createdAt_DESC
  dbCreatedAt_ASC
  dbCreatedAt_DESC
  dbId_ASC
  dbId_DESC
  dbUpdatedAt_ASC
  dbUpdatedAt_DESC
  email_ASC
  email_DESC
  firstname_ASC
  firstname_DESC
  id_ASC
  id_DESC
  mobile_ASC
  mobile_DESC
  pronouns_ASC
  pronouns_DESC
  receivedCoachWelcomeEmail_ASC
  receivedCoachWelcomeEmail_DESC
  receivedStudentWelcomeEmail_ASC
  receivedStudentWelcomeEmail_DESC
  surname_ASC
  surname_DESC
  twitter_ASC
  twitter_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type MemberPreviousValues {
  about: String
  canLogIn: Boolean!
  createdAt: DateTime!
  dbCreatedAt: DateTime!
  dbId: Int!
  dbUpdatedAt: DateTime!
  email: String!
  firstname: String
  id: ID!
  mobile: String
  pronouns: String
  receivedCoachWelcomeEmail: Boolean!
  receivedStudentWelcomeEmail: Boolean!
  surname: String
  twitter: String
  updatedAt: DateTime!
}

input MemberroleRole {
  dbId: Int!
  name: String!
  membersIds: [ID!]
  members: [RolemembersMember!]
}

input MemberSubscriptionFilter {
  # Logical AND on all given filters.
  AND: [MemberSubscriptionFilter!]

  # Logical OR on all given filters.
  OR: [MemberSubscriptionFilter!]

  # The subscription event gets dispatched when it's listed in mutation_in
  mutation_in: [_ModelMutationType!]

  # The subscription event gets only dispatched when one of the updated fields names is included in this list
  updatedFields_contains: String

  # The subscription event gets only dispatched when all of the field names included in this list have been updated
  updatedFields_contains_every: [String!]

  # The subscription event gets only dispatched when some of the field names included in this list have been updated
  updatedFields_contains_some: [String!]
  node: MemberSubscriptionFilterNode
}

input MemberSubscriptionFilterNode {
  about: String

  # All values that are not equal to given value.
  about_not: String

  # All values that are contained in given list.
  about_in: [String!]

  # All values that are not contained in given list.
  about_not_in: [String!]

  # All values less than the given value.
  about_lt: String

  # All values less than or equal the given value.
  about_lte: String

  # All values greater than the given value.
  about_gt: String

  # All values greater than or equal the given value.
  about_gte: String

  # All values containing the given string.
  about_contains: String

  # All values not containing the given string.
  about_not_contains: String

  # All values starting with the given string.
  about_starts_with: String

  # All values not starting with the given string.
  about_not_starts_with: String

  # All values ending with the given string.
  about_ends_with: String

  # All values not ending with the given string.
  about_not_ends_with: String
  canLogIn: Boolean

  # All values that are not equal to given value.
  canLogIn_not: Boolean
  createdAt: DateTime

  # All values that are not equal to given value.
  createdAt_not: DateTime

  # All values that are contained in given list.
  createdAt_in: [DateTime!]

  # All values that are not contained in given list.
  createdAt_not_in: [DateTime!]

  # All values less than the given value.
  createdAt_lt: DateTime

  # All values less than or equal the given value.
  createdAt_lte: DateTime

  # All values greater than the given value.
  createdAt_gt: DateTime

  # All values greater than or equal the given value.
  createdAt_gte: DateTime
  dbCreatedAt: DateTime

  # All values that are not equal to given value.
  dbCreatedAt_not: DateTime

  # All values that are contained in given list.
  dbCreatedAt_in: [DateTime!]

  # All values that are not contained in given list.
  dbCreatedAt_not_in: [DateTime!]

  # All values less than the given value.
  dbCreatedAt_lt: DateTime

  # All values less than or equal the given value.
  dbCreatedAt_lte: DateTime

  # All values greater than the given value.
  dbCreatedAt_gt: DateTime

  # All values greater than or equal the given value.
  dbCreatedAt_gte: DateTime
  dbId: Int

  # All values that are not equal to given value.
  dbId_not: Int

  # All values that are contained in given list.
  dbId_in: [Int!]

  # All values that are not contained in given list.
  dbId_not_in: [Int!]

  # All values less than the given value.
  dbId_lt: Int

  # All values less than or equal the given value.
  dbId_lte: Int

  # All values greater than the given value.
  dbId_gt: Int

  # All values greater than or equal the given value.
  dbId_gte: Int
  dbUpdatedAt: DateTime

  # All values that are not equal to given value.
  dbUpdatedAt_not: DateTime

  # All values that are contained in given list.
  dbUpdatedAt_in: [DateTime!]

  # All values that are not contained in given list.
  dbUpdatedAt_not_in: [DateTime!]

  # All values less than the given value.
  dbUpdatedAt_lt: DateTime

  # All values less than or equal the given value.
  dbUpdatedAt_lte: DateTime

  # All values greater than the given value.
  dbUpdatedAt_gt: DateTime

  # All values greater than or equal the given value.
  dbUpdatedAt_gte: DateTime
  email: String

  # All values that are not equal to given value.
  email_not: String

  # All values that are contained in given list.
  email_in: [String!]

  # All values that are not contained in given list.
  email_not_in: [String!]

  # All values less than the given value.
  email_lt: String

  # All values less than or equal the given value.
  email_lte: String

  # All values greater than the given value.
  email_gt: String

  # All values greater than or equal the given value.
  email_gte: String

  # All values containing the given string.
  email_contains: String

  # All values not containing the given string.
  email_not_contains: String

  # All values starting with the given string.
  email_starts_with: String

  # All values not starting with the given string.
  email_not_starts_with: String

  # All values ending with the given string.
  email_ends_with: String

  # All values not ending with the given string.
  email_not_ends_with: String
  firstname: String

  # All values that are not equal to given value.
  firstname_not: String

  # All values that are contained in given list.
  firstname_in: [String!]

  # All values that are not contained in given list.
  firstname_not_in: [String!]

  # All values less than the given value.
  firstname_lt: String

  # All values less than or equal the given value.
  firstname_lte: String

  # All values greater than the given value.
  firstname_gt: String

  # All values greater than or equal the given value.
  firstname_gte: String

  # All values containing the given string.
  firstname_contains: String

  # All values not containing the given string.
  firstname_not_contains: String

  # All values starting with the given string.
  firstname_starts_with: String

  # All values not starting with the given string.
  firstname_not_starts_with: String

  # All values ending with the given string.
  firstname_ends_with: String

  # All values not ending with the given string.
  firstname_not_ends_with: String
  id: ID

  # All values that are not equal to given value.
  id_not: ID

  # All values that are contained in given list.
  id_in: [ID!]

  # All values that are not contained in given list.
  id_not_in: [ID!]

  # All values less than the given value.
  id_lt: ID

  # All values less than or equal the given value.
  id_lte: ID

  # All values greater than the given value.
  id_gt: ID

  # All values greater than or equal the given value.
  id_gte: ID

  # All values containing the given string.
  id_contains: ID

  # All values not containing the given string.
  id_not_contains: ID

  # All values starting with the given string.
  id_starts_with: ID

  # All values not starting with the given string.
  id_not_starts_with: ID

  # All values ending with the given string.
  id_ends_with: ID

  # All values not ending with the given string.
  id_not_ends_with: ID
  mobile: String

  # All values that are not equal to given value.
  mobile_not: String

  # All values that are contained in given list.
  mobile_in: [String!]

  # All values that are not contained in given list.
  mobile_not_in: [String!]

  # All values less than the given value.
  mobile_lt: String

  # All values less than or equal the given value.
  mobile_lte: String

  # All values greater than the given value.
  mobile_gt: String

  # All values greater than or equal the given value.
  mobile_gte: String

  # All values containing the given string.
  mobile_contains: String

  # All values not containing the given string.
  mobile_not_contains: String

  # All values starting with the given string.
  mobile_starts_with: String

  # All values not starting with the given string.
  mobile_not_starts_with: String

  # All values ending with the given string.
  mobile_ends_with: String

  # All values not ending with the given string.
  mobile_not_ends_with: String
  pronouns: String

  # All values that are not equal to given value.
  pronouns_not: String

  # All values that are contained in given list.
  pronouns_in: [String!]

  # All values that are not contained in given list.
  pronouns_not_in: [String!]

  # All values less than the given value.
  pronouns_lt: String

  # All values less than or equal the given value.
  pronouns_lte: String

  # All values greater than the given value.
  pronouns_gt: String

  # All values greater than or equal the given value.
  pronouns_gte: String

  # All values containing the given string.
  pronouns_contains: String

  # All values not containing the given string.
  pronouns_not_contains: String

  # All values starting with the given string.
  pronouns_starts_with: String

  # All values not starting with the given string.
  pronouns_not_starts_with: String

  # All values ending with the given string.
  pronouns_ends_with: String

  # All values not ending with the given string.
  pronouns_not_ends_with: String
  receivedCoachWelcomeEmail: Boolean

  # All values that are not equal to given value.
  receivedCoachWelcomeEmail_not: Boolean
  receivedStudentWelcomeEmail: Boolean

  # All values that are not equal to given value.
  receivedStudentWelcomeEmail_not: Boolean
  surname: String

  # All values that are not equal to given value.
  surname_not: String

  # All values that are contained in given list.
  surname_in: [String!]

  # All values that are not contained in given list.
  surname_not_in: [String!]

  # All values less than the given value.
  surname_lt: String

  # All values less than or equal the given value.
  surname_lte: String

  # All values greater than the given value.
  surname_gt: String

  # All values greater than or equal the given value.
  surname_gte: String

  # All values containing the given string.
  surname_contains: String

  # All values not containing the given string.
  surname_not_contains: String

  # All values starting with the given string.
  surname_starts_with: String

  # All values not starting with the given string.
  surname_not_starts_with: String

  # All values ending with the given string.
  surname_ends_with: String

  # All values not ending with the given string.
  surname_not_ends_with: String
  twitter: String

  # All values that are not equal to given value.
  twitter_not: String

  # All values that are contained in given list.
  twitter_in: [String!]

  # All values that are not contained in given list.
  twitter_not_in: [String!]

  # All values less than the given value.
  twitter_lt: String

  # All values less than or equal the given value.
  twitter_lte: String

  # All values greater than the given value.
  twitter_gt: String

  # All values greater than or equal the given value.
  twitter_gte: String

  # All values containing the given string.
  twitter_contains: String

  # All values not containing the given string.
  twitter_not_contains: String

  # All values starting with the given string.
  twitter_starts_with: String

  # All values not starting with the given string.
  twitter_not_starts_with: String

  # All values ending with the given string.
  twitter_ends_with: String

  # All values not ending with the given string.
  twitter_not_ends_with: String
  updatedAt: DateTime

  # All values that are not equal to given value.
  updatedAt_not: DateTime

  # All values that are contained in given list.
  updatedAt_in: [DateTime!]

  # All values that are not contained in given list.
  updatedAt_not_in: [DateTime!]

  # All values less than the given value.
  updatedAt_lt: DateTime

  # All values less than or equal the given value.
  updatedAt_lte: DateTime

  # All values greater than the given value.
  updatedAt_gt: DateTime

  # All values greater than or equal the given value.
  updatedAt_gte: DateTime
  adminBans_every: BanFilter
  adminBans_some: BanFilter
  adminBans_none: BanFilter
  bans_every: BanFilter
  bans_some: BanFilter
  bans_none: BanFilter
  jobApprovals_every: JobFilter
  jobApprovals_some: JobFilter
  jobApprovals_none: JobFilter
  jobPostings_every: JobFilter
  jobPostings_some: JobFilter
  jobPostings_none: JobFilter
  role: RoleFilter
  subscriptions_every: ChapterFilter
  subscriptions_some: ChapterFilter
  subscriptions_none: ChapterFilter
  workshopsAttended_every: WorkshopFilter
  workshopsAttended_some: WorkshopFilter
  workshopsAttended_none: WorkshopFilter
}

type MemberSubscriptionPayload {
  mutation: _ModelMutationType!
  node: Member
  updatedFields: [String!]
  previousValues: MemberPreviousValues
}

input MembersubscriptionsChapter {
  active: Boolean!
  city: String!
  dbCreatedAt: DateTime!
  dbId: Int!
  dbUpdatedAt: DateTime!
  email: String!
  name: String!
  slug: String!
  twitter: String
  membersIds: [ID!]
  members: [ChaptermembersMember!]
  sponsorsIds: [ID!]
  sponsors: [ChaptersponsorsSponsor!]
  workshopsIds: [ID!]
  workshops: [ChapterworkshopsWorkshop!]
}

input MemberworkshopsAttendedWorkshop {
  dateAndTime: DateTime!
  dbId: Int!
  invitable: Boolean!
  rsvpCloseTime: DateTime!
  rsvpOpenDate: DateTime!
  rsvpOpenTime: DateTime!
  time: DateTime!
  chapterId: ID
  chapter: WorkshopchapterChapter
  sponsorId: ID
  sponsor: WorkshopsponsorSponsor
  attendeesIds: [ID!]
  attendees: [WorkshopattendeesMember!]
}

type Mutation {
  createAddress(city: String, dbCreatedAt: DateTime!, dbId: Int!, dbUpdatedAt: DateTime!, flat: String, postalCode: String!, street: String, sponsorId: ID, sponsor: AddresssponsorSponsor, eventsIds: [ID!], events: [AddresseventsEvent!]): Address
  createBan(dbCreatedAt: DateTime!, dbId: Int!, dbUpdatedAt: DateTime!, expiresAt: DateTime!, explanation: String!, note: String, permanent: Boolean!, reason: String!, adminId: ID, admin: BanadminMember, memberId: ID, member: BanmemberMember): Ban
  createChapter(active: Boolean!, city: String!, dbCreatedAt: DateTime!, dbId: Int!, dbUpdatedAt: DateTime!, email: String!, name: String!, slug: String!, twitter: String, membersIds: [ID!], members: [ChaptermembersMember!], sponsorsIds: [ID!], sponsors: [ChaptersponsorsSponsor!], workshopsIds: [ID!], workshops: [ChapterworkshopsWorkshop!]): Chapter
  createEvent(announceOnly: Boolean!, audience: String, coachDescription: String, coachQuestionnaire: String, coachSpaces: Int!, confirmationRequired: Boolean!, dateAndTime: DateTime!, dbCreatedAt: DateTime!, dbId: Int!, dbUpdatedAt: DateTime!, description: String, displayCoaches: Boolean!, displayStudents: Boolean!, email: String, endsAt: DateTime!, externalUrl: String, info: String, invitable: Boolean!, name: String!, schedule: String, showFaq: Boolean!, slug: String, studentQuestionnaire: String, studentSpaces: Int!, surveysRequired: Boolean!, titoUrl: String, url: String, addressId: ID, address: EventaddressAddress): Event
  createFile(name: String!): File
  createJob(approved: Boolean!, company: String, dbCreatedAt: DateTime!, dbId: Int!, dbUpdatedAt: DateTime!, description: String, email: String, expiryDate: DateTime!, linkToJob: String, location: String, submitted: Boolean!, title: String, approvedById: ID, approvedBy: JobapprovedByMember, createdById: ID, createdBy: JobcreatedByMember): Job
  createMember(about: String, canLogIn: Boolean!, dbCreatedAt: DateTime!, dbId: Int!, dbUpdatedAt: DateTime!, email: String!, firstname: String, mobile: String, pronouns: String, receivedCoachWelcomeEmail: Boolean!, receivedStudentWelcomeEmail: Boolean!, surname: String, twitter: String, roleId: ID, role: MemberroleRole, adminBansIds: [ID!], adminBans: [MemberadminBansBan!], bansIds: [ID!], bans: [MemberbansBan!], jobApprovalsIds: [ID!], jobApprovals: [MemberjobApprovalsJob!], jobPostingsIds: [ID!], jobPostings: [MemberjobPostingsJob!], subscriptionsIds: [ID!], subscriptions: [MembersubscriptionsChapter!], workshopsAttendedIds: [ID!], workshopsAttended: [MemberworkshopsAttendedWorkshop!]): Member
  createRole(dbId: Int!, name: String!, membersIds: [ID!], members: [RolemembersMember!]): Role
  createSponsor(avatar: String, contactFirstname: String, contactSurname: String, dbCreatedAt: DateTime!, dbId: Int!, dbUpdatedAt: DateTime!, description: String, email: String, imageCache: String, name: String!, numberOfCoaches: Int, seats: Int!, website: String, addressId: ID, address: SponsoraddressAddress, chapterId: ID, chapter: SponsorchapterChapter, workshopsIds: [ID!], workshops: [SponsorworkshopsWorkshop!]): Sponsor
  createWorkshop(dateAndTime: DateTime!, dbId: Int!, invitable: Boolean!, rsvpCloseTime: DateTime!, rsvpOpenDate: DateTime!, rsvpOpenTime: DateTime!, time: DateTime!, chapterId: ID, chapter: WorkshopchapterChapter, sponsorId: ID, sponsor: WorkshopsponsorSponsor, attendeesIds: [ID!], attendees: [WorkshopattendeesMember!]): Workshop
  updateAddress(city: String, dbCreatedAt: DateTime, dbId: Int, dbUpdatedAt: DateTime, flat: String, id: ID!, postalCode: String, street: String, sponsorId: ID, sponsor: AddresssponsorSponsor, eventsIds: [ID!], events: [AddresseventsEvent!]): Address
  updateBan(dbCreatedAt: DateTime, dbId: Int, dbUpdatedAt: DateTime, expiresAt: DateTime, explanation: String, id: ID!, note: String, permanent: Boolean, reason: String, adminId: ID, admin: BanadminMember, memberId: ID, member: BanmemberMember): Ban
  updateChapter(active: Boolean, city: String, dbCreatedAt: DateTime, dbId: Int, dbUpdatedAt: DateTime, email: String, id: ID!, name: String, slug: String, twitter: String, membersIds: [ID!], members: [ChaptermembersMember!], sponsorsIds: [ID!], sponsors: [ChaptersponsorsSponsor!], workshopsIds: [ID!], workshops: [ChapterworkshopsWorkshop!]): Chapter
  updateEvent(announceOnly: Boolean, audience: String, coachDescription: String, coachQuestionnaire: String, coachSpaces: Int, confirmationRequired: Boolean, dateAndTime: DateTime, dbCreatedAt: DateTime, dbId: Int, dbUpdatedAt: DateTime, description: String, displayCoaches: Boolean, displayStudents: Boolean, email: String, endsAt: DateTime, externalUrl: String, id: ID!, info: String, invitable: Boolean, name: String, schedule: String, showFaq: Boolean, slug: String, studentQuestionnaire: String, studentSpaces: Int, surveysRequired: Boolean, titoUrl: String, url: String, addressId: ID, address: EventaddressAddress): Event
  updateFile(id: ID!, name: String): File
  updateJob(approved: Boolean, company: String, dbCreatedAt: DateTime, dbId: Int, dbUpdatedAt: DateTime, description: String, email: String, expiryDate: DateTime, id: ID!, linkToJob: String, location: String, submitted: Boolean, title: String, approvedById: ID, approvedBy: JobapprovedByMember, createdById: ID, createdBy: JobcreatedByMember): Job
  updateMember(about: String, canLogIn: Boolean, dbCreatedAt: DateTime, dbId: Int, dbUpdatedAt: DateTime, email: String, firstname: String, id: ID!, mobile: String, pronouns: String, receivedCoachWelcomeEmail: Boolean, receivedStudentWelcomeEmail: Boolean, surname: String, twitter: String, roleId: ID, role: MemberroleRole, adminBansIds: [ID!], adminBans: [MemberadminBansBan!], bansIds: [ID!], bans: [MemberbansBan!], jobApprovalsIds: [ID!], jobApprovals: [MemberjobApprovalsJob!], jobPostingsIds: [ID!], jobPostings: [MemberjobPostingsJob!], subscriptionsIds: [ID!], subscriptions: [MembersubscriptionsChapter!], workshopsAttendedIds: [ID!], workshopsAttended: [MemberworkshopsAttendedWorkshop!]): Member
  updateRole(dbId: Int, id: ID!, name: String, membersIds: [ID!], members: [RolemembersMember!]): Role
  updateSponsor(avatar: String, contactFirstname: String, contactSurname: String, dbCreatedAt: DateTime, dbId: Int, dbUpdatedAt: DateTime, description: String, email: String, id: ID!, imageCache: String, name: String, numberOfCoaches: Int, seats: Int, website: String, addressId: ID, address: SponsoraddressAddress, chapterId: ID, chapter: SponsorchapterChapter, workshopsIds: [ID!], workshops: [SponsorworkshopsWorkshop!]): Sponsor
  updateUser(id: ID!): User
  updateWorkshop(dateAndTime: DateTime, dbId: Int, id: ID!, invitable: Boolean, rsvpCloseTime: DateTime, rsvpOpenDate: DateTime, rsvpOpenTime: DateTime, time: DateTime, chapterId: ID, chapter: WorkshopchapterChapter, sponsorId: ID, sponsor: WorkshopsponsorSponsor, attendeesIds: [ID!], attendees: [WorkshopattendeesMember!]): Workshop
  updateOrCreateAddress(update: UpdateAddress!, create: CreateAddress!): Address
  updateOrCreateBan(update: UpdateBan!, create: CreateBan!): Ban
  updateOrCreateChapter(update: UpdateChapter!, create: CreateChapter!): Chapter
  updateOrCreateEvent(update: UpdateEvent!, create: CreateEvent!): Event
  updateOrCreateFile(update: UpdateFile!, create: CreateFile!): File
  updateOrCreateJob(update: UpdateJob!, create: CreateJob!): Job
  updateOrCreateMember(update: UpdateMember!, create: CreateMember!): Member
  updateOrCreateRole(update: UpdateRole!, create: CreateRole!): Role
  updateOrCreateSponsor(update: UpdateSponsor!, create: CreateSponsor!): Sponsor
  updateOrCreateUser(update: UpdateUser!): User
  updateOrCreateWorkshop(update: UpdateWorkshop!, create: CreateWorkshop!): Workshop
  deleteAddress(id: ID!): Address
  deleteBan(id: ID!): Ban
  deleteChapter(id: ID!): Chapter
  deleteEvent(id: ID!): Event
  deleteFile(id: ID!): File
  deleteJob(id: ID!): Job
  deleteMember(id: ID!): Member
  deleteRole(id: ID!): Role
  deleteSponsor(id: ID!): Sponsor
  deleteUser(id: ID!): User
  deleteWorkshop(id: ID!): Workshop
  setSponsorAddress(sponsorSponsorId: ID!, addressAddressId: ID!): SetSponsorAddressPayload
  unsetSponsorAddress(sponsorSponsorId: ID!, addressAddressId: ID!): UnsetSponsorAddressPayload
  addToAdminBans(adminBansBanId: ID!, adminMemberId: ID!): AddToAdminBansPayload
  addToChapterMembers(membersMemberId: ID!, subscriptionsChapterId: ID!): AddToChapterMembersPayload
  addToChapterSponsor(chapterChapterId: ID!, sponsorsSponsorId: ID!): AddToChapterSponsorPayload
  addToChapterWorkshops(workshopsWorkshopId: ID!, chapterChapterId: ID!): AddToChapterWorkshopsPayload
  addToEventAddress(eventsEventId: ID!, addressAddressId: ID!): AddToEventAddressPayload
  addToJobApprovals(jobApprovalsJobId: ID!, approvedByMemberId: ID!): AddToJobApprovalsPayload
  addToJobPostings(jobPostingsJobId: ID!, createdByMemberId: ID!): AddToJobPostingsPayload
  addToMemberBans(bansBanId: ID!, memberMemberId: ID!): AddToMemberBansPayload
  addToMemberRole(roleRoleId: ID!, membersMemberId: ID!): AddToMemberRolePayload
  addToWorkshopMembers(attendeesMemberId: ID!, workshopsAttendedWorkshopId: ID!): AddToWorkshopMembersPayload
  addToWorkshopSponsor(workshopsWorkshopId: ID!, sponsorSponsorId: ID!): AddToWorkshopSponsorPayload
  removeFromAdminBans(adminBansBanId: ID!, adminMemberId: ID!): RemoveFromAdminBansPayload
  removeFromChapterMembers(membersMemberId: ID!, subscriptionsChapterId: ID!): RemoveFromChapterMembersPayload
  removeFromChapterSponsor(chapterChapterId: ID!, sponsorsSponsorId: ID!): RemoveFromChapterSponsorPayload
  removeFromChapterWorkshops(workshopsWorkshopId: ID!, chapterChapterId: ID!): RemoveFromChapterWorkshopsPayload
  removeFromEventAddress(eventsEventId: ID!, addressAddressId: ID!): RemoveFromEventAddressPayload
  removeFromJobApprovals(jobApprovalsJobId: ID!, approvedByMemberId: ID!): RemoveFromJobApprovalsPayload
  removeFromJobPostings(jobPostingsJobId: ID!, createdByMemberId: ID!): RemoveFromJobPostingsPayload
  removeFromMemberBans(bansBanId: ID!, memberMemberId: ID!): RemoveFromMemberBansPayload
  removeFromMemberRole(roleRoleId: ID!, membersMemberId: ID!): RemoveFromMemberRolePayload
  removeFromWorkshopMembers(attendeesMemberId: ID!, workshopsAttendedWorkshopId: ID!): RemoveFromWorkshopMembersPayload
  signinUser(auth0: AUTH_PROVIDER_AUTH0): SigninPayload!
  createUser(authProvider: AuthProviderSignupData!): User
}

# An object with an ID
interface Node {
  # The id of the object.
  id: ID!
}

type Query {
  allAddresses(filter: AddressFilter, orderBy: AddressOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): [Address!]!
  allBans(filter: BanFilter, orderBy: BanOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): [Ban!]!
  allChapters(filter: ChapterFilter, orderBy: ChapterOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): [Chapter!]!
  allEvents(filter: EventFilter, orderBy: EventOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): [Event!]!
  allFiles(filter: FileFilter, orderBy: FileOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): [File!]!
  allJobs(filter: JobFilter, orderBy: JobOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): [Job!]!
  allMembers(filter: MemberFilter, orderBy: MemberOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): [Member!]!
  allRoles(filter: RoleFilter, orderBy: RoleOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): [Role!]!
  allSponsors(filter: SponsorFilter, orderBy: SponsorOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): [Sponsor!]!
  allUsers(filter: UserFilter, orderBy: UserOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): [User!]!
  allWorkshops(filter: WorkshopFilter, orderBy: WorkshopOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): [Workshop!]!
  _allAddressesMeta(filter: AddressFilter, orderBy: AddressOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): _QueryMeta!
  _allBansMeta(filter: BanFilter, orderBy: BanOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): _QueryMeta!
  _allChaptersMeta(filter: ChapterFilter, orderBy: ChapterOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): _QueryMeta!
  _allEventsMeta(filter: EventFilter, orderBy: EventOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): _QueryMeta!
  _allFilesMeta(filter: FileFilter, orderBy: FileOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): _QueryMeta!
  _allJobsMeta(filter: JobFilter, orderBy: JobOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): _QueryMeta!
  _allMembersMeta(filter: MemberFilter, orderBy: MemberOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): _QueryMeta!
  _allRolesMeta(filter: RoleFilter, orderBy: RoleOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): _QueryMeta!
  _allSponsorsMeta(filter: SponsorFilter, orderBy: SponsorOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): _QueryMeta!
  _allUsersMeta(filter: UserFilter, orderBy: UserOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): _QueryMeta!
  _allWorkshopsMeta(filter: WorkshopFilter, orderBy: WorkshopOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): _QueryMeta!
  Address(id: ID): Address
  Ban(id: ID): Ban
  Chapter(id: ID): Chapter
  Event(id: ID): Event
  File(id: ID, secret: String, url: String): File
  Job(id: ID): Job
  Member(id: ID): Member
  Role(id: ID): Role
  Sponsor(id: ID): Sponsor
  User(auth0UserId: String, id: ID): User
  Workshop(id: ID): Workshop
  user: User

  # Fetches an object given its ID
  node(
    # The ID of an object
    id: ID!
  ): Node
}

type RemoveFromAdminBansPayload {
  adminMember: Member
  adminBansBan: Ban
}

type RemoveFromChapterMembersPayload {
  subscriptionsChapter: Chapter
  membersMember: Member
}

type RemoveFromChapterSponsorPayload {
  sponsorsSponsor: Sponsor
  chapterChapter: Chapter
}

type RemoveFromChapterWorkshopsPayload {
  chapterChapter: Chapter
  workshopsWorkshop: Workshop
}

type RemoveFromEventAddressPayload {
  addressAddress: Address
  eventsEvent: Event
}

type RemoveFromJobApprovalsPayload {
  approvedByMember: Member
  jobApprovalsJob: Job
}

type RemoveFromJobPostingsPayload {
  createdByMember: Member
  jobPostingsJob: Job
}

type RemoveFromMemberBansPayload {
  memberMember: Member
  bansBan: Ban
}

type RemoveFromMemberRolePayload {
  membersMember: Member
  roleRole: Role
}

type RemoveFromWorkshopMembersPayload {
  workshopsAttendedWorkshop: Workshop
  attendeesMember: Member
}

type Role implements Node {
  createdAt: DateTime!
  dbId: Int!
  id: ID!
  members(filter: MemberFilter, orderBy: MemberOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): [Member!]
  name: String!
  updatedAt: DateTime!

  # Meta information about the query.
  _membersMeta(filter: MemberFilter, orderBy: MemberOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): _QueryMeta!
}

input RoleFilter {
  # Logical AND on all given filters.
  AND: [RoleFilter!]

  # Logical OR on all given filters.
  OR: [RoleFilter!]
  createdAt: DateTime

  # All values that are not equal to given value.
  createdAt_not: DateTime

  # All values that are contained in given list.
  createdAt_in: [DateTime!]

  # All values that are not contained in given list.
  createdAt_not_in: [DateTime!]

  # All values less than the given value.
  createdAt_lt: DateTime

  # All values less than or equal the given value.
  createdAt_lte: DateTime

  # All values greater than the given value.
  createdAt_gt: DateTime

  # All values greater than or equal the given value.
  createdAt_gte: DateTime
  dbId: Int

  # All values that are not equal to given value.
  dbId_not: Int

  # All values that are contained in given list.
  dbId_in: [Int!]

  # All values that are not contained in given list.
  dbId_not_in: [Int!]

  # All values less than the given value.
  dbId_lt: Int

  # All values less than or equal the given value.
  dbId_lte: Int

  # All values greater than the given value.
  dbId_gt: Int

  # All values greater than or equal the given value.
  dbId_gte: Int
  id: ID

  # All values that are not equal to given value.
  id_not: ID

  # All values that are contained in given list.
  id_in: [ID!]

  # All values that are not contained in given list.
  id_not_in: [ID!]

  # All values less than the given value.
  id_lt: ID

  # All values less than or equal the given value.
  id_lte: ID

  # All values greater than the given value.
  id_gt: ID

  # All values greater than or equal the given value.
  id_gte: ID

  # All values containing the given string.
  id_contains: ID

  # All values not containing the given string.
  id_not_contains: ID

  # All values starting with the given string.
  id_starts_with: ID

  # All values not starting with the given string.
  id_not_starts_with: ID

  # All values ending with the given string.
  id_ends_with: ID

  # All values not ending with the given string.
  id_not_ends_with: ID
  name: String

  # All values that are not equal to given value.
  name_not: String

  # All values that are contained in given list.
  name_in: [String!]

  # All values that are not contained in given list.
  name_not_in: [String!]

  # All values less than the given value.
  name_lt: String

  # All values less than or equal the given value.
  name_lte: String

  # All values greater than the given value.
  name_gt: String

  # All values greater than or equal the given value.
  name_gte: String

  # All values containing the given string.
  name_contains: String

  # All values not containing the given string.
  name_not_contains: String

  # All values starting with the given string.
  name_starts_with: String

  # All values not starting with the given string.
  name_not_starts_with: String

  # All values ending with the given string.
  name_ends_with: String

  # All values not ending with the given string.
  name_not_ends_with: String
  updatedAt: DateTime

  # All values that are not equal to given value.
  updatedAt_not: DateTime

  # All values that are contained in given list.
  updatedAt_in: [DateTime!]

  # All values that are not contained in given list.
  updatedAt_not_in: [DateTime!]

  # All values less than the given value.
  updatedAt_lt: DateTime

  # All values less than or equal the given value.
  updatedAt_lte: DateTime

  # All values greater than the given value.
  updatedAt_gt: DateTime

  # All values greater than or equal the given value.
  updatedAt_gte: DateTime
  members_every: MemberFilter
  members_some: MemberFilter
  members_none: MemberFilter
}

input RolemembersMember {
  about: String
  canLogIn: Boolean!
  dbCreatedAt: DateTime!
  dbId: Int!
  dbUpdatedAt: DateTime!
  email: String!
  firstname: String
  mobile: String
  pronouns: String
  receivedCoachWelcomeEmail: Boolean!
  receivedStudentWelcomeEmail: Boolean!
  surname: String
  twitter: String
  adminBansIds: [ID!]
  adminBans: [MemberadminBansBan!]
  bansIds: [ID!]
  bans: [MemberbansBan!]
  jobApprovalsIds: [ID!]
  jobApprovals: [MemberjobApprovalsJob!]
  jobPostingsIds: [ID!]
  jobPostings: [MemberjobPostingsJob!]
  subscriptionsIds: [ID!]
  subscriptions: [MembersubscriptionsChapter!]
  workshopsAttendedIds: [ID!]
  workshopsAttended: [MemberworkshopsAttendedWorkshop!]
}

enum RoleOrderBy {
  createdAt_ASC
  createdAt_DESC
  dbId_ASC
  dbId_DESC
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type RolePreviousValues {
  createdAt: DateTime!
  dbId: Int!
  id: ID!
  name: String!
  updatedAt: DateTime!
}

input RoleSubscriptionFilter {
  # Logical AND on all given filters.
  AND: [RoleSubscriptionFilter!]

  # Logical OR on all given filters.
  OR: [RoleSubscriptionFilter!]

  # The subscription event gets dispatched when it's listed in mutation_in
  mutation_in: [_ModelMutationType!]

  # The subscription event gets only dispatched when one of the updated fields names is included in this list
  updatedFields_contains: String

  # The subscription event gets only dispatched when all of the field names included in this list have been updated
  updatedFields_contains_every: [String!]

  # The subscription event gets only dispatched when some of the field names included in this list have been updated
  updatedFields_contains_some: [String!]
  node: RoleSubscriptionFilterNode
}

input RoleSubscriptionFilterNode {
  createdAt: DateTime

  # All values that are not equal to given value.
  createdAt_not: DateTime

  # All values that are contained in given list.
  createdAt_in: [DateTime!]

  # All values that are not contained in given list.
  createdAt_not_in: [DateTime!]

  # All values less than the given value.
  createdAt_lt: DateTime

  # All values less than or equal the given value.
  createdAt_lte: DateTime

  # All values greater than the given value.
  createdAt_gt: DateTime

  # All values greater than or equal the given value.
  createdAt_gte: DateTime
  dbId: Int

  # All values that are not equal to given value.
  dbId_not: Int

  # All values that are contained in given list.
  dbId_in: [Int!]

  # All values that are not contained in given list.
  dbId_not_in: [Int!]

  # All values less than the given value.
  dbId_lt: Int

  # All values less than or equal the given value.
  dbId_lte: Int

  # All values greater than the given value.
  dbId_gt: Int

  # All values greater than or equal the given value.
  dbId_gte: Int
  id: ID

  # All values that are not equal to given value.
  id_not: ID

  # All values that are contained in given list.
  id_in: [ID!]

  # All values that are not contained in given list.
  id_not_in: [ID!]

  # All values less than the given value.
  id_lt: ID

  # All values less than or equal the given value.
  id_lte: ID

  # All values greater than the given value.
  id_gt: ID

  # All values greater than or equal the given value.
  id_gte: ID

  # All values containing the given string.
  id_contains: ID

  # All values not containing the given string.
  id_not_contains: ID

  # All values starting with the given string.
  id_starts_with: ID

  # All values not starting with the given string.
  id_not_starts_with: ID

  # All values ending with the given string.
  id_ends_with: ID

  # All values not ending with the given string.
  id_not_ends_with: ID
  name: String

  # All values that are not equal to given value.
  name_not: String

  # All values that are contained in given list.
  name_in: [String!]

  # All values that are not contained in given list.
  name_not_in: [String!]

  # All values less than the given value.
  name_lt: String

  # All values less than or equal the given value.
  name_lte: String

  # All values greater than the given value.
  name_gt: String

  # All values greater than or equal the given value.
  name_gte: String

  # All values containing the given string.
  name_contains: String

  # All values not containing the given string.
  name_not_contains: String

  # All values starting with the given string.
  name_starts_with: String

  # All values not starting with the given string.
  name_not_starts_with: String

  # All values ending with the given string.
  name_ends_with: String

  # All values not ending with the given string.
  name_not_ends_with: String
  updatedAt: DateTime

  # All values that are not equal to given value.
  updatedAt_not: DateTime

  # All values that are contained in given list.
  updatedAt_in: [DateTime!]

  # All values that are not contained in given list.
  updatedAt_not_in: [DateTime!]

  # All values less than the given value.
  updatedAt_lt: DateTime

  # All values less than or equal the given value.
  updatedAt_lte: DateTime

  # All values greater than the given value.
  updatedAt_gt: DateTime

  # All values greater than or equal the given value.
  updatedAt_gte: DateTime
  members_every: MemberFilter
  members_some: MemberFilter
  members_none: MemberFilter
}

type RoleSubscriptionPayload {
  mutation: _ModelMutationType!
  node: Role
  updatedFields: [String!]
  previousValues: RolePreviousValues
}

type SetSponsorAddressPayload {
  addressAddress: Address
  sponsorSponsor: Sponsor
}

# If authentication was successful the payload contains the user and a token. If unsuccessful this payload is null.
type SigninPayload {
  token: String
  user: User
}

type Sponsor implements Node {
  address(filter: AddressFilter): Address
  avatar: String
  chapter(filter: ChapterFilter): Chapter
  contactFirstname: String
  contactSurname: String
  createdAt: DateTime!
  dbCreatedAt: DateTime!
  dbId: Int!
  dbUpdatedAt: DateTime!
  description: String
  email: String
  id: ID!
  imageCache: String
  name: String!
  numberOfCoaches: Int
  seats: Int!
  updatedAt: DateTime!
  website: String
  workshops(filter: WorkshopFilter, orderBy: WorkshopOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): [Workshop!]

  # Meta information about the query.
  _workshopsMeta(filter: WorkshopFilter, orderBy: WorkshopOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): _QueryMeta!
}

input SponsoraddressAddress {
  city: String
  dbCreatedAt: DateTime!
  dbId: Int!
  dbUpdatedAt: DateTime!
  flat: String
  postalCode: String!
  street: String
  eventsIds: [ID!]
  events: [AddresseventsEvent!]
}

input SponsorchapterChapter {
  active: Boolean!
  city: String!
  dbCreatedAt: DateTime!
  dbId: Int!
  dbUpdatedAt: DateTime!
  email: String!
  name: String!
  slug: String!
  twitter: String
  membersIds: [ID!]
  members: [ChaptermembersMember!]
  sponsorsIds: [ID!]
  sponsors: [ChaptersponsorsSponsor!]
  workshopsIds: [ID!]
  workshops: [ChapterworkshopsWorkshop!]
}

input SponsorFilter {
  # Logical AND on all given filters.
  AND: [SponsorFilter!]

  # Logical OR on all given filters.
  OR: [SponsorFilter!]
  avatar: String

  # All values that are not equal to given value.
  avatar_not: String

  # All values that are contained in given list.
  avatar_in: [String!]

  # All values that are not contained in given list.
  avatar_not_in: [String!]

  # All values less than the given value.
  avatar_lt: String

  # All values less than or equal the given value.
  avatar_lte: String

  # All values greater than the given value.
  avatar_gt: String

  # All values greater than or equal the given value.
  avatar_gte: String

  # All values containing the given string.
  avatar_contains: String

  # All values not containing the given string.
  avatar_not_contains: String

  # All values starting with the given string.
  avatar_starts_with: String

  # All values not starting with the given string.
  avatar_not_starts_with: String

  # All values ending with the given string.
  avatar_ends_with: String

  # All values not ending with the given string.
  avatar_not_ends_with: String
  contactFirstname: String

  # All values that are not equal to given value.
  contactFirstname_not: String

  # All values that are contained in given list.
  contactFirstname_in: [String!]

  # All values that are not contained in given list.
  contactFirstname_not_in: [String!]

  # All values less than the given value.
  contactFirstname_lt: String

  # All values less than or equal the given value.
  contactFirstname_lte: String

  # All values greater than the given value.
  contactFirstname_gt: String

  # All values greater than or equal the given value.
  contactFirstname_gte: String

  # All values containing the given string.
  contactFirstname_contains: String

  # All values not containing the given string.
  contactFirstname_not_contains: String

  # All values starting with the given string.
  contactFirstname_starts_with: String

  # All values not starting with the given string.
  contactFirstname_not_starts_with: String

  # All values ending with the given string.
  contactFirstname_ends_with: String

  # All values not ending with the given string.
  contactFirstname_not_ends_with: String
  contactSurname: String

  # All values that are not equal to given value.
  contactSurname_not: String

  # All values that are contained in given list.
  contactSurname_in: [String!]

  # All values that are not contained in given list.
  contactSurname_not_in: [String!]

  # All values less than the given value.
  contactSurname_lt: String

  # All values less than or equal the given value.
  contactSurname_lte: String

  # All values greater than the given value.
  contactSurname_gt: String

  # All values greater than or equal the given value.
  contactSurname_gte: String

  # All values containing the given string.
  contactSurname_contains: String

  # All values not containing the given string.
  contactSurname_not_contains: String

  # All values starting with the given string.
  contactSurname_starts_with: String

  # All values not starting with the given string.
  contactSurname_not_starts_with: String

  # All values ending with the given string.
  contactSurname_ends_with: String

  # All values not ending with the given string.
  contactSurname_not_ends_with: String
  createdAt: DateTime

  # All values that are not equal to given value.
  createdAt_not: DateTime

  # All values that are contained in given list.
  createdAt_in: [DateTime!]

  # All values that are not contained in given list.
  createdAt_not_in: [DateTime!]

  # All values less than the given value.
  createdAt_lt: DateTime

  # All values less than or equal the given value.
  createdAt_lte: DateTime

  # All values greater than the given value.
  createdAt_gt: DateTime

  # All values greater than or equal the given value.
  createdAt_gte: DateTime
  dbCreatedAt: DateTime

  # All values that are not equal to given value.
  dbCreatedAt_not: DateTime

  # All values that are contained in given list.
  dbCreatedAt_in: [DateTime!]

  # All values that are not contained in given list.
  dbCreatedAt_not_in: [DateTime!]

  # All values less than the given value.
  dbCreatedAt_lt: DateTime

  # All values less than or equal the given value.
  dbCreatedAt_lte: DateTime

  # All values greater than the given value.
  dbCreatedAt_gt: DateTime

  # All values greater than or equal the given value.
  dbCreatedAt_gte: DateTime
  dbId: Int

  # All values that are not equal to given value.
  dbId_not: Int

  # All values that are contained in given list.
  dbId_in: [Int!]

  # All values that are not contained in given list.
  dbId_not_in: [Int!]

  # All values less than the given value.
  dbId_lt: Int

  # All values less than or equal the given value.
  dbId_lte: Int

  # All values greater than the given value.
  dbId_gt: Int

  # All values greater than or equal the given value.
  dbId_gte: Int
  dbUpdatedAt: DateTime

  # All values that are not equal to given value.
  dbUpdatedAt_not: DateTime

  # All values that are contained in given list.
  dbUpdatedAt_in: [DateTime!]

  # All values that are not contained in given list.
  dbUpdatedAt_not_in: [DateTime!]

  # All values less than the given value.
  dbUpdatedAt_lt: DateTime

  # All values less than or equal the given value.
  dbUpdatedAt_lte: DateTime

  # All values greater than the given value.
  dbUpdatedAt_gt: DateTime

  # All values greater than or equal the given value.
  dbUpdatedAt_gte: DateTime
  description: String

  # All values that are not equal to given value.
  description_not: String

  # All values that are contained in given list.
  description_in: [String!]

  # All values that are not contained in given list.
  description_not_in: [String!]

  # All values less than the given value.
  description_lt: String

  # All values less than or equal the given value.
  description_lte: String

  # All values greater than the given value.
  description_gt: String

  # All values greater than or equal the given value.
  description_gte: String

  # All values containing the given string.
  description_contains: String

  # All values not containing the given string.
  description_not_contains: String

  # All values starting with the given string.
  description_starts_with: String

  # All values not starting with the given string.
  description_not_starts_with: String

  # All values ending with the given string.
  description_ends_with: String

  # All values not ending with the given string.
  description_not_ends_with: String
  email: String

  # All values that are not equal to given value.
  email_not: String

  # All values that are contained in given list.
  email_in: [String!]

  # All values that are not contained in given list.
  email_not_in: [String!]

  # All values less than the given value.
  email_lt: String

  # All values less than or equal the given value.
  email_lte: String

  # All values greater than the given value.
  email_gt: String

  # All values greater than or equal the given value.
  email_gte: String

  # All values containing the given string.
  email_contains: String

  # All values not containing the given string.
  email_not_contains: String

  # All values starting with the given string.
  email_starts_with: String

  # All values not starting with the given string.
  email_not_starts_with: String

  # All values ending with the given string.
  email_ends_with: String

  # All values not ending with the given string.
  email_not_ends_with: String
  id: ID

  # All values that are not equal to given value.
  id_not: ID

  # All values that are contained in given list.
  id_in: [ID!]

  # All values that are not contained in given list.
  id_not_in: [ID!]

  # All values less than the given value.
  id_lt: ID

  # All values less than or equal the given value.
  id_lte: ID

  # All values greater than the given value.
  id_gt: ID

  # All values greater than or equal the given value.
  id_gte: ID

  # All values containing the given string.
  id_contains: ID

  # All values not containing the given string.
  id_not_contains: ID

  # All values starting with the given string.
  id_starts_with: ID

  # All values not starting with the given string.
  id_not_starts_with: ID

  # All values ending with the given string.
  id_ends_with: ID

  # All values not ending with the given string.
  id_not_ends_with: ID
  imageCache: String

  # All values that are not equal to given value.
  imageCache_not: String

  # All values that are contained in given list.
  imageCache_in: [String!]

  # All values that are not contained in given list.
  imageCache_not_in: [String!]

  # All values less than the given value.
  imageCache_lt: String

  # All values less than or equal the given value.
  imageCache_lte: String

  # All values greater than the given value.
  imageCache_gt: String

  # All values greater than or equal the given value.
  imageCache_gte: String

  # All values containing the given string.
  imageCache_contains: String

  # All values not containing the given string.
  imageCache_not_contains: String

  # All values starting with the given string.
  imageCache_starts_with: String

  # All values not starting with the given string.
  imageCache_not_starts_with: String

  # All values ending with the given string.
  imageCache_ends_with: String

  # All values not ending with the given string.
  imageCache_not_ends_with: String
  name: String

  # All values that are not equal to given value.
  name_not: String

  # All values that are contained in given list.
  name_in: [String!]

  # All values that are not contained in given list.
  name_not_in: [String!]

  # All values less than the given value.
  name_lt: String

  # All values less than or equal the given value.
  name_lte: String

  # All values greater than the given value.
  name_gt: String

  # All values greater than or equal the given value.
  name_gte: String

  # All values containing the given string.
  name_contains: String

  # All values not containing the given string.
  name_not_contains: String

  # All values starting with the given string.
  name_starts_with: String

  # All values not starting with the given string.
  name_not_starts_with: String

  # All values ending with the given string.
  name_ends_with: String

  # All values not ending with the given string.
  name_not_ends_with: String
  numberOfCoaches: Int

  # All values that are not equal to given value.
  numberOfCoaches_not: Int

  # All values that are contained in given list.
  numberOfCoaches_in: [Int!]

  # All values that are not contained in given list.
  numberOfCoaches_not_in: [Int!]

  # All values less than the given value.
  numberOfCoaches_lt: Int

  # All values less than or equal the given value.
  numberOfCoaches_lte: Int

  # All values greater than the given value.
  numberOfCoaches_gt: Int

  # All values greater than or equal the given value.
  numberOfCoaches_gte: Int
  seats: Int

  # All values that are not equal to given value.
  seats_not: Int

  # All values that are contained in given list.
  seats_in: [Int!]

  # All values that are not contained in given list.
  seats_not_in: [Int!]

  # All values less than the given value.
  seats_lt: Int

  # All values less than or equal the given value.
  seats_lte: Int

  # All values greater than the given value.
  seats_gt: Int

  # All values greater than or equal the given value.
  seats_gte: Int
  updatedAt: DateTime

  # All values that are not equal to given value.
  updatedAt_not: DateTime

  # All values that are contained in given list.
  updatedAt_in: [DateTime!]

  # All values that are not contained in given list.
  updatedAt_not_in: [DateTime!]

  # All values less than the given value.
  updatedAt_lt: DateTime

  # All values less than or equal the given value.
  updatedAt_lte: DateTime

  # All values greater than the given value.
  updatedAt_gt: DateTime

  # All values greater than or equal the given value.
  updatedAt_gte: DateTime
  website: String

  # All values that are not equal to given value.
  website_not: String

  # All values that are contained in given list.
  website_in: [String!]

  # All values that are not contained in given list.
  website_not_in: [String!]

  # All values less than the given value.
  website_lt: String

  # All values less than or equal the given value.
  website_lte: String

  # All values greater than the given value.
  website_gt: String

  # All values greater than or equal the given value.
  website_gte: String

  # All values containing the given string.
  website_contains: String

  # All values not containing the given string.
  website_not_contains: String

  # All values starting with the given string.
  website_starts_with: String

  # All values not starting with the given string.
  website_not_starts_with: String

  # All values ending with the given string.
  website_ends_with: String

  # All values not ending with the given string.
  website_not_ends_with: String
  address: AddressFilter
  chapter: ChapterFilter
  workshops_every: WorkshopFilter
  workshops_some: WorkshopFilter
  workshops_none: WorkshopFilter
}

enum SponsorOrderBy {
  avatar_ASC
  avatar_DESC
  contactFirstname_ASC
  contactFirstname_DESC
  contactSurname_ASC
  contactSurname_DESC
  createdAt_ASC
  createdAt_DESC
  dbCreatedAt_ASC
  dbCreatedAt_DESC
  dbId_ASC
  dbId_DESC
  dbUpdatedAt_ASC
  dbUpdatedAt_DESC
  description_ASC
  description_DESC
  email_ASC
  email_DESC
  id_ASC
  id_DESC
  imageCache_ASC
  imageCache_DESC
  name_ASC
  name_DESC
  numberOfCoaches_ASC
  numberOfCoaches_DESC
  seats_ASC
  seats_DESC
  updatedAt_ASC
  updatedAt_DESC
  website_ASC
  website_DESC
}

type SponsorPreviousValues {
  avatar: String
  contactFirstname: String
  contactSurname: String
  createdAt: DateTime!
  dbCreatedAt: DateTime!
  dbId: Int!
  dbUpdatedAt: DateTime!
  description: String
  email: String
  id: ID!
  imageCache: String
  name: String!
  numberOfCoaches: Int
  seats: Int!
  updatedAt: DateTime!
  website: String
}

input SponsorSubscriptionFilter {
  # Logical AND on all given filters.
  AND: [SponsorSubscriptionFilter!]

  # Logical OR on all given filters.
  OR: [SponsorSubscriptionFilter!]

  # The subscription event gets dispatched when it's listed in mutation_in
  mutation_in: [_ModelMutationType!]

  # The subscription event gets only dispatched when one of the updated fields names is included in this list
  updatedFields_contains: String

  # The subscription event gets only dispatched when all of the field names included in this list have been updated
  updatedFields_contains_every: [String!]

  # The subscription event gets only dispatched when some of the field names included in this list have been updated
  updatedFields_contains_some: [String!]
  node: SponsorSubscriptionFilterNode
}

input SponsorSubscriptionFilterNode {
  avatar: String

  # All values that are not equal to given value.
  avatar_not: String

  # All values that are contained in given list.
  avatar_in: [String!]

  # All values that are not contained in given list.
  avatar_not_in: [String!]

  # All values less than the given value.
  avatar_lt: String

  # All values less than or equal the given value.
  avatar_lte: String

  # All values greater than the given value.
  avatar_gt: String

  # All values greater than or equal the given value.
  avatar_gte: String

  # All values containing the given string.
  avatar_contains: String

  # All values not containing the given string.
  avatar_not_contains: String

  # All values starting with the given string.
  avatar_starts_with: String

  # All values not starting with the given string.
  avatar_not_starts_with: String

  # All values ending with the given string.
  avatar_ends_with: String

  # All values not ending with the given string.
  avatar_not_ends_with: String
  contactFirstname: String

  # All values that are not equal to given value.
  contactFirstname_not: String

  # All values that are contained in given list.
  contactFirstname_in: [String!]

  # All values that are not contained in given list.
  contactFirstname_not_in: [String!]

  # All values less than the given value.
  contactFirstname_lt: String

  # All values less than or equal the given value.
  contactFirstname_lte: String

  # All values greater than the given value.
  contactFirstname_gt: String

  # All values greater than or equal the given value.
  contactFirstname_gte: String

  # All values containing the given string.
  contactFirstname_contains: String

  # All values not containing the given string.
  contactFirstname_not_contains: String

  # All values starting with the given string.
  contactFirstname_starts_with: String

  # All values not starting with the given string.
  contactFirstname_not_starts_with: String

  # All values ending with the given string.
  contactFirstname_ends_with: String

  # All values not ending with the given string.
  contactFirstname_not_ends_with: String
  contactSurname: String

  # All values that are not equal to given value.
  contactSurname_not: String

  # All values that are contained in given list.
  contactSurname_in: [String!]

  # All values that are not contained in given list.
  contactSurname_not_in: [String!]

  # All values less than the given value.
  contactSurname_lt: String

  # All values less than or equal the given value.
  contactSurname_lte: String

  # All values greater than the given value.
  contactSurname_gt: String

  # All values greater than or equal the given value.
  contactSurname_gte: String

  # All values containing the given string.
  contactSurname_contains: String

  # All values not containing the given string.
  contactSurname_not_contains: String

  # All values starting with the given string.
  contactSurname_starts_with: String

  # All values not starting with the given string.
  contactSurname_not_starts_with: String

  # All values ending with the given string.
  contactSurname_ends_with: String

  # All values not ending with the given string.
  contactSurname_not_ends_with: String
  createdAt: DateTime

  # All values that are not equal to given value.
  createdAt_not: DateTime

  # All values that are contained in given list.
  createdAt_in: [DateTime!]

  # All values that are not contained in given list.
  createdAt_not_in: [DateTime!]

  # All values less than the given value.
  createdAt_lt: DateTime

  # All values less than or equal the given value.
  createdAt_lte: DateTime

  # All values greater than the given value.
  createdAt_gt: DateTime

  # All values greater than or equal the given value.
  createdAt_gte: DateTime
  dbCreatedAt: DateTime

  # All values that are not equal to given value.
  dbCreatedAt_not: DateTime

  # All values that are contained in given list.
  dbCreatedAt_in: [DateTime!]

  # All values that are not contained in given list.
  dbCreatedAt_not_in: [DateTime!]

  # All values less than the given value.
  dbCreatedAt_lt: DateTime

  # All values less than or equal the given value.
  dbCreatedAt_lte: DateTime

  # All values greater than the given value.
  dbCreatedAt_gt: DateTime

  # All values greater than or equal the given value.
  dbCreatedAt_gte: DateTime
  dbId: Int

  # All values that are not equal to given value.
  dbId_not: Int

  # All values that are contained in given list.
  dbId_in: [Int!]

  # All values that are not contained in given list.
  dbId_not_in: [Int!]

  # All values less than the given value.
  dbId_lt: Int

  # All values less than or equal the given value.
  dbId_lte: Int

  # All values greater than the given value.
  dbId_gt: Int

  # All values greater than or equal the given value.
  dbId_gte: Int
  dbUpdatedAt: DateTime

  # All values that are not equal to given value.
  dbUpdatedAt_not: DateTime

  # All values that are contained in given list.
  dbUpdatedAt_in: [DateTime!]

  # All values that are not contained in given list.
  dbUpdatedAt_not_in: [DateTime!]

  # All values less than the given value.
  dbUpdatedAt_lt: DateTime

  # All values less than or equal the given value.
  dbUpdatedAt_lte: DateTime

  # All values greater than the given value.
  dbUpdatedAt_gt: DateTime

  # All values greater than or equal the given value.
  dbUpdatedAt_gte: DateTime
  description: String

  # All values that are not equal to given value.
  description_not: String

  # All values that are contained in given list.
  description_in: [String!]

  # All values that are not contained in given list.
  description_not_in: [String!]

  # All values less than the given value.
  description_lt: String

  # All values less than or equal the given value.
  description_lte: String

  # All values greater than the given value.
  description_gt: String

  # All values greater than or equal the given value.
  description_gte: String

  # All values containing the given string.
  description_contains: String

  # All values not containing the given string.
  description_not_contains: String

  # All values starting with the given string.
  description_starts_with: String

  # All values not starting with the given string.
  description_not_starts_with: String

  # All values ending with the given string.
  description_ends_with: String

  # All values not ending with the given string.
  description_not_ends_with: String
  email: String

  # All values that are not equal to given value.
  email_not: String

  # All values that are contained in given list.
  email_in: [String!]

  # All values that are not contained in given list.
  email_not_in: [String!]

  # All values less than the given value.
  email_lt: String

  # All values less than or equal the given value.
  email_lte: String

  # All values greater than the given value.
  email_gt: String

  # All values greater than or equal the given value.
  email_gte: String

  # All values containing the given string.
  email_contains: String

  # All values not containing the given string.
  email_not_contains: String

  # All values starting with the given string.
  email_starts_with: String

  # All values not starting with the given string.
  email_not_starts_with: String

  # All values ending with the given string.
  email_ends_with: String

  # All values not ending with the given string.
  email_not_ends_with: String
  id: ID

  # All values that are not equal to given value.
  id_not: ID

  # All values that are contained in given list.
  id_in: [ID!]

  # All values that are not contained in given list.
  id_not_in: [ID!]

  # All values less than the given value.
  id_lt: ID

  # All values less than or equal the given value.
  id_lte: ID

  # All values greater than the given value.
  id_gt: ID

  # All values greater than or equal the given value.
  id_gte: ID

  # All values containing the given string.
  id_contains: ID

  # All values not containing the given string.
  id_not_contains: ID

  # All values starting with the given string.
  id_starts_with: ID

  # All values not starting with the given string.
  id_not_starts_with: ID

  # All values ending with the given string.
  id_ends_with: ID

  # All values not ending with the given string.
  id_not_ends_with: ID
  imageCache: String

  # All values that are not equal to given value.
  imageCache_not: String

  # All values that are contained in given list.
  imageCache_in: [String!]

  # All values that are not contained in given list.
  imageCache_not_in: [String!]

  # All values less than the given value.
  imageCache_lt: String

  # All values less than or equal the given value.
  imageCache_lte: String

  # All values greater than the given value.
  imageCache_gt: String

  # All values greater than or equal the given value.
  imageCache_gte: String

  # All values containing the given string.
  imageCache_contains: String

  # All values not containing the given string.
  imageCache_not_contains: String

  # All values starting with the given string.
  imageCache_starts_with: String

  # All values not starting with the given string.
  imageCache_not_starts_with: String

  # All values ending with the given string.
  imageCache_ends_with: String

  # All values not ending with the given string.
  imageCache_not_ends_with: String
  name: String

  # All values that are not equal to given value.
  name_not: String

  # All values that are contained in given list.
  name_in: [String!]

  # All values that are not contained in given list.
  name_not_in: [String!]

  # All values less than the given value.
  name_lt: String

  # All values less than or equal the given value.
  name_lte: String

  # All values greater than the given value.
  name_gt: String

  # All values greater than or equal the given value.
  name_gte: String

  # All values containing the given string.
  name_contains: String

  # All values not containing the given string.
  name_not_contains: String

  # All values starting with the given string.
  name_starts_with: String

  # All values not starting with the given string.
  name_not_starts_with: String

  # All values ending with the given string.
  name_ends_with: String

  # All values not ending with the given string.
  name_not_ends_with: String
  numberOfCoaches: Int

  # All values that are not equal to given value.
  numberOfCoaches_not: Int

  # All values that are contained in given list.
  numberOfCoaches_in: [Int!]

  # All values that are not contained in given list.
  numberOfCoaches_not_in: [Int!]

  # All values less than the given value.
  numberOfCoaches_lt: Int

  # All values less than or equal the given value.
  numberOfCoaches_lte: Int

  # All values greater than the given value.
  numberOfCoaches_gt: Int

  # All values greater than or equal the given value.
  numberOfCoaches_gte: Int
  seats: Int

  # All values that are not equal to given value.
  seats_not: Int

  # All values that are contained in given list.
  seats_in: [Int!]

  # All values that are not contained in given list.
  seats_not_in: [Int!]

  # All values less than the given value.
  seats_lt: Int

  # All values less than or equal the given value.
  seats_lte: Int

  # All values greater than the given value.
  seats_gt: Int

  # All values greater than or equal the given value.
  seats_gte: Int
  updatedAt: DateTime

  # All values that are not equal to given value.
  updatedAt_not: DateTime

  # All values that are contained in given list.
  updatedAt_in: [DateTime!]

  # All values that are not contained in given list.
  updatedAt_not_in: [DateTime!]

  # All values less than the given value.
  updatedAt_lt: DateTime

  # All values less than or equal the given value.
  updatedAt_lte: DateTime

  # All values greater than the given value.
  updatedAt_gt: DateTime

  # All values greater than or equal the given value.
  updatedAt_gte: DateTime
  website: String

  # All values that are not equal to given value.
  website_not: String

  # All values that are contained in given list.
  website_in: [String!]

  # All values that are not contained in given list.
  website_not_in: [String!]

  # All values less than the given value.
  website_lt: String

  # All values less than or equal the given value.
  website_lte: String

  # All values greater than the given value.
  website_gt: String

  # All values greater than or equal the given value.
  website_gte: String

  # All values containing the given string.
  website_contains: String

  # All values not containing the given string.
  website_not_contains: String

  # All values starting with the given string.
  website_starts_with: String

  # All values not starting with the given string.
  website_not_starts_with: String

  # All values ending with the given string.
  website_ends_with: String

  # All values not ending with the given string.
  website_not_ends_with: String
  address: AddressFilter
  chapter: ChapterFilter
  workshops_every: WorkshopFilter
  workshops_some: WorkshopFilter
  workshops_none: WorkshopFilter
}

type SponsorSubscriptionPayload {
  mutation: _ModelMutationType!
  node: Sponsor
  updatedFields: [String!]
  previousValues: SponsorPreviousValues
}

input SponsorworkshopsWorkshop {
  dateAndTime: DateTime!
  dbId: Int!
  invitable: Boolean!
  rsvpCloseTime: DateTime!
  rsvpOpenDate: DateTime!
  rsvpOpenTime: DateTime!
  time: DateTime!
  chapterId: ID
  chapter: WorkshopchapterChapter
  attendeesIds: [ID!]
  attendees: [WorkshopattendeesMember!]
}

type Subscription {
  Address(filter: AddressSubscriptionFilter): AddressSubscriptionPayload
  Ban(filter: BanSubscriptionFilter): BanSubscriptionPayload
  Chapter(filter: ChapterSubscriptionFilter): ChapterSubscriptionPayload
  Event(filter: EventSubscriptionFilter): EventSubscriptionPayload
  File(filter: FileSubscriptionFilter): FileSubscriptionPayload
  Job(filter: JobSubscriptionFilter): JobSubscriptionPayload
  Member(filter: MemberSubscriptionFilter): MemberSubscriptionPayload
  Role(filter: RoleSubscriptionFilter): RoleSubscriptionPayload
  Sponsor(filter: SponsorSubscriptionFilter): SponsorSubscriptionPayload
  User(filter: UserSubscriptionFilter): UserSubscriptionPayload
  Workshop(filter: WorkshopSubscriptionFilter): WorkshopSubscriptionPayload
}

type UnsetSponsorAddressPayload {
  addressAddress: Address
  sponsorSponsor: Sponsor
}

input UpdateAddress {
  city: String
  dbCreatedAt: DateTime
  dbId: Int
  dbUpdatedAt: DateTime
  flat: String
  id: ID!
  postalCode: String
  street: String
  sponsorId: ID
  sponsor: AddresssponsorSponsor
  eventsIds: [ID!]
  events: [AddresseventsEvent!]
}

input UpdateBan {
  dbCreatedAt: DateTime
  dbId: Int
  dbUpdatedAt: DateTime
  expiresAt: DateTime
  explanation: String
  id: ID!
  note: String
  permanent: Boolean
  reason: String
  adminId: ID
  admin: BanadminMember
  memberId: ID
  member: BanmemberMember
}

input UpdateChapter {
  active: Boolean
  city: String
  dbCreatedAt: DateTime
  dbId: Int
  dbUpdatedAt: DateTime
  email: String
  id: ID!
  name: String
  slug: String
  twitter: String
  membersIds: [ID!]
  members: [ChaptermembersMember!]
  sponsorsIds: [ID!]
  sponsors: [ChaptersponsorsSponsor!]
  workshopsIds: [ID!]
  workshops: [ChapterworkshopsWorkshop!]
}

input UpdateEvent {
  announceOnly: Boolean
  audience: String
  coachDescription: String
  coachQuestionnaire: String
  coachSpaces: Int
  confirmationRequired: Boolean
  dateAndTime: DateTime
  dbCreatedAt: DateTime
  dbId: Int
  dbUpdatedAt: DateTime
  description: String
  displayCoaches: Boolean
  displayStudents: Boolean
  email: String
  endsAt: DateTime
  externalUrl: String
  id: ID!
  info: String
  invitable: Boolean
  name: String
  schedule: String
  showFaq: Boolean
  slug: String
  studentQuestionnaire: String
  studentSpaces: Int
  surveysRequired: Boolean
  titoUrl: String
  url: String
  addressId: ID
  address: EventaddressAddress
}

input UpdateFile {
  id: ID!
  name: String
}

input UpdateJob {
  approved: Boolean
  company: String
  dbCreatedAt: DateTime
  dbId: Int
  dbUpdatedAt: DateTime
  description: String
  email: String
  expiryDate: DateTime
  id: ID!
  linkToJob: String
  location: String
  submitted: Boolean
  title: String
  approvedById: ID
  approvedBy: JobapprovedByMember
  createdById: ID
  createdBy: JobcreatedByMember
}

input UpdateMember {
  about: String
  canLogIn: Boolean
  dbCreatedAt: DateTime
  dbId: Int
  dbUpdatedAt: DateTime
  email: String
  firstname: String
  id: ID!
  mobile: String
  pronouns: String
  receivedCoachWelcomeEmail: Boolean
  receivedStudentWelcomeEmail: Boolean
  surname: String
  twitter: String
  roleId: ID
  role: MemberroleRole
  adminBansIds: [ID!]
  adminBans: [MemberadminBansBan!]
  bansIds: [ID!]
  bans: [MemberbansBan!]
  jobApprovalsIds: [ID!]
  jobApprovals: [MemberjobApprovalsJob!]
  jobPostingsIds: [ID!]
  jobPostings: [MemberjobPostingsJob!]
  subscriptionsIds: [ID!]
  subscriptions: [MembersubscriptionsChapter!]
  workshopsAttendedIds: [ID!]
  workshopsAttended: [MemberworkshopsAttendedWorkshop!]
}

input UpdateRole {
  dbId: Int
  id: ID!
  name: String
  membersIds: [ID!]
  members: [RolemembersMember!]
}

input UpdateSponsor {
  avatar: String
  contactFirstname: String
  contactSurname: String
  dbCreatedAt: DateTime
  dbId: Int
  dbUpdatedAt: DateTime
  description: String
  email: String
  id: ID!
  imageCache: String
  name: String
  numberOfCoaches: Int
  seats: Int
  website: String
  addressId: ID
  address: SponsoraddressAddress
  chapterId: ID
  chapter: SponsorchapterChapter
  workshopsIds: [ID!]
  workshops: [SponsorworkshopsWorkshop!]
}

input UpdateUser {
  id: ID!
}

input UpdateWorkshop {
  dateAndTime: DateTime
  dbId: Int
  id: ID!
  invitable: Boolean
  rsvpCloseTime: DateTime
  rsvpOpenDate: DateTime
  rsvpOpenTime: DateTime
  time: DateTime
  chapterId: ID
  chapter: WorkshopchapterChapter
  sponsorId: ID
  sponsor: WorkshopsponsorSponsor
  attendeesIds: [ID!]
  attendees: [WorkshopattendeesMember!]
}

type User implements Node {
  auth0UserId: String
  createdAt: DateTime!
  id: ID!
  updatedAt: DateTime!
}

input UserFilter {
  # Logical AND on all given filters.
  AND: [UserFilter!]

  # Logical OR on all given filters.
  OR: [UserFilter!]
  auth0UserId: String

  # All values that are not equal to given value.
  auth0UserId_not: String

  # All values that are contained in given list.
  auth0UserId_in: [String!]

  # All values that are not contained in given list.
  auth0UserId_not_in: [String!]

  # All values less than the given value.
  auth0UserId_lt: String

  # All values less than or equal the given value.
  auth0UserId_lte: String

  # All values greater than the given value.
  auth0UserId_gt: String

  # All values greater than or equal the given value.
  auth0UserId_gte: String

  # All values containing the given string.
  auth0UserId_contains: String

  # All values not containing the given string.
  auth0UserId_not_contains: String

  # All values starting with the given string.
  auth0UserId_starts_with: String

  # All values not starting with the given string.
  auth0UserId_not_starts_with: String

  # All values ending with the given string.
  auth0UserId_ends_with: String

  # All values not ending with the given string.
  auth0UserId_not_ends_with: String
  createdAt: DateTime

  # All values that are not equal to given value.
  createdAt_not: DateTime

  # All values that are contained in given list.
  createdAt_in: [DateTime!]

  # All values that are not contained in given list.
  createdAt_not_in: [DateTime!]

  # All values less than the given value.
  createdAt_lt: DateTime

  # All values less than or equal the given value.
  createdAt_lte: DateTime

  # All values greater than the given value.
  createdAt_gt: DateTime

  # All values greater than or equal the given value.
  createdAt_gte: DateTime
  id: ID

  # All values that are not equal to given value.
  id_not: ID

  # All values that are contained in given list.
  id_in: [ID!]

  # All values that are not contained in given list.
  id_not_in: [ID!]

  # All values less than the given value.
  id_lt: ID

  # All values less than or equal the given value.
  id_lte: ID

  # All values greater than the given value.
  id_gt: ID

  # All values greater than or equal the given value.
  id_gte: ID

  # All values containing the given string.
  id_contains: ID

  # All values not containing the given string.
  id_not_contains: ID

  # All values starting with the given string.
  id_starts_with: ID

  # All values not starting with the given string.
  id_not_starts_with: ID

  # All values ending with the given string.
  id_ends_with: ID

  # All values not ending with the given string.
  id_not_ends_with: ID
  updatedAt: DateTime

  # All values that are not equal to given value.
  updatedAt_not: DateTime

  # All values that are contained in given list.
  updatedAt_in: [DateTime!]

  # All values that are not contained in given list.
  updatedAt_not_in: [DateTime!]

  # All values less than the given value.
  updatedAt_lt: DateTime

  # All values less than or equal the given value.
  updatedAt_lte: DateTime

  # All values greater than the given value.
  updatedAt_gt: DateTime

  # All values greater than or equal the given value.
  updatedAt_gte: DateTime
}

enum UserOrderBy {
  auth0UserId_ASC
  auth0UserId_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type UserPreviousValues {
  auth0UserId: String
  createdAt: DateTime!
  id: ID!
  updatedAt: DateTime!
}

input UserSubscriptionFilter {
  # Logical AND on all given filters.
  AND: [UserSubscriptionFilter!]

  # Logical OR on all given filters.
  OR: [UserSubscriptionFilter!]

  # The subscription event gets dispatched when it's listed in mutation_in
  mutation_in: [_ModelMutationType!]

  # The subscription event gets only dispatched when one of the updated fields names is included in this list
  updatedFields_contains: String

  # The subscription event gets only dispatched when all of the field names included in this list have been updated
  updatedFields_contains_every: [String!]

  # The subscription event gets only dispatched when some of the field names included in this list have been updated
  updatedFields_contains_some: [String!]
  node: UserSubscriptionFilterNode
}

input UserSubscriptionFilterNode {
  auth0UserId: String

  # All values that are not equal to given value.
  auth0UserId_not: String

  # All values that are contained in given list.
  auth0UserId_in: [String!]

  # All values that are not contained in given list.
  auth0UserId_not_in: [String!]

  # All values less than the given value.
  auth0UserId_lt: String

  # All values less than or equal the given value.
  auth0UserId_lte: String

  # All values greater than the given value.
  auth0UserId_gt: String

  # All values greater than or equal the given value.
  auth0UserId_gte: String

  # All values containing the given string.
  auth0UserId_contains: String

  # All values not containing the given string.
  auth0UserId_not_contains: String

  # All values starting with the given string.
  auth0UserId_starts_with: String

  # All values not starting with the given string.
  auth0UserId_not_starts_with: String

  # All values ending with the given string.
  auth0UserId_ends_with: String

  # All values not ending with the given string.
  auth0UserId_not_ends_with: String
  createdAt: DateTime

  # All values that are not equal to given value.
  createdAt_not: DateTime

  # All values that are contained in given list.
  createdAt_in: [DateTime!]

  # All values that are not contained in given list.
  createdAt_not_in: [DateTime!]

  # All values less than the given value.
  createdAt_lt: DateTime

  # All values less than or equal the given value.
  createdAt_lte: DateTime

  # All values greater than the given value.
  createdAt_gt: DateTime

  # All values greater than or equal the given value.
  createdAt_gte: DateTime
  id: ID

  # All values that are not equal to given value.
  id_not: ID

  # All values that are contained in given list.
  id_in: [ID!]

  # All values that are not contained in given list.
  id_not_in: [ID!]

  # All values less than the given value.
  id_lt: ID

  # All values less than or equal the given value.
  id_lte: ID

  # All values greater than the given value.
  id_gt: ID

  # All values greater than or equal the given value.
  id_gte: ID

  # All values containing the given string.
  id_contains: ID

  # All values not containing the given string.
  id_not_contains: ID

  # All values starting with the given string.
  id_starts_with: ID

  # All values not starting with the given string.
  id_not_starts_with: ID

  # All values ending with the given string.
  id_ends_with: ID

  # All values not ending with the given string.
  id_not_ends_with: ID
  updatedAt: DateTime

  # All values that are not equal to given value.
  updatedAt_not: DateTime

  # All values that are contained in given list.
  updatedAt_in: [DateTime!]

  # All values that are not contained in given list.
  updatedAt_not_in: [DateTime!]

  # All values less than the given value.
  updatedAt_lt: DateTime

  # All values less than or equal the given value.
  updatedAt_lte: DateTime

  # All values greater than the given value.
  updatedAt_gt: DateTime

  # All values greater than or equal the given value.
  updatedAt_gte: DateTime
}

type UserSubscriptionPayload {
  mutation: _ModelMutationType!
  node: User
  updatedFields: [String!]
  previousValues: UserPreviousValues
}

type Workshop implements Node {
  attendees(filter: MemberFilter, orderBy: MemberOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): [Member!]
  chapter(filter: ChapterFilter): Chapter
  createdAt: DateTime!
  dateAndTime: DateTime!
  dbId: Int!
  id: ID!
  invitable: Boolean!
  rsvpCloseTime: DateTime!
  rsvpOpenDate: DateTime!
  rsvpOpenTime: DateTime!
  sponsor(filter: SponsorFilter): Sponsor!
  time: DateTime!
  updatedAt: DateTime!

  # Meta information about the query.
  _attendeesMeta(filter: MemberFilter, orderBy: MemberOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): _QueryMeta!
}

input WorkshopattendeesMember {
  about: String
  canLogIn: Boolean!
  dbCreatedAt: DateTime!
  dbId: Int!
  dbUpdatedAt: DateTime!
  email: String!
  firstname: String
  mobile: String
  pronouns: String
  receivedCoachWelcomeEmail: Boolean!
  receivedStudentWelcomeEmail: Boolean!
  surname: String
  twitter: String
  roleId: ID
  role: MemberroleRole
  adminBansIds: [ID!]
  adminBans: [MemberadminBansBan!]
  bansIds: [ID!]
  bans: [MemberbansBan!]
  jobApprovalsIds: [ID!]
  jobApprovals: [MemberjobApprovalsJob!]
  jobPostingsIds: [ID!]
  jobPostings: [MemberjobPostingsJob!]
  subscriptionsIds: [ID!]
  subscriptions: [MembersubscriptionsChapter!]
  workshopsAttendedIds: [ID!]
  workshopsAttended: [MemberworkshopsAttendedWorkshop!]
}

input WorkshopchapterChapter {
  active: Boolean!
  city: String!
  dbCreatedAt: DateTime!
  dbId: Int!
  dbUpdatedAt: DateTime!
  email: String!
  name: String!
  slug: String!
  twitter: String
  membersIds: [ID!]
  members: [ChaptermembersMember!]
  sponsorsIds: [ID!]
  sponsors: [ChaptersponsorsSponsor!]
  workshopsIds: [ID!]
  workshops: [ChapterworkshopsWorkshop!]
}

input WorkshopFilter {
  # Logical AND on all given filters.
  AND: [WorkshopFilter!]

  # Logical OR on all given filters.
  OR: [WorkshopFilter!]
  createdAt: DateTime

  # All values that are not equal to given value.
  createdAt_not: DateTime

  # All values that are contained in given list.
  createdAt_in: [DateTime!]

  # All values that are not contained in given list.
  createdAt_not_in: [DateTime!]

  # All values less than the given value.
  createdAt_lt: DateTime

  # All values less than or equal the given value.
  createdAt_lte: DateTime

  # All values greater than the given value.
  createdAt_gt: DateTime

  # All values greater than or equal the given value.
  createdAt_gte: DateTime
  dateAndTime: DateTime

  # All values that are not equal to given value.
  dateAndTime_not: DateTime

  # All values that are contained in given list.
  dateAndTime_in: [DateTime!]

  # All values that are not contained in given list.
  dateAndTime_not_in: [DateTime!]

  # All values less than the given value.
  dateAndTime_lt: DateTime

  # All values less than or equal the given value.
  dateAndTime_lte: DateTime

  # All values greater than the given value.
  dateAndTime_gt: DateTime

  # All values greater than or equal the given value.
  dateAndTime_gte: DateTime
  dbId: Int

  # All values that are not equal to given value.
  dbId_not: Int

  # All values that are contained in given list.
  dbId_in: [Int!]

  # All values that are not contained in given list.
  dbId_not_in: [Int!]

  # All values less than the given value.
  dbId_lt: Int

  # All values less than or equal the given value.
  dbId_lte: Int

  # All values greater than the given value.
  dbId_gt: Int

  # All values greater than or equal the given value.
  dbId_gte: Int
  id: ID

  # All values that are not equal to given value.
  id_not: ID

  # All values that are contained in given list.
  id_in: [ID!]

  # All values that are not contained in given list.
  id_not_in: [ID!]

  # All values less than the given value.
  id_lt: ID

  # All values less than or equal the given value.
  id_lte: ID

  # All values greater than the given value.
  id_gt: ID

  # All values greater than or equal the given value.
  id_gte: ID

  # All values containing the given string.
  id_contains: ID

  # All values not containing the given string.
  id_not_contains: ID

  # All values starting with the given string.
  id_starts_with: ID

  # All values not starting with the given string.
  id_not_starts_with: ID

  # All values ending with the given string.
  id_ends_with: ID

  # All values not ending with the given string.
  id_not_ends_with: ID
  invitable: Boolean

  # All values that are not equal to given value.
  invitable_not: Boolean
  rsvpCloseTime: DateTime

  # All values that are not equal to given value.
  rsvpCloseTime_not: DateTime

  # All values that are contained in given list.
  rsvpCloseTime_in: [DateTime!]

  # All values that are not contained in given list.
  rsvpCloseTime_not_in: [DateTime!]

  # All values less than the given value.
  rsvpCloseTime_lt: DateTime

  # All values less than or equal the given value.
  rsvpCloseTime_lte: DateTime

  # All values greater than the given value.
  rsvpCloseTime_gt: DateTime

  # All values greater than or equal the given value.
  rsvpCloseTime_gte: DateTime
  rsvpOpenDate: DateTime

  # All values that are not equal to given value.
  rsvpOpenDate_not: DateTime

  # All values that are contained in given list.
  rsvpOpenDate_in: [DateTime!]

  # All values that are not contained in given list.
  rsvpOpenDate_not_in: [DateTime!]

  # All values less than the given value.
  rsvpOpenDate_lt: DateTime

  # All values less than or equal the given value.
  rsvpOpenDate_lte: DateTime

  # All values greater than the given value.
  rsvpOpenDate_gt: DateTime

  # All values greater than or equal the given value.
  rsvpOpenDate_gte: DateTime
  rsvpOpenTime: DateTime

  # All values that are not equal to given value.
  rsvpOpenTime_not: DateTime

  # All values that are contained in given list.
  rsvpOpenTime_in: [DateTime!]

  # All values that are not contained in given list.
  rsvpOpenTime_not_in: [DateTime!]

  # All values less than the given value.
  rsvpOpenTime_lt: DateTime

  # All values less than or equal the given value.
  rsvpOpenTime_lte: DateTime

  # All values greater than the given value.
  rsvpOpenTime_gt: DateTime

  # All values greater than or equal the given value.
  rsvpOpenTime_gte: DateTime
  time: DateTime

  # All values that are not equal to given value.
  time_not: DateTime

  # All values that are contained in given list.
  time_in: [DateTime!]

  # All values that are not contained in given list.
  time_not_in: [DateTime!]

  # All values less than the given value.
  time_lt: DateTime

  # All values less than or equal the given value.
  time_lte: DateTime

  # All values greater than the given value.
  time_gt: DateTime

  # All values greater than or equal the given value.
  time_gte: DateTime
  updatedAt: DateTime

  # All values that are not equal to given value.
  updatedAt_not: DateTime

  # All values that are contained in given list.
  updatedAt_in: [DateTime!]

  # All values that are not contained in given list.
  updatedAt_not_in: [DateTime!]

  # All values less than the given value.
  updatedAt_lt: DateTime

  # All values less than or equal the given value.
  updatedAt_lte: DateTime

  # All values greater than the given value.
  updatedAt_gt: DateTime

  # All values greater than or equal the given value.
  updatedAt_gte: DateTime
  attendees_every: MemberFilter
  attendees_some: MemberFilter
  attendees_none: MemberFilter
  chapter: ChapterFilter
  sponsor: SponsorFilter
}

enum WorkshopOrderBy {
  createdAt_ASC
  createdAt_DESC
  dateAndTime_ASC
  dateAndTime_DESC
  dbId_ASC
  dbId_DESC
  id_ASC
  id_DESC
  invitable_ASC
  invitable_DESC
  rsvpCloseTime_ASC
  rsvpCloseTime_DESC
  rsvpOpenDate_ASC
  rsvpOpenDate_DESC
  rsvpOpenTime_ASC
  rsvpOpenTime_DESC
  time_ASC
  time_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type WorkshopPreviousValues {
  createdAt: DateTime!
  dateAndTime: DateTime!
  dbId: Int!
  id: ID!
  invitable: Boolean!
  rsvpCloseTime: DateTime!
  rsvpOpenDate: DateTime!
  rsvpOpenTime: DateTime!
  time: DateTime!
  updatedAt: DateTime!
}

input WorkshopsponsorSponsor {
  avatar: String
  contactFirstname: String
  contactSurname: String
  dbCreatedAt: DateTime!
  dbId: Int!
  dbUpdatedAt: DateTime!
  description: String
  email: String
  imageCache: String
  name: String!
  numberOfCoaches: Int
  seats: Int!
  website: String
  addressId: ID
  address: SponsoraddressAddress
  chapterId: ID
  chapter: SponsorchapterChapter
  workshopsIds: [ID!]
  workshops: [SponsorworkshopsWorkshop!]
}

input WorkshopSubscriptionFilter {
  # Logical AND on all given filters.
  AND: [WorkshopSubscriptionFilter!]

  # Logical OR on all given filters.
  OR: [WorkshopSubscriptionFilter!]

  # The subscription event gets dispatched when it's listed in mutation_in
  mutation_in: [_ModelMutationType!]

  # The subscription event gets only dispatched when one of the updated fields names is included in this list
  updatedFields_contains: String

  # The subscription event gets only dispatched when all of the field names included in this list have been updated
  updatedFields_contains_every: [String!]

  # The subscription event gets only dispatched when some of the field names included in this list have been updated
  updatedFields_contains_some: [String!]
  node: WorkshopSubscriptionFilterNode
}

input WorkshopSubscriptionFilterNode {
  createdAt: DateTime

  # All values that are not equal to given value.
  createdAt_not: DateTime

  # All values that are contained in given list.
  createdAt_in: [DateTime!]

  # All values that are not contained in given list.
  createdAt_not_in: [DateTime!]

  # All values less than the given value.
  createdAt_lt: DateTime

  # All values less than or equal the given value.
  createdAt_lte: DateTime

  # All values greater than the given value.
  createdAt_gt: DateTime

  # All values greater than or equal the given value.
  createdAt_gte: DateTime
  dateAndTime: DateTime

  # All values that are not equal to given value.
  dateAndTime_not: DateTime

  # All values that are contained in given list.
  dateAndTime_in: [DateTime!]

  # All values that are not contained in given list.
  dateAndTime_not_in: [DateTime!]

  # All values less than the given value.
  dateAndTime_lt: DateTime

  # All values less than or equal the given value.
  dateAndTime_lte: DateTime

  # All values greater than the given value.
  dateAndTime_gt: DateTime

  # All values greater than or equal the given value.
  dateAndTime_gte: DateTime
  dbId: Int

  # All values that are not equal to given value.
  dbId_not: Int

  # All values that are contained in given list.
  dbId_in: [Int!]

  # All values that are not contained in given list.
  dbId_not_in: [Int!]

  # All values less than the given value.
  dbId_lt: Int

  # All values less than or equal the given value.
  dbId_lte: Int

  # All values greater than the given value.
  dbId_gt: Int

  # All values greater than or equal the given value.
  dbId_gte: Int
  id: ID

  # All values that are not equal to given value.
  id_not: ID

  # All values that are contained in given list.
  id_in: [ID!]

  # All values that are not contained in given list.
  id_not_in: [ID!]

  # All values less than the given value.
  id_lt: ID

  # All values less than or equal the given value.
  id_lte: ID

  # All values greater than the given value.
  id_gt: ID

  # All values greater than or equal the given value.
  id_gte: ID

  # All values containing the given string.
  id_contains: ID

  # All values not containing the given string.
  id_not_contains: ID

  # All values starting with the given string.
  id_starts_with: ID

  # All values not starting with the given string.
  id_not_starts_with: ID

  # All values ending with the given string.
  id_ends_with: ID

  # All values not ending with the given string.
  id_not_ends_with: ID
  invitable: Boolean

  # All values that are not equal to given value.
  invitable_not: Boolean
  rsvpCloseTime: DateTime

  # All values that are not equal to given value.
  rsvpCloseTime_not: DateTime

  # All values that are contained in given list.
  rsvpCloseTime_in: [DateTime!]

  # All values that are not contained in given list.
  rsvpCloseTime_not_in: [DateTime!]

  # All values less than the given value.
  rsvpCloseTime_lt: DateTime

  # All values less than or equal the given value.
  rsvpCloseTime_lte: DateTime

  # All values greater than the given value.
  rsvpCloseTime_gt: DateTime

  # All values greater than or equal the given value.
  rsvpCloseTime_gte: DateTime
  rsvpOpenDate: DateTime

  # All values that are not equal to given value.
  rsvpOpenDate_not: DateTime

  # All values that are contained in given list.
  rsvpOpenDate_in: [DateTime!]

  # All values that are not contained in given list.
  rsvpOpenDate_not_in: [DateTime!]

  # All values less than the given value.
  rsvpOpenDate_lt: DateTime

  # All values less than or equal the given value.
  rsvpOpenDate_lte: DateTime

  # All values greater than the given value.
  rsvpOpenDate_gt: DateTime

  # All values greater than or equal the given value.
  rsvpOpenDate_gte: DateTime
  rsvpOpenTime: DateTime

  # All values that are not equal to given value.
  rsvpOpenTime_not: DateTime

  # All values that are contained in given list.
  rsvpOpenTime_in: [DateTime!]

  # All values that are not contained in given list.
  rsvpOpenTime_not_in: [DateTime!]

  # All values less than the given value.
  rsvpOpenTime_lt: DateTime

  # All values less than or equal the given value.
  rsvpOpenTime_lte: DateTime

  # All values greater than the given value.
  rsvpOpenTime_gt: DateTime

  # All values greater than or equal the given value.
  rsvpOpenTime_gte: DateTime
  time: DateTime

  # All values that are not equal to given value.
  time_not: DateTime

  # All values that are contained in given list.
  time_in: [DateTime!]

  # All values that are not contained in given list.
  time_not_in: [DateTime!]

  # All values less than the given value.
  time_lt: DateTime

  # All values less than or equal the given value.
  time_lte: DateTime

  # All values greater than the given value.
  time_gt: DateTime

  # All values greater than or equal the given value.
  time_gte: DateTime
  updatedAt: DateTime

  # All values that are not equal to given value.
  updatedAt_not: DateTime

  # All values that are contained in given list.
  updatedAt_in: [DateTime!]

  # All values that are not contained in given list.
  updatedAt_not_in: [DateTime!]

  # All values less than the given value.
  updatedAt_lt: DateTime

  # All values less than or equal the given value.
  updatedAt_lte: DateTime

  # All values greater than the given value.
  updatedAt_gt: DateTime

  # All values greater than or equal the given value.
  updatedAt_gte: DateTime
  attendees_every: MemberFilter
  attendees_some: MemberFilter
  attendees_none: MemberFilter
  chapter: ChapterFilter
  sponsor: SponsorFilter
}

type WorkshopSubscriptionPayload {
  mutation: _ModelMutationType!
  node: Workshop
  updatedFields: [String!]
  previousValues: WorkshopPreviousValues
}
